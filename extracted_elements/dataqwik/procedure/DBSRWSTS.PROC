//DO NOT MODIFY  DATA-QWIK Report Statistics Print|DBSRWSTS|||||||1
DBSRWSTS(String VSTATS())	/* Private - Part DBSRW*
	ORIG: CHIANG - 1/1/85
	PROCEDURE ID: DBSRWBNR
	DESC: DATA-QWIK Report Statistics Print
	
	---- Comments --------------------------------------------------------
	ARGUMENTS:
		. VSTATS	Accumulated statistics	/REQ/MECH=REFARR:R
				data

	------ Revision History ------------------------------------------------

        07/26/05 - SkariahV- CR16679
	           Removed #WARN directive.
	              
	12/09/03 - Dan Russell - CR 7239
                   Fix PSL warnings for operator precedence.

	12/17/02 - Dan Russell - 51351
		   Moved into PSL.  Removed old change history.

		   This code was originally in routine DBSEXES

	------------------------------------------------------------------------

	I18N=QUIT Excluded from I18N standards
	*/

	type Public Number IOSL,PN,VFMQ,vlc,VLC
	type Public String IO

	type Number LOW,HIGH,TOTAMT,TOTCNT,vcrt
	type String BTYP,SEQ,TYP,VL

	quit:'VSTATS.data()

	set VL=""

	set vcrt=0
	use 0 if $I=IO set vcrt=1,vlc=$$LASTLINE^DBSRWBR

	use IO do HDR quit:VFMQ

	if vcrt do VLOCK

	/* Format of VSTATS(N):
		Count|Total|Low|High|Source|Format|Target|Increments
	*/

	set SEQ=""
	for  set SEQ=$O(VSTATS(SEQ)) quit:SEQ=""  do { quit:VFMQ
		type Number MULTINCS,QUIT,TOPAMT,TOPCNT
		type String COLUMN,INCS,INFO,N,SOURCE,TABLE,TARGET,TC

		if VLC+5>IOSL do HDR quit:VFMQ
		set INFO=VSTATS(SEQ)
		set SOURCE=INFO.piece("|",5),TARGET=INFO.piece("|",7)
		quit:'$$validtcr^DBSRWUTL(SOURCE,.TC)
		set TABLE=TC.piece(".",1),COLUMN=TC.piece(".",2)

		type RecordDBTBL1D src=Db.getRecord("DBTBL1D","%LIBS=""SYSDEV"",FID=:TABLE,DI=:COLUMN")
		
		do VOM

		set VL="<< "_src.des_" >>"
		set QUIT=0
		if SOURCE=TARGET set BTYP=INFO.piece("|",6)
		else  do { quit:QUIT
			if '$$validtcr^DBSRWUTL(TARGET,.TC) set QUIT=1 quit
			set TABLE=TC.piece(".",1),COLUMN=TC.piece(".",2)
			type RecordDBTBL1D trc=Db.getRecord("DBTBL1D","%LIBS=""SYSDEV"",FID=:TABLE,DI=:COLUMN")
			set BTYP=trc.typ
			set VL=VL_$J("",73-VL.length()-trc.des.curVal.length())_"<< "_trc.des_" >>"
			}

		do VOM

		set (TOTAMT,TOTCNT)=0
		set TOPCNT=INFO.piece("|",1),TOPAMT=INFO.piece("|",2)
		set LOW=INFO.piece("|",3),HIGH=INFO.piece("|",4)

		set INCS=INFO.piece("|",8,99)
		if INCS.piece("|",2) set MULTINCS=1
		else  set MULTINCS=0
		
		set TYP=INFO.piece("|",6)
		if "$"[TYP set TYP="E"
		else  if TYP="*" set TYP="T"

		set N=""
		for  set N=$O(VSTATS(SEQ,N)) do { quit:VFMQ!(N="")
			type Number AMT,CNT

			// End of this section, print summary
			if N="" do { quit
				do VOM
				do SUMMARY(.TOTCNT,.TOTAMT,LOW,HIGH,TYP,BTYP)
				}

			if VLC+2>IOSL do HDR quit:VFMQ
			set CNT=VSTATS(SEQ,N).piece("|",1)
			set AMT=VSTATS(SEQ,N).piece("|",2)
			do VOM
			if SOURCE'=TARGET set VL=$J($$CONV(TYP,N),31)
			else  if "TUFL"[TYP!(INCS="") set VL=$J($$CONV(TYP,N),14)_$J("",17)
			else  do {
				type Number OV

				set OV=N*INCS
				if MULTINCS set OV=INCS.piece("|",N-1) if N=1 set OV=LOW
				set VL=$J($$CONV(TYP,OV),14)

				set OV=((N+1)*INCS)-.01
				if MULTINCS set OV=INCS.piece("|",N)-.01 if OV<0 set OV=HIGH
				set VL=VL_" - "_$J($$CONV(TYP,OV),14)
				}
			do ACCUM(CNT,AMT,TYP,BTYP)
			}
		}

	do SUMMARY(TOTCNT,TOTAMT,LOW,HIGH,TYP,BTYP)

	if 'VFMQ do {
		do VOM,VOM
		kill VSTATS
		}

	quit


ACCUM(	Number CNT,	// Private - Accumulate results
	Number AMT,
	String TYP,
	String BTYP)

	type Public Number TOPAMT,TOPCNT,TOTAMT,TOTCNT
	type Public String VL

	// COUNT and % COUNT
	set VL=VL_$J(CNT,15)
	set TOTCNT=TOTCNT+CNT
	set TOTAMT=TOTAMT+AMT

	set VL=VL_$J($$CONV("N",$J(CNT*100/TOPCNT,0,2)),8)


	// TOTAL & % TOTALS
	if BTYP'="" set TYP=BTYP
	quit:'TOPAMT
	quit:"DCLT"[TYP

	set VL=VL_$J($$CONV(TYP,AMT),17)
	set VL=VL_$J($$CONV(TYP,$J(AMT*100/TOPAMT,0,2)),8)

	quit


SUMMARY(Number TOTCNT,	// Private - Summary at end of section
	Number TOTAMT,
	Number LOW,
	Number HIGH,
	String TYP,
	String BTYP)

	type Public Number IOSL,VFMQ,VLC
	type Public String VL

	type String LINES=""

	quit:'TOTCNT

	set LINES.piece("=",43)=""

	if VLC+4>IOSL do HDR quit:VFMQ
	do VOM,VOM
	set VL="       ** LOW **        ** HIGH **   "_LINES
	do VOM
	if VLC+3>IOSL do HDR quit:VFMQ
	do VOM
	if "UTF"'[TYP do {
		set VL=$J($$CONV(TYP,LOW),14)
		set VL=VL_" - "_$J($$CONV(TYP,HIGH),14)
		}
	set VL=VL_$J("",31-VL.length())_$J(TOTCNT,15)
	if "N$"[BTYP set VL=VL_$J($$CONV(BTYP,TOTAMT),25)
	set (TOTCNT,TOTAMT)=0
	do VOM

	quit


CONV(	String TYP,	// Private - convert input to external format
	String INPUT)

	type String NEWVAL=""

	if TYP="T"!(TYP["*")!(TYP="F")!(TYP="U") set NEWVAL=INPUT
	else  if TYP="D",INPUT>0,INPUT<99999 set NEWVAL=$$DAT^%ZM(INPUT) 
	else  if TYP="N" set NEWVAL=INPUT
	else  if TYP="C" set NEWVAL=$$TIM^%ZM(INPUT)
	else  if TYP="E"!(TYP="$") set NEWVAL=$J($FN(INPUT,",",2),2)
	else  if TYP="L" set NEWVAL=$S(INPUT:"Y",1:"N")
	else  if TYP="K" set NEWVAL=$$EXT^%ZM((INPUT+500)\1000,"$",0)
	else  if TYP="X" set NEWVAL=$$EXT^%ZM((INPUT+.5)\1,"$",0)
	quit NEWVAL


HDR	// Private - Print header

	type Public Number vcrt,VL,VLC
	type Public String IO

	if 'vcrt do {					// Flush print buffer
		use IO
		if VL'="" write VL,#
		do VLOCK
		}
	else  do {
		do ^DBSRWBR(2)
		set VLC=5
		}
	quit


VLOCK	// Private - Lock CRT header

	type Public Number PN,VLC,vcrt

	type String VL

	set PN=PN.get()+1,VLC=0
	if vcrt write $$CLRXY^%TRMVT

	// Summary Report
	set VL=$$^MSG(7985)
	do VOM
	set VL="=============="
	do VOM,VOM
	set VL=$J("",15)_"RANGE "_$J("",20)_"COUNT      %"_$J("",12)_"TOTAL       %"
	do VOM
	set VL=""
	set VL.piece("-",80)=""
	do VOM
	if vcrt do ^DBSRWBR(2,1,1) set VLC=5

	quit


VOM     // Private - Output print line

        type Public Number AUXPTR,vcrt,VL,vlc,VLC,VRG
        type Public String IO
 
        // Advance to a new page
        use IO if 'VLC,'vcrt do {                       // Non-CRT device (form feed)
                if 'AUXPTR.get() write $C(12),!
                else  write $$PRNTFF^%TRMVT,!
                set $Y=1
                }
 
        if vcrt<2 write VL,!                            // Output line buffer
        if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)        // Save in BROWSER buffer
        set VLC=VLC+1,VL=""                             // Reset line buffer
        quit
 

VBRSAVE(Number LINE,String DATA)        // Private - Save for report browser

        type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")

        set tmprptbr.jobno=%ProcessID
        set tmprptbr.lineno=LINE
        set tmprptbr.pageno=0
        set tmprptbr.seq=0
        set tmprptbr.data=DATA
        do tmprptbr.bypassSave()
        quit
