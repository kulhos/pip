//DO NOT MODIFY  PSL Method Library - Schema Class|UCSCHEMA|||||||1
	/*
	ORIG:	FSANCHEZ - 10/02/2003
	DESC:	PSL Method Library - SchemaColumn class and SchemaTable Class
		Insensitive group

	---- Revision History --------------------------------------------------
	02/17/06 - Frans S.C. Witte - CRr: 18163 / 18164
		Added isSchCln and isSchTbl.
		Removed "computed" SchemaTable calls (now handled by
		tAssert^UCXDD()).

	12/23/05 - Frans S.C. Witte - CRs: 18727 / 18728
		Replaced this. by PSL. and removed #XECUTE

	03/17/05 - Frans S.C. Witte - CRs: 15028 / 16039
		Moved getSchema() to getSchTbl^UCXDD().
		Moved getComp() to getCmpTbl^UCXDD(), and changed code generation
		for computed properties to reflect this and the new positions.
		Removed subroutine delTable, because it is not called.
		Renamed subroutines that implement SchemaTable properties so they
		all start with the prefixc "tbl".
		Added subroutines tblIsRdb, tblIsMasf, tblMasList, and tblIsCmp
		to generate code for the new properties of SchemaTable.

	10/27/04 - Frans S.C. Witte CRs 11445 / 11446
		Added accessibility of subroutines.
		Subroutine getComp(): Changed type of 'rec' to String.
		Added deprecation warning for Schema.getTableRecord (subroutine
		getTable) and Schema.getTableName (subroutine getName). The
		warning has even been added to delTable, that does NOT implement
		Schema.deleteTable (it is not called at all).
		Removed #WARN and #OPTIMIZE.

	05/12/04 - RussellDS - CR9676
		Move Profile04 version to Profile01 to support single code
		base for PSL.
		   
	03/26/04 - RussellDS - CR9172
		New procedure, part of movement of filers to PSL.
	*/
	// I18N=QUIT
	// *******************************************************************
	// * IMPORTANT NOTE:                                                 *
	// * According to the rules that apply to PSL compiler upgrades,     *
	// * the generated M routine associated with this procedure must be  *
	// * checked into StarTeam and released with the procedure whenever  *
	// * changes are made to this procedure.                             *
	// *                                                                 *
	// * The M routine will be loaded to the mrtns directory during      *
	// * upgrades and will then be removed from that directory as part   *
	// * of the upgrade process.  Therefore, other than during an        *
	// * upgrade an mrtns version of this routine should not exist.      *
	// *                                                                 *
	// * Keep these comments as single line to ensure they exist in the  *
	// * generated M code.                                               *
	// *******************************************************************
	quit

	// ---------------------------------------------------------------------
private getName	// deprecated method Schema.getTableName(String)

	do WARNDEP^UCGM("Schema.getTableName()")
	set PSL.return = PSL.mExpr(PSL.actual(1)_".extract("_PSL.reClass.addQuotes()_".length()+1,"_PSL.actual(1)_".length())")
	quit

	// ---------------------------------------------------------------------
private getSchCln	//void; method Db.getSchemaColumn(String,String)
	/* ---------------------------------------------------------------------
	INPUTS:
	. PSL.actual(1) = name of table (dynamic value allowed)
	. PSL.actual(2) = name of column (dynamic value allowed)

	OUTPUTS:
	. return = code to retrieve value at runtime (getSchCln^UCXDD)
	*/
	set PSL.return="$$getSchCln^UCXDD("_PSL.actual(1)_","_PSL.actual(2)_")"
	quit

	// ---------------------------------------------------------------------
private getSchTbl	//void; method Db.getSchemaTable(String)
	/* ---------------------------------------------------------------------
	INPUTS:
	. PSL.actual(1) = name of table (dynamic value allowed)

	OUTPUTS:
	. return = code to retrieve value at runtime (getSchTbl^UCXDD)
	*/
	set PSL.return="$$getSchTbl^UCXDD("_PSL.actual(1)_")"
	quit

	// ---------------------------------------------------------------------
private getTable	// deprecated method Schema.getTableRecord(String)
	/* This is a deprecated method. It is replaced by Db.getSchemaTable.
	*/

	do WARNDEP^UCGM("Schema.getTableRecord() - use Db.getSchemaTable()")
	do getSchTbl
	quit

	// ---------------------------------------------------------------------
private isSchCln	//void; method Db.isSchemaColumn(String,String)
	/* ---------------------------------------------------------------------
	INPUTS:
	. PSL.actual(1) = name of table (dynamic value allowed)
	. PSL.actual(2) = name of column (dynamic value allowed)

	OUTPUTS:
	. return = code to retrieve value at runtime (isColumn^UCXDD)
	*/
	set PSL.return="$$isColumn^UCXDD("_PSL.actual(1)_","_PSL.actual(2)_")"
	quit

	// ---------------------------------------------------------------------
private isSchTbl	//void; method Db.isSchemaTable(String)
	/* ---------------------------------------------------------------------
	INPUTS:
	. PSL.actual(1) = name of table (dynamic value allowed)

	OUTPUTS:
	. return = code to retrieve value at runtime (isTable^UCXDD)
	*/
	set PSL.return="$$isTable^UCXDD("_PSL.actual(1)_")"
	quit
