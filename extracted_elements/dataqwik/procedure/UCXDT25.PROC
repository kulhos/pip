//DO NOT MODIFY  DQ DBTBL25* access - DD Group|UCXDT25|||||||1
	/*
	ORIG:	Frans S.C. Witte, 2005-08-03
	DESC:	This unit contains subroutines and functions that deal with
		interaction to DBTBL25 and DBTBL25D.
		It belongs to the Dictionary group of the compiler.

	---- Comments ----------------------------------------------------------
	This unit contains functions that return data from DBTBL25 and DBTBL25D.
	These functions are used among others to bootstrap the PSL compiler, and
	the usual functions and subroutines to access these tables cannot be
	invoked.

	---- Revision History --------------------------------------------------
	12/21/06 - Frans S.C. Witte - CRs:  25185 / 25186 / 25187
		$$isProc() and getProc() now accept a mixed case name, and will
		translate it to uppercase before accessing DBTBL25.

	10/19/06 - Frans S.C. Witte - CRs: 22719 / 20613
		Minor changes to $$cmpStamp $$copyright() in anticipation of
		future optimizations.

	03/16/06 - Frans S.C. Witte - CRs: 20280 / 18164
		Added function $$cmpStamp(), and modified $$copyright() to call
		$$cmpStamp()

	03/09/06 - Frans S.C. Witte - CRs: 19821 / 18164
		getSrc(): Copyright notice inserted only if first line has
		complete formallist.

	02/07/06 - Frans S.C. Witte - CRs 18163 / 18164
		Removed insertion of "Source type" (now handled by UCGM).

	12/02/05 - Frans S.C. Witte - CRs: 18727 / 18728
		Modified logic to force first line.
		Added function $$isProc()

	10/21/05 - Frans S.C. Witte - CRs: 17937 / 15593
		Added $$copyright()

	08/03/05 - Frans S.C. Witte - CRs: 15992 / 15993
		New unit. Contains $$getSrc()
	*/
	// I18N=QUIT
	// *******************************************************************
	// * IMPORTANT NOTE:                                                 *
	// * According to the rules that apply to PSL compiler upgrades,     *
	// * the generated M routine associated with this procedure must be  *
	// * checked into StarTeam and released with the procedure whenever  *
	// * changes are made to this procedure.                             *
	// *                                                                 *
	// * The M routine will be loaded to the mrtns directory during      *
	// * upgrades and will then be removed from that directory as part   *
	// * of the upgrade process.  Therefore, other than during an        *
	// * upgrade an mrtns version of this routine should not exist.      *
	// *                                                                 *
	// * Keep these comments as single line to ensure they exist in the  *
	// * generated M code.                                               *
	// *******************************************************************
	quit

	// ---------------------------------------------------------------------
public cmpStamp() //
	/* ---------------------------------------------------------------------
	Return date, time, and user at time of compilation
	*/
	quit (%CurrentDate.toString())_ " "_ (%CurrentTime.toString("24:60"))_ " - "_ %UserName

	// ---------------------------------------------------------------------
public copyright() //
	/* ---------------------------------------------------------------------
	return FIS copyright notice
	*/
	type String line = " //;Copyright(c)"_(%CurrentDate.toString("YEAR"))
	set line = line_" Fidelity National Information Services, Inc.  All Rights Reserved"

	quit line_ " - "_ $$cmpStamp()

	// ---------------------------------------------------------------------
public getSrc(	String proc,	// name of procedure
		String src(),	// PSL source array		/MECH=REFARR:W
		Number level)	// leader inclusion level (*3)
	/* ---------------------------------------------------------------------
	This function creates a src() array that contains the PSL code of the
	procedure from DBTBL25D. The leader preceeding the DBTBL25D code depends
	on the value of level.

	ARGUMENTS:
	(*3) leader inclusion level:
		0 - do not include any leaders.
			This basically returns DBTBL25D only
		1 - include first line only
			This will prepend a first line that has a label equal to
			the routine name, and contains comment only
		2 - include Copyright notice
			This will append a Copyright notice

	OUTPUTS:
	. $$ = name of target routine as specified in DBTBL25

	NOTES:
	. The addition of a copyright notice seems legitimate here, based on the
		assumption that only DATA-QWIK framework procedures will be
		compiled based on the source provided by this function.
	*/

	type String ret = ""
	set proc = proc.upperCase()

	do {
		catch xcpt {
			if xcpt.type["%PSL-E-RECNOFL" quit
			throw xcpt
		}
	
		type RecordDBTBL25 rec = Db.getRecord("DBTBL25","%LIBS='SYSDEV',PROCID = :proc")
		set ret = rec.pgm

		type ResultSet rs = Db.select("CODE","DBTBL25D","%LIBS='SYSDEV' and PROCID = :proc")
		type Number ln = 1
		
		if level>0,rs.next() do {
			type String code = rs.getRow().toString(" ")
			type Boolean bOk = $$isLabel( code, ret)
			/* If the first line starts with the correct label, use
			   that one as the first line. Else generate a standard
			   first line. The original first line will be inserted
			   AFTER the DQ signature. */
			if bOk set src(1) = code
			else  set src(1) = ret_" // DQ Procedure "_ proc_ " - "_ rec.des

			/* If copyright notice requested, insert it only if the
			   label line is complete */
			if level > 1, src(1).length("(")=src(1).length(")") set ln = ln+1, src(ln) = $$copyright()

			/* Insert incorrect original first line after DQ sig */
			if 'bOk set ln = ln+1,src(ln) = code
		} /* end if level,rs.next() */

		while rs.next() set ln = ln+1, src(ln) = rs.getRow().toString(" ")
	} /* end do block protected by catch */

	quit ret

	// ---------------------------------------------------------------------
isLabel( String cod,	// code line to be verified (*1)
	String lbl)	// label to be verified (*2)
	/* ---------------------------------------------------------------------
	This is a simple function that checks if the supplied line of code
	starts with the requested label.
	The label may be preceeded by one of the keywords public, private, or
	local.

	ARGUMENTS:
	(*1) cod = code line
		TABs shall be replaced by SPACEs before calling this function.
		The line may start with one of the keywords 'public', 'private',
		or 'local'
	(*2) lbl = label to be verified
		Only a label shall be provided. The imput value is accepted as
		supplied.

	OUTPUTS:
	. $$ =	0 (line does not start with the supplied label)
		1 (line starts with the supplied label)
	*/
	if cod.isNull() quit 0
	if cod.extract() = " " quit 0

	type String p0 = cod.piece( " ")
	type String p1 = p0.lowerCase()
	if p1 = "private" quit $$isLabel( cod.extract( 9, cod.length()), lbl)
	if p1 = "public"  quit $$isLabel( cod.extract( 8, cod.length()), lbl)	
	if p1 = "local"   quit $$isLabel( cod.extract( 7, cod.length()), lbl)

	quit p0.piece("(") = lbl

	// ---------------------------------------------------------------------
public isProc( String UNIT)	// name of unit
	/* ---------------------------------------------------------------------
	This is a simple function that checks if the supplied unit is a DQ
	procedure.

	OUTPUTS:
	. $$ =	0 (unit is not defined in DBTBL25)
		1 (unit is defined in DBTBL25)
	*/

	quit Db.isDefined( "DBTBL25", "%LIBS='SYSDEV' and PROCID=:UNIT.upperCase()")
