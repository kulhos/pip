//DO NOT MODIFY  After Insert|0|0|0|1|0|0||||
	/*
	---- Revision History -------------------------------------------------
	04/18/06 - RussellDS - CR20967
		   Changed DSTMDD call from obsolete DBSMDD to DBSDF.
		   
		   Fix setMode location in code.
		   
	11/19/05 - RussellDS - CR18065
		   Eliminate use of obsolete table DBTBLMDD.
		   
		   Fix various PSL warnings.
		   
		   Removed old revision history.
	*/
	
	type public String DI, FID
	
	// If this is a Master Dictionary, distribute changes to everyone
	type String ZDI, ZFID, ZVAL
	
	type ResultSet rs=Db.select("MDD","DBTBL1D","%LIBS='SYSDEV' AND MDDFID=:FID AND MDD=:DI") 

	if rs.next() do DSTMDD^DBSDF(FID,DI)

	// Copy this data item to its descendants
	set ZFID=dbtbl1d.fid
	set ZDI=dbtbl1d.di
  
	type RecordDBTBL1D sub = dbtbl1d.copy()

	type ResultSet rs2 = Db.select("FID","DBTBL1","%LIBS='SYSDEV' AND PARFID=:ZFID")
	
	while rs2.next()  do {
		
		// copy data item to sub file
		set sub.fid = rs2.getCol("FID")
		
		do sub.setMode(0)
		do sub.save()
	}
	
	// Check required indicator (node 102)
	quit:(dbtbl1d.di = " ") 

	if dbtbl1d.req do {
		
		// Dummy key
		quit:((DI.extract(1)="""") ! (DI ? 1N.E))
		
		type RecordDBTBL1 dbtbl1 = Db.getRecord("DBTBL1", "%LIBS='SYSDEV',FID=:FID")
		
		set ZVAL = dbtbl1.listreq

		// Add it to the list
		do additem(dbtbl1d.di,.ZVAL,.dbtbl1d)
		
		set dbtbl1.listreq = ZVAL
		
		do dbtbl1.save()
	}

	// Check items with default value (node 101)
	if 'dbtbl1d.dft.isNull() do {
	
		type RecordDBTBL1 dbtbl1 = Db.getRecord("DBTBL1", "%LIBS='SYSDEV',FID=:FID")
		
		set ZVAL = dbtbl1.listdft
	
		do additem(dbtbl1d.di,.ZVAL,.dbtbl1d)
		
		set dbtbl1.listdft = ZVAL
		
		do dbtbl1.save()
	}

	quit
	

additem(String item,
	String list,
	RecordDBTBL1D dbtbl1d)

	type Number i
	type String z

	if list.isNull() set list = item quit
	
	// Already in the list
	if {List}list.contains(item) quit

	for i = 1:1:list.length(",") set z(list.piece(",", i)) = ""
	
	// Add it to the list
	set z(item) = ""
	set (i, list) = ""
	for  set i = z(i).order() quit:i.isNull()  set list = list_","_i
	set list = list.extract(2, list.length())
	
	quit
	

remitem(String item,
	String list,
	RecordDBTBL1D dbtbl1d)

	// Not in the list
	if '{List}list.contains(item) quit

	set list = ","_list_","
	set item = ","_item_","
	
	// Remove it from the list
	set list = list.piece(item, 1)_","_list.piece(item, 2, 99)
	
	// Remove extra comma
	set list = list.extract(2, list.length()-1)
	
	quit
