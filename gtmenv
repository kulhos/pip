#!/bin/bash
# ------------------------------------------------------------------------
# gtmenv - GT.M and PROFILE/Anyware environment script 
#
# Description: 
# This script will define a users GT.M and PROFILE/Anyware environment for
# the directory referenced by the DIR environment variable.  All changes
# needed to this script should be placed in the gtmenv1 script file.  The
# gtmenv1 script file is called at the end of this script file.
#
# Input: None
#
# Output: Assigns GT.M and PROFILE/Anyware environment variables
#
# Usage: . gtmenv or . /directory_path/gtmenv
# 	 $ . /ibs-prod/gtmenv
# 	 or
#	 $ cd /ibs-prod
#	 $ . gtmenv
#
# Setup: At top assign DIR to equal the directory name
#        DIR=/ibs-prod
#        or
#	 DIR=/fms-prod
# ------------------------------------------------------------------------

#Change to the PIP directory
# Directory to define GT.M and PROFILE/Anyware environment variables.
#DIR=/pip
#DIR=$(cd $(dirname ${0}) && pwd)
#use readlink
DIR=/bip

PROFILE_DIR=${DIR}
DIR_REF=`basename ${DIR}|tr "[a-z]" "[A-Z]"`
eval ${DIR_REF}=${DIR}
export PROFILE_DIR ${DIR_REF}

# Set up the GTM distribution variable
gtm_dist=${DIR}/gtm_dist
GTM_DIST=${gtm_dist}
export gtm_dist GTM_DIST

# Set up the SCA GTM variables
SCA_GTMO=${DIR}/util/obj
SCA_RTNS=${DIR}/util
export SCA_GTMO SCA_RTNS 

# Set up the IBS or FMS directory variables (SCAU variables)
SCAU_DIR=${DIR}
SCAU_GBLS=${DIR}/gbls
SCAU_MRTNS=${DIR}/mrtns
SCAU_CRTNS=${DIR}/crtns
SCAU_SRTNS=${DIR}/srtns
SCAU_PRTNS=${DIR}/prtns
SCAU_ZRTNS=${DIR}/zrtns
SCAU_HELP=${DIR}/help
SCAU_SPOOL=${DIR}/spool
SCAU_LOG_DIR=${DIR}/log
SCAU_REPL_DIR=${DIR}/replication
export SCAU_GBLS SCAU_MRTNS SCAU_CRTNS SCAU_SRTNS SCAU_ZRTNS SCAU_SPOOL
export SCAU_PRTNS SCAU_HELP SCAU_DIR
export SCAU_LOG_DIR SCAU_REPL_DIR
eval SCAU_${DIR_REF}_UBG=${DIR}/gbls/mumps.dat
export SCAU_${DIR_REF}_UBG

export PIP_DB=${DIR}/gbls/mumps.dat

# Setup Replication if being used. - Needed for IBS servers

# Set up the GTM specific directory variables
gtmgbldir=${SCAU_GBLS}/mumps.gld
export gtmgbldir

# Unset prior to customization in gtmenv1.  If not defined in gtmenv1
# will be set to default upon returning
unset gtmroutines

# Unset Packages which is defined later
unset SCAU_PACKAGES

# Set SCA path
#PATH=.:${HOME}:/bin:/bin/posix:/usr/bin:/usr/sbin:/usr/contrib/bin:/usr/local/bin:/etc:/usr/ucb:${gtm_dist}:${BUILD_DIR}/install/usrlocalbin
#export PATH

# Set the file mode creation mask
umask 002

# Unset gtm_log and gtm_tmp in the event multiple GT.M versions are used.
unset gtm_log
unset gtm_tmp

# Call custom gtmenv file if it exist.
if [ -f ${DIR}/gtmenv1 ] ; then
   . ${DIR}/gtmenv1
fi

# Call History Archiving if it exists
if [ -f ${DIR}/archenv ] ; then
   . ${DIR}/archenv
fi

# Create search list if SCAU_PACKAGES is defined.  If not defined, set to default.
# Use a predefined gtm routines if defined in gtmenv1
if [ "${gtmroutines:-""}" = "" ] ; then
   rtn_list="${SCAU_PRTNS} ${SCAU_ZRTNS} ${SCAU_SRTNS}/obj(${SCAU_SRTNS}) ${SCAU_MRTNS}/obj(${SCAU_MRTNS}) ${SCAU_CRTNS}/obj(${SCAU_CRTNS}) ${SCA_GTMO}(${SCA_RTNS}) ${gtm_dist}/utf8"
else
   rtn_list=${gtmroutines}
fi
if [ "${SCAU_PACKAGES:-""}" = "" ] ; then
   gtmroutines=${rtn_list}
else
   # Build package search list
   piece=$((1))
   pak_list=""

   package=`echo ${SCAU_PACKAGES}: | cut -f${piece} -d':'` ; piece=$((${piece}+1))

   while [ "${package}" != "" ] ; do
      rtn_package=${SCAU_CRTNS}/${package}
      obj_package=${rtn_package}/obj
      if [ -d ${rtn_package} ] ; then
         if [ ! -d ${obj_package} ] ; then
            rtn_list_package="${rtn_package}"
         else
            rtn_list_package="${obj_package}(${rtn_package})"
         fi
         if [ "`echo ${rtn_list} | grep \" ${rtn_list_package} \"`" = "" ] ; then
            pak_list="${pak_list} ${rtn_list_package}"
         fi
      else
         echo "Invalid Package routine directory for ${package}"
      fi
      package=`echo ${SCAU_PACKAGES}: | cut -f${piece} -d':'` ; piece=$((${piece}+1))
   done

   pak_list="${pak_list} ${SCAU_CRTNS}/obj(${SCAU_CRTNS})"
   org="${SCAU_CRTNS}/obj(${SCAU_CRTNS})"

   gtmroutines="`echo ${rtn_list} | sed \"s/$(echo ${org} | sed 's/\//\\\\\//g')/$(echo ${pak_list} | sed 's/\//\\\\\//g')/g\"`"
   #echo ${rtn_list} | sed "s/$(echo ${org} | sed 's/\//\\\//g')/$(echo ${pak_list} | sed 's/\//\\\//g')/g"
fi
unset org obj_package package pak_list piece
unset rtn_list rtn_list_package rtn_package
export gtmroutines

