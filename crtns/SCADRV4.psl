SCADRV4	//;Function maintenance
	/*
	        ORIG: Frank R. Sanchez  (2497)
	
	---- Revision History ------------------------------------------------
	01/14/04 - RussellDS - CR 7514
		   Eliminated use of table SCATBL0 (obsoleted) and replaced
		   with table SCAMENU.
	
	09/03/02 - SRIVASTAVAN - 49451
                   Converted to PSL.
 	 
	---------------------------------------------------------------------	

	*/


NEW 	//

	do INIT(0)
	quit


UPD 	//

	do INIT(1)
	quit


INQ 	//

	do INIT(2)
	quit


DEL 	//

	do INIT(3)
	quit


INIT(%ProcessMode) //

	new OLNTB,VFMQ
	set %PG=0 
	set %PAGE=1
	if %ProcessMode<2,$G(%IPMODE)'["NOINT" set %PAGE=2
	kill FN
	type RecordSCATBL fSCATBL
        do VPG(.fSCATBL)
        quit


VPG(RecordSCATBL fSCATBL) // Page control

	new FINISH
	set FINISH=0
	for  do { quit:FINISH
                if %PG=0 do VPG00 if ER set FINISH=1 quit
                if %PG=1 do VPG01(.fSCATBL) if "DFQ"[VFMQ do VER(.fSCATBL) set FINISH=1 quit
		if %PG=2,$G(%IPMODE)'["NOINT" do VPG02(.fSCATBL) if ER set FINISH=1 quit
                if "DFQ"[VFMQ do VER(.fSCATBL) set FINISH=1 quit
                set %PG=%PG+1
                }
        quit


VPG00	// Set up

	set %TAB("FN")=".FN2/TBL=[SCATBL]/XPP=D PPFUN^SCADRV4"
	if %ProcessMode=2 set %TAB("IO")=$$IO^SCATAB($I)

	set %READ="@@%FN,,,FN/REQ" set %NOPRMT="N"
	if %ProcessMode=2 set %READ=%READ_",IO/REQ"
	
	do ^UTLREAD 
	
	if VFMQ="Q" set ER=1
	quit


PPFUN	//UID post processor

	if '%OSAVE set I(3)=""
	
	if '%OSAVE,X'="",Db.isDefined("SCATBL","FN=:X") set ET="RECOF" do ERR quit
	if %OSAVE=3 do DELCHK 
	if ER quit

	// SCA can modify anything
	if %UserClass="SCA" quit

	// Z's can be modified
	if $E(X)="Z" quit

	// Inquiry OK
	if %OSAVE=2 quit

	// Userclass ~p1 must use function name starting with ""Z""
	set ER=1 
	set RM=$$^MSG(2897,%UserClass)
	quit


DELCHK	// Ensure cannot delete if linked in a menu or sub-menu

	set (N,M)="" 
	set ER=0

	type DbSet rs=Db.selectDbSet("SCAMENU","MNUMB>:N")
        while rs.next() do {				
                type RecordSCAMENU scamenu=rs.getRecord("SCAMENU")
		set N=scamenu.mnumb
		if N="" quit
		set M=scamenu.snumb
		if M="" quit
		if scamenu.funmenu=X set ER=1 set RM=$$^MSG(1134,N) quit
                }
	if ER quit

	type DbSet rs=Db.selectDbSet("SCATBL4","FN>:N")
	while rs.next() do {
                type RecordSCATBL4 scatbl4=rs.getRecord("SCATBL4")
		set N=scatbl4.fn
                if N="" quit
                set M=scatbl4.seq
                if M="" quit

		// Function is linked on a sub-menu for function ~p1
		if $TR(scatbl4.sub,"@")=X set ER=1 set RM=$$^MSG(1133,N) quit
		}	
	quit


VPG01(RecordSCATBL fSCATBL) // Function screen

	set fSCATBL=Db.getRecord("SCATBL","FN=:FN",1)
	if %ProcessMode=2,IO'=$I do OPEN^SCAIO if ER set VFMQ="Q" quit
	
	do DRV^USID(%ProcessMode,"SCATBL",.fSCATBL)

	quit


VPG02(RecordSCATBL fSCATBL)	// Documentation screen

	set %OSAV=%ProcessMode 
	set %SN="FUNDOC" 
	set PG=FN
	kill DOC
	set N=""
	
	type DbSet rs=Db.selectDbSet("SCATBLDOC","FN=:FN AND SEQ>:N")
	while rs.next() do {
		type RecordSCATBLDOC scatbld=rs.getRecord("SCATBLDOC")
		do scatbld.setAuditFlag(1)
		set DOC(scatbld.seq)=scatbld.doc
		}

	// Turn I18N checking off, phrases OK (I18N=OFF)
	if '$D(DOC) do {
		set DOC(1)="Function Name:  "_FN

		// Function Description
		set DOC(2)="  Description:  "_fSCATBL.desc

		// Program Name
		set DOC(3)="      Routine:  "_fSCATBL.pgm
		set DOC(4)=" "
		}

	// Turn I18N checking back on (I18N=ON)
	set (END,DX,FPF,OVFL,LM,OPT,REGION)=0
	set ARM=71 
	set SRM=80 
	set PIO=$I 
	set %TB=$C(9) 
	set JOB=%ProcessID
	set (DTAB,MR)=5

	// Function Documentation
	do ^DBSWRITE("DOC",3,22,99999,"",$$^MSG(3248))

	set %ProcessMode=%OSAV
	quit


VER(RecordSCATBL fSCATBL) //

	if %ProcessMode=2!(%ProcessMode=4)!(VFMQ="Q") do END quit

	do FILE(.fSCATBL)

	do END

	quit


FILE(RecordSCATBL fSCATBL) //

	new option,seq,TEMP,user

	set option=%ProcessMode
	set (user,seq)=""

	if VFMQ="F",$D(DOC) do {

		do Db.delete("SCATBLDOC","FN=:FN")	

		set X1=""
		for I=1:1 do { quit:X1=""
			set X1=$O(DOC(X1))
			if X1="" quit 
			type RecordSCATBLDOC scatbld=Db.getRecord("SCATBLDOC","FN=:FN,SEQ=:X1",1)
			set scatbld.doc=DOC(X1)
			do scatbld.bypassSave()
			}
		}

	set %ProcessMode=option
	kill X

	if %ProcessMode'=3 do {
		do fSCATBL.save()
		type RecordSCATBL3 scatbl3=Db.getRecord("SCATBL3","FN=:FN,UCLS='SCA'",1)
                do scatbl3.bypassSave()
		type RecordSCATBL3 scatbl3=Db.getRecord("SCATBL3","FN=:FN,UCLS=%UserClass",1)
		do scatbl3.bypassSave()
		}
	else  if VFMQ="D" do {
		do Db.delete("SCATBL","FN=:FN")
		do Db.delete("SCATBLDOC","FN=:FN")
		}


END	//

	if ER!(%ProcessMode=2)!(%ProcessMode=4) quit

	if VFMQ="Q" do {

		// Function ~p1 not created
		if %ProcessMode=0 set RM=$$^MSG(1148,FN) quit

		// Function ~p1 not modified
		if %ProcessMode=1 set RM=$$^MSG(1150,FN) quit

		// Function ~p1 not deleted
		set RM=$$^MSG(1149,FN)
		}
	else  do {

		// Function ~p1 created
		if %ProcessMode=0 set RM=$$^MSG(1144,FN) quit

		// Function ~p1 modified
		if %ProcessMode=1 set RM=$$^MSG(1147,FN) quit

		// Function ~p1 deleted
		set RM=$$^MSG(1145,FN)
		}
	set ER="W"
	quit


PROG	// Check validity of program name

	new Z
	if X="" quit
	set Z=X

	// Program name must contain the ^ symbol
	if Z'["^" do { quit
		set ER=1 
		set RM=$$^MSG(2273) 
		}

	// Strip off parameter passing
	set Z=$P(Z,"(",1)

	// Program ~p1 does not exist
	if '$$VALID^%ZRTNS($P(Z,"^",2)) do {
		set ER=1 
		set RM=$$^MSG(2275,Z)
		}
	quit


ERR	//

	set ER=1 
	
	do ^UTLERR
	set VFMQ="Q"
	quit
 #OPTION ResultClass ON
public String vSIG()	quit "59553^73403^Dan Russell^5290"	// Signature - LTD^TIME^USER^SIZE
