V00S055(Number %ProcessMode,RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14)   // -  - SID= <DBTBL14> Data-Item Protection
 ;;Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:33 - pip
 // (DESC,PROT,RUCLS)#1
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'dbtbl14q(1).exists() set dbtbl14q(1) = Class.new("RecordDBTBL14Q")
  if 'dbtbl14.exists() set dbtbl14 = Class.new("RecordDBTBL14")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="DBTBL14",VPGM=$T(+0),VSNAME="Data-Item Protection"
 set VFSN("DBTBL14")="zdbtbl14",VFSN("DBTBL14Q")="zdbtbl14q"
 set vPSL=1
 set KEYS(1)=dbtbl14.PLIBS
 set KEYS(2)=dbtbl14.FID
 set KEYS(3)=dbtbl14.DINAM
 set KEYS(4)=dbtbl14.GROUP
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=11 do VPR(.dbtbl14q(),.dbtbl14),VDA1(.dbtbl14q(),.dbtbl14),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.dbtbl14q(),.dbtbl14),VPR(.dbtbl14q(),.dbtbl14),VDA1(.dbtbl14q(),.dbtbl14)
 if %ProcessMode do VLOD(.dbtbl14q(),.dbtbl14) quit:$G(ER)  do VPR(.dbtbl14q(),.dbtbl14),VDA1(.dbtbl14q(),.dbtbl14)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.dbtbl14q(),.dbtbl14)
 type Number ptr
 set ptr=""
 for  set ptr = dbtbl14q(ptr).order() quit:ptr.isNull()  do {
     if dbtbl14q(ptr).QUERY="" kill dbtbl14q(ptr)
     }
	quit


VNEW(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14) // Initialize arrays if %O=0
 
 do VDEF(.dbtbl14q(),.dbtbl14)
 do VLOD(.dbtbl14q(),.dbtbl14)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=11
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14) // Display screen prompts
 set VO="30||13|0"
 set VO(0)="|0"
 set VO(1)=$C(2,1,80,0,0,0,0,0,0,0)_"11Tlqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk"
 set VO(2)=$C(3,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(3)=$C(3,2,10,0,0,0,0,0,0,0)_"01TFile Name:"
 set VO(4)=$C(3,26,8,0,0,0,0,0,0,0)_"01TUser ID:"
 set VO(5)=$C(3,56,13,0,0,0,0,0,0,0)_"01TLast Updated:"
 set VO(6)=$C(3,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(7)=$C(4,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(8)=$C(4,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(9)=$C(5,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(10)=$C(5,2,10,0,0,0,0,0,0,0)_"01TData Item:"
 set VO(11)=$C(5,28,12,0,0,0,0,0,0,0)_"01T Group Code:"
 set VO(12)=$C(5,49,15,1,0,0,0,0,0,0)_"01T Access Option:"
 set VO(13)=$C(5,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(14)=$C(6,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(15)=$C(6,49,15,1,0,0,0,0,0,0)_"01T 1-Read   2-No "
 set VO(16)=$C(6,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(17)=$C(7,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(18)=$C(7,2,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(19)=$C(7,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(20)=$C(8,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(21)=$C(8,2,1,0,0,0,0,0,0,0)_"01T "
 set VO(22)=$C(8,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(23)=$C(9,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(24)=$C(9,21,29,1,0,0,0,0,0,0)_"01T   Restricted  Userclasses   "
 set VO(25)=$C(9,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(26)=$C(10,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(27)=$C(10,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(28)=$C(11,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(29)=$C(11,26,20,1,0,0,0,0,0,0)_"01T Query  Definitions "
 set VO(30)=$C(11,80,1,0,0,0,0,0,0,0)_"11Tx"
 if '%MODS.exists() set %MODS=1
 set DY=12 for I=%MODS:1:%REPEAT+%MODS-1 do VRPR(.dbtbl14q(),.dbtbl14)
 set VO=(+VO)_"|"_(VO+1)_"|13" quit  // BOD pointer
 
VRPR(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14)  // Display prompts %REPEAT times
 
 set VO(VO+1)=$C(DY,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(VO+2)=$C(DY,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO=VO+2,DY=DY+1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14)  // Display screen data
 new V
 //
 set VX=$P(VO,"|",2)
 set VO(VX+0)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID($G(%FN)))
 set VO(VX+1)=$C(3,13,12,2,0,0,0,0,0,0)_"01T"_$E(dbtbl14.FID,1,12)
 set VO(VX+2)=$C(3,35,20,2,0,0,0,0,0,0)_"01T"_$E(dbtbl14.UID,1,20)
 set VO(VX+3)=$C(3,70,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(dbtbl14.DATE)
 set VO(VX+4)=$C(5,13,15,2,0,0,0,0,0,0)_"01T"_$E(dbtbl14.DINAM,1,15)
 set VO(VX+5)=$C(5,41,2,2,0,0,0,0,0,0)_"01N"_dbtbl14.GROUP
 set VO(VX+6)=$C(5,65,1,2,0,0,0,0,0,0)_"00N"_dbtbl14.PROT
 set VO(VX+7)=$C(7,16,50,2,0,0,0,0,0,0)_"00T"_$E(dbtbl14.DESC,1,50)
 set VO(VX+8)=$C(10,2,75,2,0,0,0,0,0,0)_"00T"_$E(dbtbl14.RUCLS1,1,75)
  
 set:'%MODS.exists() %MODS=1 set VX=VO.piece("|",2)+8,DY=12 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.dbtbl14q(),.dbtbl14)
 set VO.piece("|",1)=VX quit  // EOD pointer
 
VRDA(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14)  // Display data %REPEAT times
 //instantiate new object if necessary
  #ACCEPT;DATE=08/08/06; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEPRECATED
  if 'dbtbl14q(I).getPointer() do {
     set dbtbl14q(I)=Class.new("RecordDBTBL14Q","$G(KEYS(1)),$G(KEYS(2)),$G(KEYS(3)),$G(KEYS(4))")
     }
 set VO(VX+1)=$C(DY,2,70,2,0,0,0,0,0,0)_"00T"_$E(dbtbl14q(I).QRYDESC,1,70)
 set DY=DY+1,VX=VX+1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=8,%MOD=1,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=11+%REPEAT,BLKSIZ=(70*%REPEAT)+185,PGM=$T(+0),DLIB="SYSDEV",DFID="DBTBL14Q,DBTBL14"
 set OLNTB=VPB*1000
 
 set VFSN("DBTBL14")="zdbtbl14",VFSN("DBTBL14Q")="zdbtbl14q"
 //
 for I=10:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(2,12,12)_"21U12402|1|[DBTBL14]FID||if X?1A.AN!(X?1""%"".AN)!(X?.A.""_"".E)|||||||25"
 set %TAB(2)=$C(2,34,20)_"21T12415||[DBTBL14]UID"
 set %TAB(3)=$C(2,69,10)_"21D12406||[DBTBL14]DATE"
 set %TAB(4)=$C(4,12,15)_"21U12403|1|[DBTBL14]DINAM||if X?1""%"".AN!(X?.A.""_"".E)|||||||25"
 set %TAB(5)=$C(4,40,2)_"21N12404|1|[DBTBL14]GROUP"
 set %TAB(6)=$C(4,64,1)_"01N12402||[DBTBL14]PROT"
 set %TAB(7)=$C(6,15,50)_"01T12401||[DBTBL14]DESC"
 set %TAB(8)=$C(9,1,75)_"01T12403||[DBTBL14]RUCLS1|||do VP1^V00S055(.dbtbl14q,.dbtbl14)"
 set %TAB(9)=$C(11,1,70)_"00T12401|1|[DBTBL14Q]QRYDESC|||do VP2^V00S055(.dbtbl14q,.dbtbl14)"
 do VTBL(.dbtbl14q(),.dbtbl14)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14) //
	/* ---- Revision History ---------------------------------------------
	08/01/06 - RussellDS - CR22447
		   Correct error in handling of XU2.  Cleaned up logic.
	----------------------------------------------------------------------
	*/

	// Check valid syntax      *,ABC*,AB-CD,'ABC

	type public Boolean ER
	type public String RM, X
	
	type Boolean isDone
	type Number I
	type String XU, XU2

	quit:X.isNull()
	
	set ER = 0

	for I = 1:1:X.length(",") do { quit:ER
		
		set XU = X.piece(",", I)
		quit:XU.isNull()

		set XU2 = XU.extract(2, XU.length())	// Strip leading '

		// All userclasses
		if (XU = "*") set RM = $$^MSG(245)
		// Single user class - OK
		else  if (XU ? 1AN.AN), Db.isDefined("SCAU0", "UCLS=:XU")
		// Range - from-to
		else  if (XU ? 1AN.AN1"-"1AN.AN) set RM = $$^MSG(2305)
		// Range - AB* from AB to ABz
		else  if (XU ? 1AN.AN1"*") set RM = $$^MSG(2305)
		// All except ~p1 - 'AB except AB
		else  if (XU ? 1"'"1AN.AN), Db.isDefined("SCAU0", "UCLS=:XU2") set RM = $$^MSG(242, XU2)
		else  do {
		
			set ER = 1
			// Invalid syntax for userclass ~p1
			set RM = $$^MSG(1478, X)
		}
	}
	
	quit


VP2(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14) //
	type public Boolean ER
	type public String RM, X

	type Number CNT, INDEX

	quit:X.isNull()

	set ER = 0

	set CNT = X.length("]")
	for INDEX = 1:1:CNT - 1 do { quit:ER

		if X.piece("]", INDEX).piece("[", 2) '= dbtbl14.FID do {

			set ER = 1
			// The table used in the query must match the protected table ~p1
			set RM = $$^MSG(3981, dbtbl14.FID)
		}
	}

	if 'ER do ^DBSQRY

	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordDBTBL14Q dbtbl14q()
 type Public RecordDBTBL14 dbtbl14
 do VPR(.dbtbl14q(),.dbtbl14)
 do VDA1(.dbtbl14q(),.dbtbl14)
 do ^DBSPNT()
 quit

VW(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14)
 do VDA1(.dbtbl14q(),.dbtbl14)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordDBTBL14Q dbtbl14q(),RecordDBTBL14 dbtbl14)
 do VDA1(.dbtbl14q(),.dbtbl14)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordDBTBL14Q dbtbl14q()
 type Public RecordDBTBL14 dbtbl14
 do VDA1(.dbtbl14q(),.dbtbl14)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordDBTBL14Q dbtbl14q()
 if sn="DBTBL14Q" do vSET1(dbtbl14q(I(1)),di,X)
 type Public RecordDBTBL14 dbtbl14
 if sn="DBTBL14" do vSET2(.dbtbl14,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordDBTBL14Q dbtbl14q,di,X)
 do dbtbl14q.setAuditFlag(1)
 set dbtbl14q.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET2(RecordDBTBL14 dbtbl14,di,X)
 do dbtbl14.setAuditFlag(1)
 set dbtbl14.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordDBTBL14Q dbtbl14q()
 if fid="DBTBL14Q" quit $$vREAD1(dbtbl14q(I(1)),di)
 type Public RecordDBTBL14 dbtbl14
 if fid="DBTBL14" quit $$vREAD2(.dbtbl14,di)
 quit ""
vREAD1(RecordDBTBL14Q dbtbl14q,di)
 quit dbtbl14q.@di
vREAD2(RecordDBTBL14 dbtbl14,di)
 quit dbtbl14.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
