R00S055	// DBSSCRLSTLNK - DATA-QWIK Screen Definition Linked
	// Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:38 - pip

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String DOC,SID,vudwhere
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"

	set RID="DBSSCRLSTLNK"
	set RN="DATA-QWIK Screen Definition Linked"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()											// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DBTBL2]SID|[DBTBL2]SID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Screen Name|||||"

	set %READ="IO/REQ,VIN1#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String DOC,SID,vudwhere
	type public String VIN1
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),ZLINK,ZPREPP,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="DBSSCRLSTLNK",RN="DATA-QWIK Screen Definition Linked"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=ACCESS
			type String CHRSET=$$^UCIOENCD("Report","DBSSCRLSTLNK","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60											// Non-interactive
	else  do {											// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$CLEARXY^%TRMVT
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$SCR132^%TRMVT											// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DBTBL2]SID "_VIN1,SEQ=SEQ+1
		set DQQRY(SEQ)="[DBTBL2]LNK1'=""""",SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DBTBL2") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1										// Group break flags
			set VT(I)=0											// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DBTBL2.LIBS,DBTBL2.SID,DBTBL2.DESC,DBTBL2.VPGM,DBT"
	set VSELECT=VSELECT_"BL2.UID,DBTBL2.DATE,DBTBL2.PFID,DBTBL2.SCRCLR,DBTB"
	set VSELECT=VSELECT_"L2.REPEAT,DBTBL2.RESFLG,DBTBL2.REPREQ,DBTBL2.LNK1,"
	set VSELECT=VSELECT_"DBTBL2.LNK2,DBTBL2.LNK3,DBTBL2.LNK4,DBTBL2.LNK5,DB"
	set VSELECT=VSELECT_"TBL2.LNK6,DBTBL2.LNK7,DBTBL2.LNK8,DBTBL2.LNK9,DBTB"
	set VSELECT=VSELECT_"L2.LNK10,DBTBL2.LNK11,DBTBL2.LNK12,DBTBL2.LNK13,DB"
	set VSELECT=VSELECT_"TBL2.LNK14,DBTBL2.LNK15,DBTBL2.LNK16,DBTBL2.LNK17,"
	set VSELECT=VSELECT_"DBTBL2.LNK18,DBTBL2.LNK19,DBTBL2.LNK20,DBTBL2.LNK2"
	set VSELECT=VSELECT_"1,DBTBL2.LNK22,DBTBL2.LNK23,DBTBL2.LNK24,DBTBL2.LN"
	set VSELECT=VSELECT_"K25,DBTBL2.LNK26,DBTBL2.LNK27,DBTBL2.LNK28"

	set VWHERE=""
	if vudwhere.exists() set VWHERE=vudwhere
	#ACCEPT DATE=02/24/2010;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DBTBL2",VWHERE,"DBTBL2.LIBS,DBTBL2.SID","","DQMODE=1")
	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39
	set vc1=V.piece(9.char(),1)											// DBTBL2.LIBS
	set vc2=V.piece(9.char(),2)											// DBTBL2.SID
	set vc3=V.piece(9.char(),3)											// DBTBL2.DESC
	set vc4=V.piece(9.char(),4)											// DBTBL2.VPGM
	set vc5=V.piece(9.char(),5)											// DBTBL2.UID
	set vc6=V.piece(9.char(),6)											// DBTBL2.DATE
	set vc7=V.piece(9.char(),7)											// DBTBL2.PFID
	set vc8=V.piece(9.char(),8)											// DBTBL2.SCRCLR
	set vc9=V.piece(9.char(),9)											// DBTBL2.REPEAT
	set vc10=V.piece(9.char(),10)											// DBTBL2.RESFLG
	set vc11=V.piece(9.char(),11)											// DBTBL2.REPREQ
	set vc12=V.piece(9.char(),12)											// DBTBL2.LNK1
	set vc13=V.piece(9.char(),13)											// DBTBL2.LNK2
	set vc14=V.piece(9.char(),14)											// DBTBL2.LNK3
	set vc15=V.piece(9.char(),15)											// DBTBL2.LNK4
	set vc16=V.piece(9.char(),16)											// DBTBL2.LNK5
	set vc17=V.piece(9.char(),17)											// DBTBL2.LNK6
	set vc18=V.piece(9.char(),18)											// DBTBL2.LNK7
	set vc19=V.piece(9.char(),19)											// DBTBL2.LNK8
	set vc20=V.piece(9.char(),20)											// DBTBL2.LNK9
	set vc21=V.piece(9.char(),21)											// DBTBL2.LNK10
	set vc22=V.piece(9.char(),22)											// DBTBL2.LNK11
	set vc23=V.piece(9.char(),23)											// DBTBL2.LNK12
	set vc24=V.piece(9.char(),24)											// DBTBL2.LNK13
	set vc25=V.piece(9.char(),25)											// DBTBL2.LNK14
	set vc26=V.piece(9.char(),26)											// DBTBL2.LNK15
	set vc27=V.piece(9.char(),27)											// DBTBL2.LNK16
	set vc28=V.piece(9.char(),28)											// DBTBL2.LNK17
	set vc29=V.piece(9.char(),29)											// DBTBL2.LNK18
	set vc30=V.piece(9.char(),30)											// DBTBL2.LNK19
	set vc31=V.piece(9.char(),31)											// DBTBL2.LNK20
	set vc32=V.piece(9.char(),32)											// DBTBL2.LNK21
	set vc33=V.piece(9.char(),33)											// DBTBL2.LNK22
	set vc34=V.piece(9.char(),34)											// DBTBL2.LNK23
	set vc35=V.piece(9.char(),35)											// DBTBL2.LNK24
	set vc36=V.piece(9.char(),36)											// DBTBL2.LNK25
	set vc37=V.piece(9.char(),37)											// DBTBL2.LNK26
	set vc38=V.piece(9.char(),38)											// DBTBL2.LNK27
	set vc39=V.piece(9.char(),39)											// DBTBL2.LNK28
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

        //Incoming=DOC,SID,vudwhere
        type Public Number DOC
        type Public String vudwhere
        set DOC=0
        // set vudwhere=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data

	quit

VPRINT	// Print section
	type public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(3)=1											// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0										// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type public String vc1,vovc1,vc2,vovc2
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1
	quit

VSUM	// Report Group Summary
	type public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type public Number VRWOPT(),VT()
	type public String VSTATS()

	set VT(3)=VT(3)+1
	quit

VDTL3	// Detail
	type public String %TIM,DOC,IOSL,SID,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),ZLINK,ZPREPP,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate,vudwhere

	if VLC+7>IOSL do VHDG0 quit:VFMQ

	set VL=" "_("Name: ")
	set VL=VL_"".justify(7-VL.length())_($E(vc2,1,12))
	set VL=VL_"".justify(24-VL.length())_($E(vc3,1,40))
	set VL=VL_"".justify(67-VL.length())_("Program:")
	set VL=VL_"".justify(77-VL.length())_($E(vc4,1,8))
	set VL=VL_"".justify(87-VL.length())_("User ID:")
	set VL=VL_"".justify(96-VL.length())_($E(vc5,1,16))
	set VL=VL_"".justify(114-VL.length())_("Date: ")
	set VL=VL_"".justify(120-VL.length())_($J($$DAT^%ZM(vc6),10))
	do VOM
	do VOM
	set VL="                        "_("Files:")
	set VL=VL_"".justify(32-VL.length())_($E(vc7,1,40))
	set VL=VL_"".justify(88-VL.length())_("Screen Clear Option: ")
	set VL=VL_"".justify(109-VL.length())_($J(vc8,1))
	set VL=VL_"".justify(114-VL.length())_("Repeat Region: ")
	set VL=VL_"".justify(129-VL.length())_($J(vc9,2))
	do VOM
	set VL="                                                                                           "_("Protection Logic:")
	set VL=VL_"".justify(109-VL.length())_($S(vc10:"Y",1:"N"))
	set VL=VL_"".justify(113-VL.length())_("Group Required:")
	set VL=VL_"".justify(129-VL.length())_($E(vc11,1,2))
	do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(ZPREPP,1,60) set VL="                         "_V
	do VOM
	do VP2 quit:VFMQ!verror.get()  set V=$E(ZLINK,1,60) set VL="                         "_V
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	quit


VHDG0	// Page Header
	type public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DOC,RID,RN,SID,VL,ZLINK,ZPREPP,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate,vudwhere
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit											// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+5,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM.get(),1,45)
	set VL=VL_"".justify(100-VL.length())_("Run Date:")
	set VL=VL_"".justify(110-VL.length())_($E(vrundate,1,10))
	set VL=VL_"".justify(123-VL.length())_($E(%TIM,1,8))
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_"".justify(102-VL.length())_("System:")
	set VL=VL_"".justify(110-VL.length())_($E(vsysdate,1,10))
	set VL=VL_"".justify(122-VL.length())_("Page:")
	set VL=VL_"".justify(128-VL.length())_($E($J(VPN,3),1,3))
	do VOM
	do VOM
	set VL="    "_("Data Item Name             Field Name/Description                Size  Format      Style            Req   Line  Column  Protect")
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)											// Lock report page heading

	quit


VRSUM	// Report Summary
	type public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type public String %TIM,ZLINK,ZPREPP,vovc1,vovc2,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	quit

VOM	// Output print line
	type public Number AUXPTR,vcrt,vlc,VLC,VRG
	type public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {											// Non-CRT device (form feed)
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if 'AUXPTR.get() write 12.char(),!
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if vcrt<2 write VL,!											// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)										// Save in BROWSER buffer
	set VLC=VLC+1,VL=""											// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: ZPREPP

	type public String vc2
	type Public Number verror
	type Public String ZPREPP
	type Number SEQ
	type String SID

	set SID=vc2

	// I18N=OFF: Excluded from I18N standards
	set verror=0
	for SEQ=81,61,101,121,1,21,41 do ZDBSPP2(SEQ,SID) quit:verror
	set ZPREPP=""
	quit

ZDBSPP2(Number SEQ,String SID)	/*
	Arguments:
		. SEQ	User defined processors (screen pre,
			screen post,VLOD,set definition,data-entry
			pre-processor)
		. SID	Screen name
	*/

	type Public Number verror
	type Public String VL
	type Number END,START

	set START=SEQ-.001,END=SEQ+20
	type ResultSet rs=Db.select("CODE","DBTBL2PP","LIBS='SYSDEV' AND SID=:SID AND SEQ=0 AND PSEQ>:START AND PSEQ<:END","PSEQ ASC")
	quit:rs.isEmpty()
	if SEQ=1 set VL="Data Entry Pre-Processor"
	else  if SEQ=21 set VL="Screen Post-Processor"
	else  if SEQ=41 set VL="Required Data Item Set Definition"
	else  if SEQ=61 set VL="Screen Pre-Processor"
	else  if SEQ=81 set VL="Documentation"
	else  if SEQ=101 set VL="User Defined VLOD Definition"
	else  if SEQ=121 set VL="Display Pre-Processor"
	else  set VL=""
	set VL=$J("",25)_"<"_VL_">" do ZPPDSP quit:verror
	set VL=" " do ZPPDSP quit:verror
	while rs.next() do {
		set VL=$J("",25)_rs.getRow()
		do ZPPDSP quit:verror
		}
	set VL=" " do ZPPDSP quit:verror
	quit

ZPPDSP	// Display line
	type Public Number IOSL,verror,VFMQ,VLC
	if VLC+2>IOSL do {
		do VHDG0
		if VFMQ set verror=1
		}
	else  do VOM
	quit
	// I18N=ON

VP2	// Column pre-processor - Variable: ZLINK

	type public String vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39
	type Public String IOSL,PREPP,VFMQ,VL,VLC,XYZ,ZLINK,ZLNKFLG,ZLNKNAM,ZTEXT,verror
	set ZLINK="" set PREPP="" set ZLNKFLG=0
	if vc12="" quit
	set ZLNKFLG=1,verror=0
	do ZPNTLNK(vc12) quit:verror
	do ZPNTLNK(vc13) quit:verror
	do ZPNTLNK(vc14) quit:verror
	do ZPNTLNK(vc15) quit:verror
	do ZPNTLNK(vc16) quit:verror
	do ZPNTLNK(vc17) quit:verror
	do ZPNTLNK(vc18) quit:verror
	do ZPNTLNK(vc19) quit:verror
	do ZPNTLNK(vc20) quit:verror
	do ZPNTLNK(vc21) quit:verror
	do ZPNTLNK(vc22) quit:verror
	do ZPNTLNK(vc23) quit:verror
	do ZPNTLNK(vc24) quit:verror
	do ZPNTLNK(vc25) quit:verror
	do ZPNTLNK(vc26) quit:verror
	do ZPNTLNK(vc27) quit:verror
	do ZPNTLNK(vc28) quit:verror
	do ZPNTLNK(vc29) quit:verror
	do ZPNTLNK(vc30) quit:verror
	do ZPNTLNK(vc31) quit:verror
	do ZPNTLNK(vc32) quit:verror
	do ZPNTLNK(vc33) quit:verror
	do ZPNTLNK(vc34) quit:verror
	do ZPNTLNK(vc35) quit:verror
	do ZPNTLNK(vc36) quit:verror
	do ZPNTLNK(vc37) quit:verror
	do ZPNTLNK(vc38) quit:verror
	do ZPNTLNK(vc39) quit:verror
	set ZLINK=""
	quit 
ZPNTLNK(String SID) //
	type Public String VL
	quit:SID=""
	type RecordDBTBL2 dbtbl2=Db.getRecord("DBTBL2","LIBS='SYSDEV',SID=:SID",1)
	quit:'dbtbl2.getMode()
	set VL=$J("",25)_SID_$J("",20-$L(SID))_dbtbl2.desc
	do ZPPDSP
	quit
