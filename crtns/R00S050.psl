R00S050	// DBSQRPLST - QWIK Report Definition Listing
	// Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:38 - pip

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="DBSQRPLST"
	set RN="QWIK Report Definition Listing"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),ZFORMAT,ZSTAT,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="DBSQRPLST",RN="QWIK Report Definition Listing"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=ACCESS
			type String CHRSET=$$^UCIOENCD("Report","DBSQRPLST","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60											// Non-interactive
	else  do {											// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$CLEARXY^%TRMVT
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$SCR132^%TRMVT											// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:2 do {
			set (vh(I),VD(I))=0,vs(I)=1										// Group break flags
			set VT(I)=0											// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DBTBL5Q.LIBS,DBTBL5Q.QRID,DBTBL5Q.DESC,DBTBL5Q.UID,DBTBL5Q.LTD,DBTBL5Q.PGM,DBTBL5Q.TRANS,DBTBL5Q.PFID,DBTBL5Q.DTL,DBTBL5Q.BANNER,DBTBL5Q.STAT,DBTBL5Q.MSQL,DBTBL5Q.CSCMP,DBTBL5Q.ORDERBY,DBTBL5Q.BREAKON,DBTBL5Q.FLD1,DBTBL5Q.FLD2,DBTBL5Q.FLD3,DBTBL5Q.FLD4,DBTBL5Q.FLD5,DBTBL5Q.QID1,DBTBL5Q.QID2,DBTBL5Q.QID3,DBTBL5Q.QID4,DBTBL5Q.QID5,DBTBL5Q.QID6,DBTBL5Q.QID7,DBTBL5Q.QID8,DBTBL5Q.QID9,DBTBL5Q.QID10","DBTBL5Q","DBTBL5Q.QRID IN (SELECT ELEMENT FROM TMPDQ WHERE PID=:%ProcessID)","DBTBL5Q.LIBS,DBTBL5Q.QRID","","DQMODE=1")
	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30
	set vc1=V.piece(9.char(),1)											// DBTBL5Q.LIBS
	set vc2=V.piece(9.char(),2)											// DBTBL5Q.QRID
	set vc3=V.piece(9.char(),3)											// DBTBL5Q.DESC
	set vc4=V.piece(9.char(),4)											// DBTBL5Q.UID
	set vc5=V.piece(9.char(),5)											// DBTBL5Q.LTD
	set vc6=V.piece(9.char(),6)											// DBTBL5Q.PGM
	set vc7=V.piece(9.char(),7)											// DBTBL5Q.TRANS
	set vc8=V.piece(9.char(),8)											// DBTBL5Q.PFID
	set vc9=V.piece(9.char(),9)											// DBTBL5Q.DTL
	set vc10=V.piece(9.char(),10)											// DBTBL5Q.BANNER
	set vc11=V.piece(9.char(),11)											// DBTBL5Q.STAT
	set vc12=V.piece(9.char(),12)											// DBTBL5Q.MSQL
	set vc13=V.piece(9.char(),13)											// DBTBL5Q.CSCMP
	set vc14=V.piece(9.char(),14)											// DBTBL5Q.ORDERBY
	set vc15=V.piece(9.char(),15)											// DBTBL5Q.BREAKON
	set vc16=V.piece(9.char(),16)											// DBTBL5Q.FLD1
	set vc17=V.piece(9.char(),17)											// DBTBL5Q.FLD2
	set vc18=V.piece(9.char(),18)											// DBTBL5Q.FLD3
	set vc19=V.piece(9.char(),19)											// DBTBL5Q.FLD4
	set vc20=V.piece(9.char(),20)											// DBTBL5Q.FLD5
	set vc21=V.piece(9.char(),21)											// DBTBL5Q.QID1
	set vc22=V.piece(9.char(),22)											// DBTBL5Q.QID2
	set vc23=V.piece(9.char(),23)											// DBTBL5Q.QID3
	set vc24=V.piece(9.char(),24)											// DBTBL5Q.QID4
	set vc25=V.piece(9.char(),25)											// DBTBL5Q.QID5
	set vc26=V.piece(9.char(),26)											// DBTBL5Q.QID6
	set vc27=V.piece(9.char(),27)											// DBTBL5Q.QID7
	set vc28=V.piece(9.char(),28)											// DBTBL5Q.QID8
	set vc29=V.piece(9.char(),29)											// DBTBL5Q.QID9
	set vc30=V.piece(9.char(),30)											// DBTBL5Q.QID10
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0
	if 'VFMQ do VSUM
	if 'VFMQ do VRSUM
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data

	quit

VPRINT	// Print section
	type public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0										// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(2).get() do VDTL2 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(2)
	type public String vc1,vovc1,vc2,vovc2
	set VH0=1											// Page break
	type Number vb1,vb2
	set (vb1,vb2)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,VH0=1
	quit

VSUM	// Report Group Summary
	type public Number VFMQ,vs()
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type public Number VRWOPT(),VT()
	type public String VSTATS()

	set VT(2)=VT(2)+1
	quit

VDTL2	// Detail
	type public String %TIM,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),ZFORMAT,ZSTAT,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if VLC+26>IOSL do VHDG0 quit:VFMQ

	set VL=" "_("Name: ")
	set VL=VL_"".justify(7-VL.length())_($E(vc2,1,12))
	set VL=VL_"".justify(23-VL.length())_($E(vc3,1,40))
	set VL=VL_"".justify(81-VL.length())_("User ID: ")
	set VL=VL_"".justify(90-VL.length())_($E(vc4,1,20))
	set VL=VL_"".justify(113-VL.length())_("Date: ")
	set VL=VL_"".justify(119-VL.length())_($J($$DAT^%ZM(vc5),10))
	do VOM
	set VL="                                                                                 "_("Routine:")
	set VL=VL_"".justify(90-VL.length())_($E(vc6,1,8))
	set VL=VL_"".justify(102-VL.length())_("Transfer Option:")
	set VL=VL_"".justify(119-VL.length())_($E(vc7,1,12))
	do VOM
	set VL="              "_("File(s): ")
	set VL=VL_"".justify(23-VL.length())_($E(vc8,1,60))
	set VL=VL_"".justify(97-VL.length())_("Print Detail: ")
	set VL=VL_"".justify(111-VL.length())_($S(vc9:"Y",1:"N"))
	set VL=VL_"".justify(115-VL.length())_("Banner Page:")
	set VL=VL_"".justify(128-VL.length())_($S(vc10:"Y",1:"N"))
	do VOM
	set VL="                                                                                   "_("Statistics:")
	set VL=VL_"".justify(95-VL.length())_($S(vc11:"Y",1:"N"))
	set VL=VL_"".justify(100-VL.length())_("SQL Query: ")
	set VL=VL_"".justify(111-VL.length())_($S(vc12:"Y",1:"N"))
	set VL=VL_"".justify(114-VL.length())_("C/S Compiler: ")
	set VL=VL_"".justify(128-VL.length())_($S(vc13:"Y",1:"N"))
	do VOM
	set VL="             "_("Order By:")
	set VL=VL_"".justify(23-VL.length())_($E(vc14,1,100))
	do VOM
	set VL="             "_("Break On: ")
	set VL=VL_"".justify(23-VL.length())_($E(vc15,1,60))
	do VOM
	set VL="              "_("Item(s):")
	set VL=VL_"".justify(23-VL.length())_($E(vc16,1,78))
	do VOM
	set VL="                       "_($E(vc17,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                       "_($E(vc18,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                       "_($E(vc19,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                       "_($E(vc20,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                "_("Query: ")
	set VL=VL_"".justify(23-VL.length())_($E(vc21,1,78))
	do VOM
	set VL="                       "_($E(vc22,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                       "_($E(vc23,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                       "_($E(vc24,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                       "_($E(vc25,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                       "_($E(vc26,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                       "_($E(vc27,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                       "_($E(vc28,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                       "_($E(vc29,1,78))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                       "_($E(vc30,1,78))
	if 'VL.translate(" ").isNull() do VOM
	do VP1 quit:VFMQ!verror.get()  set V=$E(ZSTAT,1,79) set VL="                       "_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                     "_("Spaces")
	set VL=VL_"".justify(120-VL.length())_("Lines")
	do VOM
	set VL="                                "_("Field Name")
	set VL=VL_"".justify(47-VL.length())_("Column Heading")
	set VL=VL_"".justify(85-VL.length())_("Before")
	set VL=VL_"".justify(94-VL.length())_("Size")
	set VL=VL_"".justify(101-VL.length())_("Format")
	set VL=VL_"".justify(113-VL.length())_("Math")
	set VL=VL_"".justify(120-VL.length())_("Skip")
	do VOM
	set VL="                                "_("-----------")
	set VL=VL_"".justify(47-VL.length())_("------------------------------------")
	set VL=VL_"".justify(85-VL.length())_("-------")
	set VL=VL_"".justify(94-VL.length())_("----")
	set VL=VL_"".justify(101-VL.length())_("------")
	set VL=VL_"".justify(113-VL.length())_("----")
	set VL=VL_"".justify(120-VL.length())_("-----")
	do VOM
	do VP2 quit:VFMQ!verror.get()  set V=$E(ZFORMAT,1,99) set VL="                                "_V
	do VOM
	quit


VHDG0	// Page Header
	type public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,RID,RN,VL,ZFORMAT,ZSTAT,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit											// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+3,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM.get(),1,45)
	set VL=VL_"".justify(100-VL.length())_("Run Date:")
	set VL=VL_"".justify(110-VL.length())_($E(vrundate,1,10))
	set VL=VL_"".justify(123-VL.length())_($E(%TIM,1,8))
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_"".justify(102-VL.length())_("System:")
	set VL=VL_"".justify(110-VL.length())_($E(vsysdate,1,10))
	set VL=VL_"".justify(122-VL.length())_("Page:")
	set VL=VL_"".justify(128-VL.length())_($E($J(VPN,3),1,3))
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)											// Lock report page heading

	quit


VRSUM	// Report Summary
	type public Number IOSL,verror,VFMQ,vh,VLC,VT(),VX()
	type public String %TIM,ZFORMAT,ZSTAT,vovc1,vovc2,vrundate,vsysdate
	type Number I
	type String V,VL

	set VL=""
	if 'vh(0) do VHDG0 quit:VFMQ
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	quit

VOM	// Output print line
	type public Number AUXPTR,vcrt,vlc,VLC,VRG
	type public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {											// Non-CRT device (form feed)
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if 'AUXPTR.get() write 12.char(),!
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if vcrt<2 write VL,!											// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)										// Save in BROWSER buffer
	set VLC=VLC+1,VL=""											// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: ZSTAT

	type public String vc2
	type public Number IOSL, verror, VFMQ, VLC
	type public String VL, ZSTAT

	type String QRID

	set verror = 0
	set ZSTAT = ""

	set QRID = vc2

	type DbSet ds=Db.selectDbSet("DBTBL6SQ","LIBS='SYSDEV' AND QID=:QRID AND (QDI IS NOT NULL OR QBASE IS NOT NULL OR QINCR IS NOT NULL)","SEQ ASC")

	while ds.next() do { quit:verror

		type RecordDBTBL6SQ dbtbl6sq = ds.getRecord("DBTBL6SQ")

		set VL = $J("",23)_"Statistics:  "_dbtbl6sq.qdi
		set VL = VL_" Based On "_dbtbl6sq.qbase
		if 'dbtbl6sq.qincr.isNull() set VL = VL_" Increments "_dbtbl6sq.qincr
		if VLC+2>IOSL do {
			do VHDG0
			if VFMQ set verror=1
		}
		else  do VOM
	}

	quit

VP2	// Column pre-processor - Variable: ZFORMAT

	type public String vc2
	type public Number IOSL, verror, VFMQ, VLC
	type public String VL, ZFORMAT

	type String QRID

	set verror = 0
	set ZFORMAT = ""

	set QRID = vc2

	type DbSet ds=Db.selectDbSet("DBTBL6F","LIBS='SYSDEV' AND QRID=:QRID","SEQ ASC")

	while ds.next() do { quit:verror

		type RecordDBTBL6F dbtbl6f = ds.getRecord("DBTBL6F")

		set VL = $J("",32)_dbtbl6f.formdi_$J("", 15 - dbtbl6f.formdi.length())
		set VL = VL_dbtbl6f.formdesc_$J("", 40 - dbtbl6f.formdesc.length())
		set VL = VL_dbtbl6f.formidn_$J("", 7 - {String}(dbtbl6f.formidn).length())
		set VL = VL_dbtbl6f.formsize_$J("", 7 - {String}(dbtbl6f.formsize).length())
		set VL = VL_dbtbl6f.formfmt_$J("", 12 - dbtbl6f.formfmt.length())
		set VL = VL_dbtbl6f.formfun_$J("", 7 - dbtbl6f.formfun.length())
		set VL = VL_dbtbl6f.formlf_$J("", 7 - {String}(dbtbl6f.formlf).length())
		if VLC+2>IOSL do {
			do VHDG0
			if VFMQ set verror=1
		}
		else  do VOM
	}

	quit
