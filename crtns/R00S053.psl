R00S053	// DBSRPTLST - DATA-QWIK Report Definition Listing
	// Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:38 - pip

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String ZRID,vudwhere
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="DBSRPTLST"
	set RN="DATA-QWIK Report Definition Listing"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()											// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String ZRID,vudwhere
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,INCTXT,RID,RN,SEQDESC,VL,VLOF,VRF(),VSTATS(),ZKEYDESC,ZLINE,ZPREPP,ZREPEAT,ZSBL,ZSEC,ZSECTION,ZSLF,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc8,vc9,vovc1,vovc10,vovc11,vovc12
	type String vovc13,vovc14,vovc15,vovc16,vovc17,vovc18,vovc19,vovc2,vovc20,vovc21,vovc22,vovc23,vovc24,vovc25,vovc26,vovc27,vovc28,vovc29,vovc3,vovc30,vovc31,vovc32,vovc33,vovc34,vovc35,vovc36,vovc37,vovc38,vovc39,vovc4,vovc40,vovc41,vovc42,vovc43,vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vovc5,vovc50,vovc51,vovc52,vovc53,vovc54,vovc55,vovc56,vovc57,vovc58,vovc59,vovc6,vovc60,vovc61,vovc62,vovc63,vovc64,vovc65,vovc66,vovc67,vovc68,vovc69,vovc7,vovc70,vovc71,vovc72,vovc73,vovc74,vovc75,vovc76,vovc8,vovc9,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="DBSRPTLST",RN="DATA-QWIK Report Definition Listing"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=ACCESS
			type String CHRSET=$$^UCIOENCD("Report","DBSRPTLST","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60											// Non-interactive
	else  do {											// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$CLEARXY^%TRMVT
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$SCR132^%TRMVT											// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DBTBL5D]NAME#2#30,[DBTBL5D]PROMPT#34#40,[DBTBL5D]SIZE#77#3,[DBTBL5D]FMT#82#12,[DBTBL5D]COL#102#3"

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:6 do {
			set (vh(I),VD(I))=0,vs(I)=1										// Group break flags
			set VT(I)=0											// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DBTBL5D.LIBS,DBTBL5D.RID,DBTBL5D.RPTSEQ,DBTBL5D.GR"
	set VSELECT=VSELECT_"P,DBTBL5D.ITMSEQ,DBTBL5D.NAME,DBTBL5D.PROMPT,DBTBL"
	set VSELECT=VSELECT_"5D.SIZE,DBTBL5D.FMT,DBTBL5D.COL,DBTBL5H.DESC,DBTBL"
	set VSELECT=VSELECT_"5H.PGM,DBTBL5H.UID,DBTBL5H.DATE,DBTBL5H.PSIZE,DBTB"
	set VSELECT=VSELECT_"L5H.BANNER,DBTBL5H.FIXLEN,DBTBL5H.RSIZE,DBTBL5H.AL"
	set VSELECT=VSELECT_"IGN,DBTBL5H.RESFLG,DBTBL5H.MSQL,DBTBL5H.PFID,DBTBL"
	set VSELECT=VSELECT_"5H.SEQ,DBTBL5H.PGBK,DBTBL5H.PHDR,DBTBL5H.PRNG,DBTB"
	set VSELECT=VSELECT_"L5H.SORTORD,DBTBL5H.SEQ2,DBTBL5H.PGBK2,DBTBL5H.PHD"
	set VSELECT=VSELECT_"R2,DBTBL5H.PRNG2,DBTBL5H.SORTORD2,DBTBL5H.SEQ3,DBT"
	set VSELECT=VSELECT_"BL5H.PGBK3,DBTBL5H.PHDR3,DBTBL5H.PRNG3,DBTBL5H.SOR"
	set VSELECT=VSELECT_"TORD3,DBTBL5H.SEQ4,DBTBL5H.PGBK4,DBTBL5H.PHDR4,DBT"
	set VSELECT=VSELECT_"BL5H.PRNG4,DBTBL5H.SORTORD4,DBTBL5H.SEQ5,DBTBL5H.P"
	set VSELECT=VSELECT_"GBK5,DBTBL5H.PHDR5,DBTBL5H.PRNG5,DBTBL5H.SORTORD5,"
	set VSELECT=VSELECT_"DBTBL5H.SEQ6,DBTBL5H.PGBK6,DBTBL5H.PHDR6,DBTBL5H.P"
	set VSELECT=VSELECT_"RNG6,DBTBL5H.SORTORD6,DBTBL5H.SEQ7,DBTBL5H.PGBK7,D"
	set VSELECT=VSELECT_"BTBL5H.PHDR7,DBTBL5H.PRNG7,DBTBL5H.SORTORD7,DBTBL5"
	set VSELECT=VSELECT_"H.SEQ8,DBTBL5H.PGBK8,DBTBL5H.PHDR8,DBTBL5H.PRNG8,D"
	set VSELECT=VSELECT_"BTBL5H.SORTORD8,DBTBL5H.SEQ9,DBTBL5H.PGBK9,DBTBL5H"
	set VSELECT=VSELECT_".PHDR9,DBTBL5H.PRNG9,DBTBL5H.SORTORD9,DBTBL5H.SEQ1"
	set VSELECT=VSELECT_"0,DBTBL5H.PGBK10,DBTBL5H.PHDR10,DBTBL5H.PRNG10,DBT"
	set VSELECT=VSELECT_"BL5H.SORTORD10,DBTBL5H.STATTRGT1,DBTBL5H.STATSRC1,"
	set VSELECT=VSELECT_"DBTBL5H.STATINC1,DBTBL5D.LINE"

	set VWHERE="DBTBL5D.ITMSEQ>0"
	if vudwhere.exists() set VWHERE=vudwhere
	#ACCEPT DATE=02/24/2010;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DBTBL5D,DBTBL5H",VWHERE,"DBTBL5D.LIBS,DBTBL5D.RID,DBTBL5D.RPTSEQ,DBTBL5D.GRP,DBTBL5D.ITMSEQ","","DQMODE=1")
	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize old values
	type public String vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7="",vovc8="",vovc9="",vovc10="",vovc11="",vovc12="",vovc13="",vovc14="",vovc15="",vovc16="",vovc17="",vovc18="",vovc19="",vovc20="",vovc21="",vovc22="",vovc23="",vovc24="",vovc25="",vovc26="",vovc27="",vovc28="",vovc29="",vovc30="",vovc31="",vovc32="",vovc33="",vovc34="",vovc35="",vovc36="",vovc37="",vovc38="",vovc39="",vovc40="",vovc41="",vovc42="",vovc43="",vovc44="",vovc45="",vovc46="",vovc47="",vovc48="",vovc49="",vovc50="",vovc51="",vovc52="",vovc53="",vovc54="",vovc55="",vovc56="",vovc57="",vovc58="",vovc59="",vovc60="",vovc61="",vovc62="",vovc63="",vovc64="",vovc65="",vovc66="",vovc67="",vovc68="",vovc69="",vovc70="",vovc71="",vovc72="",vovc73="",vovc74="",vovc75="",vovc76=""
	quit

VSAVLAST	// Save old values
	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76
	type public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vovc10,vovc11,vovc12,vovc13,vovc14,vovc15,vovc16,vovc17,vovc18,vovc19,vovc20,vovc21,vovc22,vovc23,vovc24,vovc25,vovc26,vovc27,vovc28,vovc29,vovc30,vovc31,vovc32,vovc33,vovc34,vovc35,vovc36,vovc37,vovc38,vovc39,vovc40,vovc41,vovc42,vovc43,vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vovc50,vovc51,vovc52,vovc53,vovc54,vovc55,vovc56,vovc57,vovc58,vovc59,vovc60,vovc61,vovc62,vovc63,vovc64,vovc65,vovc66,vovc67,vovc68,vovc69,vovc70,vovc71,vovc72,vovc73,vovc74,vovc75,vovc76
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7,vovc8=vc8,vovc9=vc9,vovc10=vc10,vovc11=vc11,vovc12=vc12,vovc13=vc13,vovc14=vc14,vovc15=vc15,vovc16=vc16,vovc17=vc17,vovc18=vc18,vovc19=vc19,vovc20=vc20,vovc21=vc21,vovc22=vc22,vovc23=vc23,vovc24=vc24,vovc25=vc25,vovc26=vc26,vovc27=vc27,vovc28=vc28,vovc29=vc29,vovc30=vc30,vovc31=vc31,vovc32=vc32,vovc33=vc33,vovc34=vc34,vovc35=vc35,vovc36=vc36,vovc37=vc37,vovc38=vc38,vovc39=vc39,vovc40=vc40,vovc41=vc41,vovc42=vc42,vovc43=vc43,vovc44=vc44,vovc45=vc45,vovc46=vc46,vovc47=vc47,vovc48=vc48,vovc49=vc49,vovc50=vc50
	set vovc51=vc51,vovc52=vc52,vovc53=vc53,vovc54=vc54,vovc55=vc55,vovc56=vc56,vovc57=vc57,vovc58=vc58,vovc59=vc59,vovc60=vc60,vovc61=vc61,vovc62=vc62,vovc63=vc63,vovc64=vc64,vovc65=vc65,vovc66=vc66,vovc67=vc67,vovc68=vc68,vovc69=vc69,vovc70=vc70,vovc71=vc71,vovc72=vc72,vovc73=vc73,vovc74=vc74,vovc75=vc75,vovc76=vc76
	quit


VGETDATA(String V,String VI)	//
	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76
	set vc1=V.piece(9.char(),1)											// DBTBL5D.LIBS
	set vc2=V.piece(9.char(),2)											// DBTBL5D.RID
	set vc3=V.piece(9.char(),3)											// DBTBL5D.RPTSEQ
	set vc4=V.piece(9.char(),4)											// DBTBL5D.GRP
	set vc5=V.piece(9.char(),5)											// DBTBL5D.ITMSEQ
	set vc6=V.piece(9.char(),6)											// DBTBL5D.NAME
	set vc7=V.piece(9.char(),7)											// DBTBL5D.PROMPT
	set vc8=V.piece(9.char(),8)											// DBTBL5D.SIZE
	set vc9=V.piece(9.char(),9)											// DBTBL5D.FMT
	set vc10=V.piece(9.char(),10)											// DBTBL5D.COL
	set vc11=V.piece(9.char(),11)											// DBTBL5H.DESC
	set vc12=V.piece(9.char(),12)											// DBTBL5H.PGM
	set vc13=V.piece(9.char(),13)											// DBTBL5H.UID
	set vc14=V.piece(9.char(),14)											// DBTBL5H.DATE
	set vc15=V.piece(9.char(),15)											// DBTBL5H.PSIZE
	set vc16=V.piece(9.char(),16)											// DBTBL5H.BANNER
	set vc17=V.piece(9.char(),17)											// DBTBL5H.FIXLEN
	set vc18=V.piece(9.char(),18)											// DBTBL5H.RSIZE
	set vc19=V.piece(9.char(),19)											// DBTBL5H.ALIGN
	set vc20=V.piece(9.char(),20)											// DBTBL5H.RESFLG
	set vc21=V.piece(9.char(),21)											// DBTBL5H.MSQL
	set vc22=V.piece(9.char(),22)											// DBTBL5H.PFID
	set vc23=V.piece(9.char(),23)											// DBTBL5H.SEQ
	set vc24=V.piece(9.char(),24)											// DBTBL5H.PGBK
	set vc25=V.piece(9.char(),25)											// DBTBL5H.PHDR
	set vc26=V.piece(9.char(),26)											// DBTBL5H.PRNG
	set vc27=V.piece(9.char(),27)											// DBTBL5H.SORTORD
	set vc28=V.piece(9.char(),28)											// DBTBL5H.SEQ2
	set vc29=V.piece(9.char(),29)											// DBTBL5H.PGBK2
	set vc30=V.piece(9.char(),30)											// DBTBL5H.PHDR2
	set vc31=V.piece(9.char(),31)											// DBTBL5H.PRNG2
	set vc32=V.piece(9.char(),32)											// DBTBL5H.SORTORD2
	set vc33=V.piece(9.char(),33)											// DBTBL5H.SEQ3
	set vc34=V.piece(9.char(),34)											// DBTBL5H.PGBK3
	set vc35=V.piece(9.char(),35)											// DBTBL5H.PHDR3
	set vc36=V.piece(9.char(),36)											// DBTBL5H.PRNG3
	set vc37=V.piece(9.char(),37)											// DBTBL5H.SORTORD3
	set vc38=V.piece(9.char(),38)											// DBTBL5H.SEQ4
	set vc39=V.piece(9.char(),39)											// DBTBL5H.PGBK4
	set vc40=V.piece(9.char(),40)											// DBTBL5H.PHDR4
	set vc41=V.piece(9.char(),41)											// DBTBL5H.PRNG4
	set vc42=V.piece(9.char(),42)											// DBTBL5H.SORTORD4
	set vc43=V.piece(9.char(),43)											// DBTBL5H.SEQ5
	set vc44=V.piece(9.char(),44)											// DBTBL5H.PGBK5
	set vc45=V.piece(9.char(),45)											// DBTBL5H.PHDR5
	set vc46=V.piece(9.char(),46)											// DBTBL5H.PRNG5
	set vc47=V.piece(9.char(),47)											// DBTBL5H.SORTORD5
	set vc48=V.piece(9.char(),48)											// DBTBL5H.SEQ6
	set vc49=V.piece(9.char(),49)											// DBTBL5H.PGBK6
	set vc50=V.piece(9.char(),50)											// DBTBL5H.PHDR6
	set vc51=V.piece(9.char(),51)											// DBTBL5H.PRNG6
	set vc52=V.piece(9.char(),52)											// DBTBL5H.SORTORD6
	set vc53=V.piece(9.char(),53)											// DBTBL5H.SEQ7
	set vc54=V.piece(9.char(),54)											// DBTBL5H.PGBK7
	set vc55=V.piece(9.char(),55)											// DBTBL5H.PHDR7
	set vc56=V.piece(9.char(),56)											// DBTBL5H.PRNG7
	set vc57=V.piece(9.char(),57)											// DBTBL5H.SORTORD7
	set vc58=V.piece(9.char(),58)											// DBTBL5H.SEQ8
	set vc59=V.piece(9.char(),59)											// DBTBL5H.PGBK8
	set vc60=V.piece(9.char(),60)											// DBTBL5H.PHDR8
	set vc61=V.piece(9.char(),61)											// DBTBL5H.PRNG8
	set vc62=V.piece(9.char(),62)											// DBTBL5H.SORTORD8
	set vc63=V.piece(9.char(),63)											// DBTBL5H.SEQ9
	set vc64=V.piece(9.char(),64)											// DBTBL5H.PGBK9
	set vc65=V.piece(9.char(),65)											// DBTBL5H.PHDR9
	set vc66=V.piece(9.char(),66)											// DBTBL5H.PRNG9
	set vc67=V.piece(9.char(),67)											// DBTBL5H.SORTORD9
	set vc68=V.piece(9.char(),68)											// DBTBL5H.SEQ10
	set vc69=V.piece(9.char(),69)											// DBTBL5H.PGBK10
	set vc70=V.piece(9.char(),70)											// DBTBL5H.PHDR10
	set vc71=V.piece(9.char(),71)											// DBTBL5H.PRNG10
	set vc72=V.piece(9.char(),72)											// DBTBL5H.SORTORD10
	set vc73=V.piece(9.char(),73)											// DBTBL5H.STATTRGT1
	set vc74=V.piece(9.char(),74)											// DBTBL5H.STATSRC1
	set vc75=V.piece(9.char(),75)											// DBTBL5H.STATINC1
	set vc76=V.piece(9.char(),76)											// DBTBL5D.LINE
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

	//Incoming=vudwhere,ZRID
	type Public String vudwhere
	set vudwhere=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0,vs(5)=0,vs(6)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			do VBREAK,stat^DBSRWUTL(2)
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data

	quit

VPRINT	// Print section
	type public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1,vskp(5)=1,vskp(6)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0										// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VHDG6 quit:VFMQ
	if 'vskp(6).get() do VDTL6 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(6)
	type public String vc1,vovc1,vc2,vovc2,vc3,vovc3,vc4,vovc4,vc5,vovc5
	type Number vb1,vb2,vb3,vb4,vb5,vb6
	set (vb1,vb2,vb3,vb4,vb5,vb6)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,vb5=1,vb6=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,vb5=1,vb6=1,VH0=1
	if vb4!(+vovc3'=+vc3) set vs(5)=0,vh(5)=0,VD(4)=0,vb5=1,vb6=1
	if vb5!(vovc4'=vc4) set vs(6)=0,vh(6)=0,VD(5)=0,vb6=1
	quit

VSUM	// Report Group Summary
	type public Number VFMQ,vs()
	if 'vs(6) set vs(6)=1 do stat^DBSRWUTL(6)
	if 'vs(5) set vs(5)=1 do VSUM5 quit:VFMQ  do stat^DBSRWUTL(5)
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type public Number VRWOPT(),VT()
	type public String VSTATS()

	set VT(6)=VT(6)+1
	quit

VDTL3	// Detail
	type public String %TIM,INCTXT,IOSL,SEQDESC,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),ZKEYDESC,ZLINE,ZPREPP,ZREPEAT,ZRID,ZSBL,ZSEC,ZSECTION,ZSLF,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc8,vc9,verror,vh()
	type public String vovc1,vovc10,vovc11,vovc12,vovc13,vovc14,vovc15,vovc16,vovc17,vovc18,vovc19,vovc2,vovc20,vovc21,vovc22,vovc23,vovc24,vovc25,vovc26,vovc27,vovc28,vovc29,vovc3,vovc30,vovc31,vovc32,vovc33,vovc34,vovc35,vovc36,vovc37,vovc38,vovc39,vovc4,vovc40,vovc41,vovc42,vovc43,vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vovc5,vovc50,vovc51,vovc52,vovc53,vovc54,vovc55,vovc56,vovc57,vovc58,vovc59,vovc6,vovc60,vovc61,vovc62,vovc63,vovc64,vovc65,vovc66,vovc67,vovc68,vovc69,vovc7,vovc70,vovc71,vovc72,vovc73,vovc74,vovc75,vovc76,vovc8,vovc9,vrundate,vsysdate,vudwhere

	quit:VD(3)  set VD(3)=1											// Print flag
	if VLC+2>IOSL do VHDG0 quit:VFMQ

	set VL=" "_("Name: ")
	set VL=VL_"".justify(7-VL.length())_($E(vc2,1,12))
	set VL=VL_"".justify(21-VL.length())_($E(vc11,1,40))
	set VL=VL_"".justify(66-VL.length())_("Program: ")
	set VL=VL_"".justify(75-VL.length())_($E(vc12,1,8))
	set VL=VL_"".justify(85-VL.length())_("User ID: ")
	set VL=VL_"".justify(94-VL.length())_($E(vc13,1,20))
	set VL=VL_"".justify(116-VL.length())_("Date: ")
	set VL=VL_"".justify(122-VL.length())_($J($$DAT^%ZM(vc14),10))
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                                                        "_("Page Length:")
	set VL=VL_"".justify(85-VL.length())_($J(vc15,3))
	set VL=VL_"".justify(97-VL.length())_("Banner: ")
	set VL=VL_"".justify(105-VL.length())_($S(vc16:"Y",1:"N"))
	set VL=VL_"".justify(112-VL.length())_("Fixed Length: ")
	set VL=VL_"".justify(126-VL.length())_($S(vc17:"Y",1:"N"))
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                                                         "_("Page Width:")
	set VL=VL_"".justify(85-VL.length())_($J(vc18,3))
	set VL=VL_"".justify(94-VL.length())_("Alignment:")
	set VL=VL_"".justify(105-VL.length())_($S(vc19:"Y",1:"N"))
	set VL=VL_"".justify(111-VL.length())_("Protect Logic:")
	set VL=VL_"".justify(126-VL.length())_($J(vc20,1))
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                                                                                            "_("SQL Query Syntax:")
	set VL=VL_"".justify(126-VL.length())_($S(vc21:"Y",1:"N"))
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                         "_("File(s):")
	set VL=VL_"".justify(34-VL.length())_($E(vc22,1,60))
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                                                                                  "_("New Page At")
	set VL=VL_"".justify(111-VL.length())_("Print")
	set VL=VL_"".justify(119-VL.length())_("Min")
	set VL=VL_"".justify(125-VL.length())_("Order")
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                  "_("--------------- Report Sequence By ---------------")
	set VL=VL_"".justify(99-VL.length())_("Key")
	set VL=VL_"".justify(104-VL.length())_("Break")
	set VL=VL_"".justify(111-VL.length())_("Header")
	set VL=VL_"".justify(119-VL.length())_("Line")
	set VL=VL_"".justify(126-VL.length())_("By")
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                                  "_($E(vc23,1,33))
	do VP1 quit:VFMQ!verror.get()  set V=$E(SEQDESC,1,25)
	set VL=VL_"".justify(69-VL.length())_V
	set VL=VL_"".justify(104-VL.length())_($S(vc24:"Y",1:"N"))
	set VL=VL_"".justify(113-VL.length())_($S(vc25:"Y",1:"N"))
	set VL=VL_"".justify(120-VL.length())_($E(vc26,1,2))
	set VL=VL_"".justify(127-VL.length())_($E(vc27,1,1))
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                  "_($E(vc28,1,33))
	do VP2 quit:VFMQ!verror.get()  set V=$E(SEQDESC,1,25)
	set VL=VL_"".justify(69-VL.length())_V
	set VL=VL_"".justify(104-VL.length())_($S(vc29:"Y",1:"N"))
	set VL=VL_"".justify(113-VL.length())_($S(vc30:"Y",1:"N"))
	set VL=VL_"".justify(120-VL.length())_($E(vc31,1,2))
	set V=vc32,VO=V set V=$E(V,1,1) do VP3 quit:VFMQ!verror.get()
	set VL=VL_"".justify(127-VL.length())_V											// [SYSDEV,DBTBL5H]SORTORD2
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                  "_($E(vc33,1,33))
	do VP4 quit:VFMQ!verror.get()  set V=$E(SEQDESC,1,25)
	set VL=VL_"".justify(69-VL.length())_V
	set VL=VL_"".justify(104-VL.length())_($S(vc34:"Y",1:"N"))
	set VL=VL_"".justify(113-VL.length())_($S(vc35:"Y",1:"N"))
	set VL=VL_"".justify(120-VL.length())_($E(vc36,1,2))
	set V=vc37,VO=V set V=$E(V,1,1) do VP5 quit:VFMQ!verror.get()
	set VL=VL_"".justify(127-VL.length())_V											// [SYSDEV,DBTBL5H]SORTORD3
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                  "_($E(vc38,1,33))
	do VP6 quit:VFMQ!verror.get()  set V=$E(SEQDESC,1,25)
	set VL=VL_"".justify(69-VL.length())_V
	set VL=VL_"".justify(104-VL.length())_($S(vc39:"Y",1:"N"))
	set VL=VL_"".justify(113-VL.length())_($S(vc40:"Y",1:"N"))
	set VL=VL_"".justify(120-VL.length())_($E(vc41,1,2))
	set V=vc42,VO=V set V=$E(V,1,1) do VP7 quit:VFMQ!verror.get()
	set VL=VL_"".justify(127-VL.length())_V											// [SYSDEV,DBTBL5H]SORTORD4
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                  "_($E(vc43,1,33))
	do VP8 quit:VFMQ!verror.get()  set V=$E(SEQDESC,1,25)
	set VL=VL_"".justify(69-VL.length())_V
	set VL=VL_"".justify(104-VL.length())_($S(vc44:"Y",1:"N"))
	set VL=VL_"".justify(113-VL.length())_($S(vc45:"Y",1:"N"))
	set VL=VL_"".justify(120-VL.length())_($E(vc46,1,2))
	set V=vc47,VO=V set V=$E(V,1,1) do VP9 quit:VFMQ!verror.get()
	set VL=VL_"".justify(127-VL.length())_V											// [SYSDEV,DBTBL5H]SORTORD5
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                  "_($E(vc48,1,33))
	do VP10 quit:VFMQ!verror.get()  set V=$E(SEQDESC,1,25)
	set VL=VL_"".justify(69-VL.length())_V
	set VL=VL_"".justify(104-VL.length())_($S(vc49:"Y",1:"N"))
	set VL=VL_"".justify(113-VL.length())_($S(vc50:"Y",1:"N"))
	set VL=VL_"".justify(120-VL.length())_($E(vc51,1,2))
	set V=vc52,VO=V set V=$E(V,1,1) do VP11 quit:VFMQ!verror.get()
	set VL=VL_"".justify(127-VL.length())_V											// [SYSDEV,DBTBL5H]SORTORD6
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                  "_($E(vc53,1,33))
	do VP12 quit:VFMQ!verror.get()  set V=$E(SEQDESC,1,25)
	set VL=VL_"".justify(69-VL.length())_V
	set VL=VL_"".justify(104-VL.length())_($S(vc54:"Y",1:"N"))
	set VL=VL_"".justify(113-VL.length())_($S(vc55:"Y",1:"N"))
	set VL=VL_"".justify(120-VL.length())_($E(vc56,1,2))
	set V=vc57,VO=V set V=$E(V,1,1) do VP13 quit:VFMQ!verror.get()
	set VL=VL_"".justify(127-VL.length())_V											// [SYSDEV,DBTBL5H]SORTORD7
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                  "_($E(vc58,1,33))
	do VP14 quit:VFMQ!verror.get()  set V=$E(SEQDESC,1,25)
	set VL=VL_"".justify(69-VL.length())_V
	set VL=VL_"".justify(104-VL.length())_($S(vc59:"Y",1:"N"))
	set VL=VL_"".justify(113-VL.length())_($S(vc60:"Y",1:"N"))
	set VL=VL_"".justify(120-VL.length())_($E(vc61,1,2))
	set V=vc62,VO=V set V=$E(V,1,1) do VP15 quit:VFMQ!verror.get()
	set VL=VL_"".justify(127-VL.length())_V											// [SYSDEV,DBTBL5H]SORTORD8
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                  "_($E(vc63,1,33))
	do VP16 quit:VFMQ!verror.get()  set V=$E(SEQDESC,1,25)
	set VL=VL_"".justify(69-VL.length())_V
	set VL=VL_"".justify(104-VL.length())_($S(vc64:"Y",1:"N"))
	set VL=VL_"".justify(113-VL.length())_($S(vc65:"Y",1:"N"))
	set VL=VL_"".justify(120-VL.length())_($E(vc66,1,2))
	set V=vc67,VO=V set V=$E(V,1,1) do VP17 quit:VFMQ!verror.get()
	set VL=VL_"".justify(127-VL.length())_V											// [SYSDEV,DBTBL5H]SORTORD9
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                  "_($E(vc68,1,33))
	do VP18 quit:VFMQ!verror.get()  set V=$E(SEQDESC,1,25)
	set VL=VL_"".justify(69-VL.length())_V
	set VL=VL_"".justify(104-VL.length())_($S(vc69:"Y",1:"N"))
	set VL=VL_"".justify(113-VL.length())_($S(vc70:"Y",1:"N"))
	set VL=VL_"".justify(120-VL.length())_($E(vc71,1,2))
	set V=vc72,VO=V set V=$E(V,1,1) do VP19 quit:VFMQ!verror.get()
	set VL=VL_"".justify(127-VL.length())_V											// [SYSDEV,DBTBL5H]SORTORD10
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP20 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP21 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP22 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP23 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP24 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP25 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP26 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP27 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP28 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP29 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP30 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP31 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP32 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP33 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP34 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP35 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP36 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP37 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP38 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP39 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP40 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP41 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP42 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP43 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP44 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP45 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP46 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP47 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP48 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP49 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP50 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP51 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP52 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP53 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP54 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP55 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP56 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP57 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="           "_("Statistics:  ")
	set VL=VL_"".justify(24-VL.length())_($E(vc73,1,25))
	set VL=VL_"".justify(51-VL.length())_("Based On:  ")
	set VL=VL_"".justify(62-VL.length())_($E(vc74,1,25))
	do VP58 quit:VFMQ!verror.get()  set V=$E(INCTXT,1,11)
	set VL=VL_"".justify(89-VL.length())_V
	set V=vc75,VO=V set V=$E(V,1,26) do VP59 quit:VFMQ!verror.get()
	set VL=VL_"".justify(102-VL.length())_V											// [SYSDEV,DBTBL5H]STATINC1
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	do VOM
	do VP60 quit:VFMQ!verror.get()  set V=$E(ZPREPP,1,100) set VL="                         "_V
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	quit

VSUM5	// Summary
	type public String %TIM,I,INCTXT,IOSL,SEQDESC,V,VFMQ,VL,VLC,VO,VOFFLG,VT(),VX(),ZKEYDESC,ZLINE,ZPREPP,ZREPEAT,ZRID,ZSBL,ZSEC,ZSECTION,ZSLF,verror,vh(),vrundate,vsysdate,vudwhere

	type public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vovc8,vovc9,vovc10,vovc11,vovc12,vovc13,vovc14,vovc15,vovc16,vovc17,vovc18,vovc19,vovc20,vovc21,vovc22,vovc23,vovc24,vovc25,vovc26,vovc27,vovc28,vovc29,vovc30,vovc31,vovc32,vovc33,vovc34,vovc35,vovc36,vovc37,vovc38,vovc39,vovc40,vovc41,vovc42,vovc43,vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vovc50,vovc51,vovc52,vovc53,vovc54,vovc55,vovc56,vovc57,vovc58,vovc59,vovc60,vovc61,vovc62,vovc63,vovc64,vovc65,vovc66,vovc67,vovc68,vovc69,vovc70,vovc71,vovc72,vovc73,vovc74,vovc75,vovc76
	type String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc70,vc71,vc72,vc73,vc74,vc75,vc76
	if 'VT(5) quit
	set vc1=vovc1
	set vc2=vovc2
	set vc3=vovc3
	set vc4=vovc4
	set vc5=vovc5
	set vc6=vovc6
	set vc7=vovc7
	set vc8=vovc8
	set vc9=vovc9
	set vc10=vovc10
	set vc11=vovc11
	set vc12=vovc12
	set vc13=vovc13
	set vc14=vovc14
	set vc15=vovc15
	set vc16=vovc16
	set vc17=vovc17
	set vc18=vovc18
	set vc19=vovc19
	set vc20=vovc20
	set vc21=vovc21
	set vc22=vovc22
	set vc23=vovc23
	set vc24=vovc24
	set vc25=vovc25
	set vc26=vovc26
	set vc27=vovc27
	set vc28=vovc28
	set vc29=vovc29
	set vc30=vovc30
	set vc31=vovc31
	set vc32=vovc32
	set vc33=vovc33
	set vc34=vovc34
	set vc35=vovc35
	set vc36=vovc36
	set vc37=vovc37
	set vc38=vovc38
	set vc39=vovc39
	set vc40=vovc40
	set vc41=vovc41
	set vc42=vovc42
	set vc43=vovc43
	set vc44=vovc44
	set vc45=vovc45
	set vc46=vovc46
	set vc47=vovc47
	set vc48=vovc48
	set vc49=vovc49
	set vc50=vovc50
	set vc51=vovc51
	set vc52=vovc52
	set vc53=vovc53
	set vc54=vovc54
	set vc55=vovc55
	set vc56=vovc56
	set vc57=vovc57
	set vc58=vovc58
	set vc59=vovc59
	set vc60=vovc60
	set vc61=vovc61
	set vc62=vovc62
	set vc63=vovc63
	set vc64=vovc64
	set vc65=vovc65
	set vc66=vovc66
	set vc67=vovc67
	set vc68=vovc68
	set vc69=vovc69
	set vc70=vovc70
	set vc71=vovc71
	set vc72=vovc72
	set vc73=vovc73
	set vc74=vovc74
	set vc75=vovc75
	set vc76=vovc76
	type String VLSAV = ""
	if VLC+0>IOSL do VHDG0 quit:VFMQ

	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL = VLSAV.get()
	quit

VHDG6	// Group Header
	type public String %MSKD,%TIM,CONAM,ER,INCTXT,IOSL,RID,RN,SEQDESC,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,ZKEYDESC,ZLINE,ZPREPP,ZREPEAT,ZRID,ZSBL,ZSEC,ZSECTION,ZSLF,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75
	type public String vc76,vc8,vc9,vcrt,verror,vh(),vovc1,vovc10,vovc11,vovc12,vovc13,vovc14,vovc15,vovc16,vovc17,vovc18,vovc19,vovc2,vovc20,vovc21,vovc22,vovc23,vovc24,vovc25,vovc26,vovc27,vovc28,vovc29,vovc3,vovc30,vovc31,vovc32,vovc33,vovc34,vovc35,vovc36,vovc37,vovc38,vovc39,vovc4,vovc40,vovc41,vovc42,vovc43,vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vovc5,vovc50,vovc51,vovc52,vovc53,vovc54,vovc55,vovc56,vovc57,vovc58,vovc59,vovc6,vovc60,vovc61,vovc62,vovc63,vovc64,vovc65,vovc66,vovc67,vovc68,vovc69,vovc7,vovc70,vovc71,vovc72,vovc73,vovc74,vovc75,vovc76,vovc8,vovc9,vrundate,vsysdate,vudwhere

	quit:vh(6)  set vh(6)=1											// Print flag
	if VLC+3>IOSL do VHDG0 quit:VFMQ

	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL="                   "_("-----------")
	set VL=VL_"".justify(34-VL.length())_($E(vc4,1,25))
	do VP61 quit:VFMQ!verror.get()  set V=$E(ZKEYDESC,1,35)
	set VL=VL_"".justify(62-VL.length())_V
	set VL=VL_"".justify(99-VL.length())_("----------")
	do VP62 quit:VFMQ!verror.get()  set V=$E(ZSEC,1,10)
	set VL=VL_"".justify(114-VL.length())_V
	do VOM
	do VOM
	quit

VDTL6	// Detail
	type public String %TIM,INCTXT,IOSL,SEQDESC,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),ZKEYDESC,ZLINE,ZPREPP,ZREPEAT,ZRID,ZSBL,ZSEC,ZSECTION,ZSLF,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc8,vc9,verror,vh()
	type public String vovc1,vovc10,vovc11,vovc12,vovc13,vovc14,vovc15,vovc16,vovc17,vovc18,vovc19,vovc2,vovc20,vovc21,vovc22,vovc23,vovc24,vovc25,vovc26,vovc27,vovc28,vovc29,vovc3,vovc30,vovc31,vovc32,vovc33,vovc34,vovc35,vovc36,vovc37,vovc38,vovc39,vovc4,vovc40,vovc41,vovc42,vovc43,vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vovc5,vovc50,vovc51,vovc52,vovc53,vovc54,vovc55,vovc56,vovc57,vovc58,vovc59,vovc6,vovc60,vovc61,vovc62,vovc63,vovc64,vovc65,vovc66,vovc67,vovc68,vovc69,vovc7,vovc70,vovc71,vovc72,vovc73,vovc74,vovc75,vovc76,vovc8,vovc9,vrundate,vsysdate,vudwhere

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=" "_($E(vc6,1,30))
	set V=vc7,VO=V do VP63 quit:VFMQ!verror.get()  set V=$E(V,1,40)
	set VL=VL_"".justify(33-VL.length())_V											// [SYSDEV,DBTBL5D]PROMPT
	set VL=VL_"".justify(76-VL.length())_($J(vc8,3))
	set VL=VL_"".justify(81-VL.length())_($E(vc9,1,12))
	do VP64 quit:VFMQ!verror.get()  set V=$J(ZLINE,3)
	set VL=VL_"".justify(95-VL.length())_V
	set VL=VL_"".justify(101-VL.length())_($J(vc10,3))
	set VL=VL_"".justify(108-VL.length())_($E(ZSECTION,1,8))
	do VP65 quit:VFMQ!verror.get()  set V=$E(ZSBL,1,1)
	set VL=VL_"".justify(119-VL.length())_V
	do VP66 quit:VFMQ!verror.get()  set V=$E(ZSLF,1,1)
	set VL=VL_"".justify(123-VL.length())_V
	do VP67 quit:VFMQ!verror.get()  set V=$E(ZREPEAT,1,1)
	set VL=VL_"".justify(127-VL.length())_V
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	do VP68 quit:VFMQ!verror.get()  set V=$E(ZPREPP,1,40) set VL="                         "_V
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,INCTXT,RID,RN,SEQDESC,VL,ZKEYDESC,ZLINE,ZPREPP,ZREPEAT,ZRID,ZSBL,ZSEC,ZSECTION,ZSLF,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc37,vc38,vc39,vc4,vc40,vc41,vc42,vc43,vc44,vc45,vc46,vc47,vc48,vc49,vc5,vc50,vc51,vc52,vc53,vc54,vc55,vc56,vc57,vc58,vc59,vc6,vc60,vc61,vc62,vc63,vc64,vc65,vc66,vc67,vc68,vc69,vc7,vc70,vc71,vc72,vc73,vc74,vc75,vc76,vc8,vc9,vovc1,vovc10,vovc11,vovc12,vovc13,vovc14,vovc15
	type public String vovc16,vovc17,vovc18,vovc19,vovc2,vovc20,vovc21,vovc22,vovc23,vovc24,vovc25,vovc26,vovc27,vovc28,vovc29,vovc3,vovc30,vovc31,vovc32,vovc33,vovc34,vovc35,vovc36,vovc37,vovc38,vovc39,vovc4,vovc40,vovc41,vovc42,vovc43,vovc44,vovc45,vovc46,vovc47,vovc48,vovc49,vovc5,vovc50,vovc51,vovc52,vovc53,vovc54,vovc55,vovc56,vovc57,vovc58,vovc59,vovc6,vovc60,vovc61,vovc62,vovc63,vovc64,vovc65,vovc66,vovc67,vovc68,vovc69,vovc7,vovc70,vovc71,vovc72,vovc73,vovc74,vovc75,vovc76,vovc8,vovc9,vrundate,vsysdate,vudwhere
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit											// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM.get(),1,45)
	set VL=VL_"".justify(100-VL.length())_("Run Date:")
	set VL=VL_"".justify(110-VL.length())_($E(vrundate,1,10))
	set VL=VL_"".justify(123-VL.length())_($E(%TIM,1,8))
	do VOM
	set VL=RN_"  ("_vc2_")"
	set VL=VL_"".justify(102-VL.length())_("System:")
	set VL=VL_"".justify(110-VL.length())_($E(vsysdate,1,10))
	set VL=VL_"".justify(122-VL.length())_("Page:")
	set VL=VL_"".justify(128-VL.length())_($E($J(VPN,3),1,3))
	do VOM
	do VOM
	set VL="                                                                                                            "_("Region  Suppress  Repeat")
	do VOM
	set VL=" "_("Item Name                       Text/Function/Variable                    Size  Format       Line  Column  (H,D,T)  Line  LF Field")
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)											// Lock report page heading

	quit


VOM	// Output print line
	type public Number AUXPTR,vcrt,vlc,VLC,VRG
	type public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {											// Non-CRT device (form feed)
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if 'AUXPTR.get() write 12.char(),!
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if vcrt<2 write VL,!											// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)										// Save in BROWSER buffer
	set VLC=VLC+1,VL=""											// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: SEQDESC

	type public String vc23
	type Public String SEQDESC

	set SEQDESC=$$GETDESC(vc23)
	quit

GETDESC(String DATA)
	type String DI,FID

	if DATA="" quit ""

	set FID=DATA.piece("]",1)
	if FID["," set FID=FID.piece(",",2)
	else  set FID=FID.piece("[",2)
	set DI=DATA.piece("]",2)
	type RecordDBTBL1D dbtbl1d=Db.getRecord("DBTBL1D","%LIBS=""SYSDEV"",FID=:FID,DI=:DI",1)
	quit dbtbl1d.des

VP2	// Column pre-processor - Variable: SEQDESC

	type public String vc28
	type Public String SEQDESC

	set SEQDESC=$$GETDESC(vc28)
	quit

VP3	// Column post-processor - [SYSDEV,DBTBL5H]SORTORD2

	type public String vc28
	type Public String V,VL

	// Blank suppress the line
	if vc28="" set (V,VL)=""
	quit

VP4	// Column pre-processor - Variable: SEQDESC

	type public String vc33
	type Public String SEQDESC

	set SEQDESC=$$GETDESC(vc33)
	quit

VP5	// Column post-processor - [SYSDEV,DBTBL5H]SORTORD3

	type public String vc33
	type Public String V,VL

	// Blank suppress the line
	if vc33="" set (V,VL)=""
	quit

VP6	// Column pre-processor - Variable: SEQDESC

	type public String vc38
	type Public String SEQDESC

	set SEQDESC=$$GETDESC(vc38)
	quit

VP7	// Column post-processor - [SYSDEV,DBTBL5H]SORTORD4

	type public String vc38
	type Public String V,VL

	// Blank suppress the line
	if vc38="" set (V,VL)=""
	quit

VP8	// Column pre-processor - Variable: SEQDESC

	type public String vc43
	type Public String SEQDESC

	set SEQDESC=$$GETDESC(vc43)
	quit

VP9	// Column post-processor - [SYSDEV,DBTBL5H]SORTORD5

	type public String vc43
	type Public String V,VL

	// Blank suppress the line
	if vc43="" set (V,VL)=""
	quit

VP10	// Column pre-processor - Variable: SEQDESC

	type public String vc48
	type Public String SEQDESC

	set SEQDESC=$$GETDESC(vc48)
	quit

VP11	// Column post-processor - [SYSDEV,DBTBL5H]SORTORD6

	type public String vc48
	type Public String V,VL

	// Blank suppress the line
	if vc48="" set (V,VL)=""
	quit

VP12	// Column pre-processor - Variable: SEQDESC

	type public String vc53
	type Public String SEQDESC

	set SEQDESC=$$GETDESC(vc53)
	quit

VP13	// Column post-processor - [SYSDEV,DBTBL5H]SORTORD7

	type public String vc53
	type Public String V,VL

	// Blank suppress the line
	if vc53="" set (V,VL)=""
	quit

VP14	// Column pre-processor - Variable: SEQDESC

	type public String vc58
	type Public String SEQDESC

	set SEQDESC=$$GETDESC(vc58)
	quit

VP15	// Column post-processor - [SYSDEV,DBTBL5H]SORTORD8

	type public String vc58
	type Public String V,VL

	// Blank suppress the line
	if vc58="" set (V,VL)=""
	quit

VP16	// Column pre-processor - Variable: SEQDESC

	type public String vc63
	type Public String SEQDESC

	set SEQDESC=$$GETDESC(vc63)
	quit

VP17	// Column post-processor - [SYSDEV,DBTBL5H]SORTORD9

	type public String vc63
	type Public String V,VL

	// Blank suppress the line
	if vc63="" set (V,VL)=""
	quit

VP18	// Column pre-processor - Variable: SEQDESC

	type public String vc68
	type Public String SEQDESC

	set SEQDESC=$$GETDESC(vc68)
	quit

VP19	// Column post-processor - [SYSDEV,DBTBL5H]SORTORD10

	type public String vc68
	type Public String V,VL

	// Blank suppress the line
	if vc68="" set (V,VL)=""
	quit

VP20	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP21	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP22	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP23	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP24	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP25	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP26	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP27	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP28	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP29	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP30	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP31	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP32	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP33	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP34	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP35	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP36	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP37	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP38	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP39	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP40	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP41	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP42	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP43	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP44	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP45	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP46	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP47	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP48	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP49	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP50	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP51	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP52	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP53	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP54	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP55	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP56	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP57	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP58	// Column pre-processor - Variable: INCTXT

	type public String vc75
	type Public String INCTXT

	if vc75'="" set INCTXT="Increments:"
	else  set INCTXT=""
	quit

VP59	// Column post-processor - [SYSDEV,DBTBL5H]STATINC1

	type public String vc74
	type Public String V,VL

	// Blank line if no info
	if vc74="" set (V,VL)=""
	quit

VP60	// Column pre-processor - Variable: ZPREPP

	type public String vc2
	type Public Number verror
	type Public String ZPREPP
	type Number SEQ
	type String RID

	set RID=vc2

	// I18N=OFF: Excluded from I18N standards
	set verror=0
	for SEQ=91,111,31,51,71,201:20:281 do ZDBSPP5(SEQ,RID) quit:verror
 
	set ZPREPP=""
	quit

ZDBSPP5(Number SEQ,String RID)	/*
	Arguments:
		. SEQ	User defined processors
		. RID	Report name
	*/

	type Public Number verror
	type Public String VL
	type Number END,START

	set START=SEQ-.001,END=SEQ+20
	// I18N=OFF
	type ResultSet rs=Db.select("DATA","DBTBL5PR","LIBS='SYSDEV' AND RID=:RID AND SEQ>:START AND SEQ<:END","SEQ ASC")
	quit:rs.isEmpty()
	if SEQ=31 set VL="Query"
	else  if SEQ=51 set VL="Report Pre-Processor (After QUERY)"
	else  if SEQ=71 set VL="Report Post-Processor"
	else  if SEQ=91 set VL="Documentation"
	else  if SEQ=111 set VL="Report Pre-Processor (Before QUERY)"
	else  if SEQ=201 set VL="OPEN Pre-Processor"
	else  if SEQ=221 set VL="OPEN post-Processor"
	else  if SEQ=241 set VL="FETCH Pre-Processor"
	else  if SEQ=261 set VL="FETCH post-Processor"
	else  if SEQ=281 set VL="PRINT Pre-Processor"
	else  set VL=""
	set VL=$J("",25)_"<"_VL_">" do ZPPDSP quit:verror
	set VL=" " do ZPPDSP quit:verror
	while rs.next() do { quit:verror
		set VL=$J("",25)_rs.getRow()
		do ZPPDSP quit:verror
		}
	set VL=" " do ZPPDSP quit:verror
	quit

	// I18N=ON

VP61	// Column pre-processor - Variable: ZKEYDESC

	type public String vc4
	type Public String VD,ZKEYDESC
	type String X

	// I18N=OFF : excluded from I18N standards.
	// ---------- Report Section Description
	
	set X=vc4
	if X="@PH" set ZKEYDESC="Page Header & Trailer"
	else  if X="@RS" set ZKEYDESC="Report Summary"
	else  if X'?1"["1E.E1"]"1E.E set ZKEYDESC=""
	else  do {
		type String DI,FID

		set FID=X.piece(",",2).piece("]",1)
		set DI=X.piece("]",2)
		type RecordDBTBL1D dbtbl1d=Db.getRecord("DBTBL1D","%LIBS=""SYSDEV"",FID=:FID,DI=:DI",1)
		set ZKEYDESC=dbtbl1d.des
		}
	// I18N=ON
	quit

VP62	// Column pre-processor - Variable: ZSEC

	type public String vc4
	type Public String RID,ZSEC,ZZREP,ZZSBL,ZZSLF
	type String GRP
	set GRP=vc4
	type RecordDBTBL5DGC db5dgc=Db.getRecord("DBTBL5DGC","LIBS=""SYSDEV"",RID=:RID,GRP=:GRP",1)
	set ZSEC=db5dgc.reginfo
	set ZZSBL=db5dgc.blnksupr	// Suppress blank line indicator
	set ZZSLF=db5dgc.lfsupr		// Suppress line feed indicator
	// Repeat count
	set ZZREP=db5dgc.rptfrom_","_db5dgc.rptto_","_db5dgc.rptsize_","_db5dgc.rptcnt
	quit

VP63	// Column pre-processor - [SYSDEV,DBTBL5D]PROMPT

	type Public String V
	set V=$TR(V,$C(128),$C(124))
	quit

VP64	// Column pre-processor - Variable: ZLINE

	type public String vc76
	type Public String ZLINE,ZSEC,ZSECTION
	type Number H1,H2
	type String X,Y
	
	set X=ZSEC
	set Y=vc76
	set H1=X+$P(X,",",2)+1
	set H2=X+1
	
	if Y>H1 do {
		set ZSECTION="Trailer"
		set ZLINE=Y-H1-1
		} 
	else  if Y>H2 do {
		set ZSECTION="Detail"
		set ZLINE=Y-X-1
		} 
	else  do {
		set ZSECTION="Header"
		set ZLINE=Y
		} 
	
	quit

VP65	// Column pre-processor - Variable: ZSBL

	type public String vc76
	type Public String ZSBL,ZZSBL
	type Number I,L
	type String X

	set ZSBL=""
	quit:ZZSBL.get()=""
	
	set L=ZZSBL.length(",")
	for I=1:1:L set X=ZZSBL.piece(",",I) quit:X=""  do { quit:ZSBL="Y"
		type Number FROM,TO 
		set FROM=+X
		if X["-" set TO=$P(X,"-",2)
		else  set TO=FROM
		if vc76'<FROM,vc76'>TO set ZSBL="Y"
		}
	quit

VP66	// Column pre-processor - Variable: ZSLF

	type public String vc76
	type Public String ZSLF,ZZSLF
	// ---------- Suppress line feed ?
	
	set ZSLF=$S(+ZZSLF=vc76:"Y",1:"")
	quit

VP67	// Column pre-processor - Variable: ZREPEAT

	type public String vc76
	type Public String ZREPEAT,ZZREP
	set ZREPEAT=""
	quit:ZZREP=""
	if vc76'<ZZREP,vc76'>$P(ZZREP,"|",2) set ZREPEAT="Y"
	quit

VP68	// Column pre-processor - Variable: ZPREPP

	type public String vc4,vc5,vc2
	type Public Number verror
	type Number ITMSEQ,SEQ
	type String GRP,RID
	set verror=0
	set GRP=vc4
	set ITMSEQ=vc5
	set RID=vc2
	for SEQ=1,21 do ZDBSPP1(GRP,ITMSEQ,SEQ,RID) quit:verror
	quit
ZDBSPP1(String GRP,Number ITMSEQ,Number SEQ,String RID)	/*
	Arguments:
		. GRP		Group
		. ITMSEQ	Item number
		. SEQ		User defined pre/post-processors
		. RID		Report name
	*/
	type Public Number verror
	type Public String VL
	type Number END,START
	set START=SEQ-.001,END=SEQ+20
	// I18N=OFF
	type ResultSet rs=Db.select("DATA","DBTBL5D1","LIBS='SYSDEV' AND RID=:RID AND GRP=:GRP AND ITMSEQ=:ITMSEQ AND SEQ>:START AND SEQ<:END","SEQ ASC")
	quit:rs.isEmpty()
	if SEQ=1 set VL="Pre-Processor"
	else  if SEQ=21 set VL="Post-Processor"
	else  set VL=""
	set VL=$J("",25)_"<"_VL_">" do ZPPDSP quit:verror
	set VL=" " do ZPPDSP quit:verror
	while rs.next() do {
		set VL=$J("",25)_rs.getRow()
		do ZPPDSP quit:verror
		}
	set VL=" " do ZPPDSP quit:verror
	quit

ZPPDSP	// Display line
	type Public Number IOSL,verror,VFMQ,VLC
	if VLC+2>IOSL do {
		do VHDG0
		if VFMQ set verror=1
		}
	else  do VOM
	quit




