V00S068(Number %ProcessMode,RecordDBTBL33 fDBTBL33)   //DBS -  - SID= <DBTBL33> Batch Definition
 ;;Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:33 - pip
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fDBTBL33.exists() set fDBTBL33 = Class.new("RecordDBTBL33")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,zproc",VSID="DBTBL33",VPGM=$T(+0),VSNAME="Batch Definition"
 set VFSN("DBTBL33")="zfDBTBL33"
 set vPSL=1
 set KEYS(1)=fDBTBL33.%LIBS
 set KEYS(2)=fDBTBL33.BCHID
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fDBTBL33),VDA1(.fDBTBL33),^DBSPNT() quit

 if '%ProcessMode do VNEW(.fDBTBL33),VPR(.fDBTBL33),VDA1(.fDBTBL33)
 if %ProcessMode do VLOD(.fDBTBL33) quit:$G(ER)  do VPR(.fDBTBL33),VDA1(.fDBTBL33)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fDBTBL33)
	quit


VNEW(RecordDBTBL33 fDBTBL33) // Initialize arrays if %O=0
 
 do VDEF(.fDBTBL33)
 do VLOD(.fDBTBL33)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordDBTBL33 fDBTBL33)
 quit:fDBTBL33.%LIBS.isNull() ! fDBTBL33.BCHID.isNull() 
 quit:%ProcessMode  set ER=0 if (fDBTBL33.%LIBS="")!(fDBTBL33.BCHID="") set ER=1,RM=$$^MSG(1767,"%LIBS,BCHID") Q
 if Db.isDefined("DBTBL33","DBTBL33.%LIBS=:fDBTBL33.%LIBS AND DBTBL33.BCHID=:fDBTBL33.BCHID") S ER=1,RM=$$^MSG(2327) Q
 do fDBTBL33.setAuditFlag(1)
 if fDBTBL33.LTD="" set fDBTBL33.LTD=+$H
 if fDBTBL33.MAXSIZE="" set fDBTBL33.MAXSIZE=32000
 if fDBTBL33.MSGBUFS="" set fDBTBL33.MSGBUFS=100
 if fDBTBL33.SCHTIMR="" set fDBTBL33.SCHTIMR=10
 if fDBTBL33.THRTIMR="" set fDBTBL33.THRTIMR=10
 if fDBTBL33.TIME="" set fDBTBL33.TIME=$P($H,",",2)
 if fDBTBL33.USER="" set fDBTBL33.USER=%UID
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordDBTBL33 fDBTBL33) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordDBTBL33 fDBTBL33) // Display screen prompts
 set VO="54||13|0"
 set VO(0)="|0"
 set VO(1)=$C(2,1,80,0,0,0,0,0,0,0)_"11Tlqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk"
 set VO(2)=$C(3,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(3)=$C(3,16,12,1,0,0,0,0,0,0)_"01T Batch Name:"
 set VO(4)=$C(3,42,15,1,0,0,0,0,0,0)_"01T Last Modified:"
 set VO(5)=$C(3,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(6)=$C(4,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(7)=$C(4,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(8)=$C(5,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(9)=$C(5,10,18,1,0,0,0,0,0,0)_"01T Run-time Routine:"
 set VO(10)=$C(5,48,9,1,0,0,0,0,0,0)_"01T By User:"
 set VO(11)=$C(5,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(12)=$C(6,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(13)=$C(6,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(14)=$C(7,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(15)=$C(7,15,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(16)=$C(7,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(17)=$C(8,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(18)=$C(8,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(19)=$C(9,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(20)=$C(9,15,13,1,0,0,0,0,0,0)_"01T Access File:"
 set VO(21)=$C(9,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(22)=$C(10,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(23)=$C(10,11,17,0,0,0,0,0,0,0)_"01TSQL Where Clause:"
 set VO(24)=$C(10,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(25)=$C(11,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(26)=$C(11,8,20,0,0,0,0,0,0,0)_"01TSQL Distinct Clause:"
 set VO(27)=$C(11,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(28)=$C(12,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(29)=$C(12,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(30)=$C(13,1,1,0,52,0,0,0,0,0)_"11Tx"
 set VO(31)=$C(13,8,20,0,0,0,0,0,0,0)_"01TEXEC Parameter List:"
 set VO(32)=$C(13,80,1,0,52,0,0,0,0,0)_"11Tx"
 set VO(33)=$C(14,1,1,0,52,0,0,0,0,0)_"11Tx"
 set VO(34)=$C(14,80,1,0,52,0,0,0,0,0)_"11Tx"
 set VO(35)=$C(15,1,1,0,52,0,0,0,0,0)_"11Tx"
 set VO(36)=$C(15,7,21,0,52,0,0,0,0,0)_"01TInsert Restart Logic:"
 set VO(37)=$C(15,80,1,0,52,0,0,0,0,0)_"11Tx"
 set VO(38)=$C(16,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(39)=$C(16,2,26,0,0,0,0,0,0,0)_"01TAllow M Global References:"
 set VO(40)=$C(16,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(41)=$C(17,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(42)=$C(17,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(43)=$C(18,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(44)=$C(18,5,23,0,0,0,0,0,0,0)_"01TModify Procedural Code:"
 set VO(45)=$C(18,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(46)=$C(19,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(47)=$C(19,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(48)=$C(20,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(49)=$C(20,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(50)=$C(21,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(51)=$C(21,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(52)=$C(22,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(53)=$C(22,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(54)=$C(23,1,80,0,0,0,0,0,0,0)_"11Tmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordDBTBL33 fDBTBL33)  // Display screen data
 new V
 if %ProcessMode=5 new zproc
 if  set (zproc)=""
 else  set zproc=$G(zproc)
 
 s zproc=$G(zproc)
 //
 set VO="68|55|13|0"
 set VO(55)=$C(1,2,79,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD($G(%FN)))
 set VO(56)=$C(3,29,12,2,0,0,0,0,0,0)_"01T"_$E(fDBTBL33.BCHID,1,12)
 set VO(57)=$C(3,58,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fDBTBL33.LTD)
 set VO(58)=$C(3,70,10,2,0,0,0,0,0,0)_"01C"_$$TIM^%ZM(fDBTBL33.TIME)
 set VO(59)=$C(5,29,8,2,0,0,0,0,0,0)_"00U"_$E(fDBTBL33.PGM,1,8)
 set VO(60)=$C(5,58,20,2,0,0,0,0,0,0)_"01T"_$E(fDBTBL33.USER,1,20)
 set VO(61)=$C(7,29,40,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL33.DES,1,40)
 set VO(62)=$C(9,29,12,2,0,0,0,0,0,0)_"00U"_$E(fDBTBL33.PFID,1,12)
 set VO(63)=$C(10,29,50,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL33.WHERE,1,50)
 set VO(64)=$C(11,29,40,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL33.DISTINCT,1,40)
 set VO(65)=$C(13,29,40,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL33.FORMAL,1,40)
 set VO(66)=$C(15,29,1,2,0,0,0,0,0,0)_"00L"_$S(fDBTBL33.RESTIND:"Y",1:"N")
 set VO(67)=$C(16,29,1,2,0,0,0,0,0,0)_"00L"_$S(fDBTBL33.MGLOBAL:"Y",1:"N")
 set VO(68)=$C(18,29,1,2,0,0,0,0,0,0)_"00L"_$S(zproc.get():"Y",1:"N")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordDBTBL33 fDBTBL33)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=13,VPT=1,VPB=23,PGM=$T(+0),DLIB="SYSDEV",DFID="DBTBL33"
 set OLNTB=23001
 
 set VFSN("DBTBL33")="zfDBTBL33"
 //
 // 
	
	
 set %TAB(1)=$C(2,28,12)_"20U12402|1|[DBTBL33]BCHID"
 set %TAB(2)=$C(2,57,10)_"20D12403|1|[DBTBL33]LTD"
 set %TAB(3)=$C(2,69,10)_"20C12405|1|[DBTBL33]TIME"
 set %TAB(4)=$C(4,28,8)_"01U12402|1|[DBTBL33]PGM|||do VP1^V00S068(.fDBTBL33)|do VP2^V00S068(.fDBTBL33)"
 set %TAB(5)=$C(4,57,20)_"20T12404|1|[DBTBL33]USER"
 set %TAB(6)=$C(6,28,40)_"01T12401|1|[DBTBL33]DES"
 set %TAB(7)=$C(8,28,12)_"01U12408|1|[DBTBL33]PFID|[DBTBL1]||||||||25"
 set %TAB(8)=$C(9,28,50)_"00T12409|1|[DBTBL33]WHERE|||do VP3^V00S068(.fDBTBL33)||||||100"
 set %TAB(9)=$C(10,28,40)_"00T12422|1|[DBTBL33]DISTINCT|||do VP4^V00S068(.fDBTBL33)"
 set %TAB(10)=$C(12,28,40)_"00T12424|1|[DBTBL33]FORMAL"
 set %TAB(11)=$C(14,28,1)_"00L12421|1|[DBTBL33]RESTIND"
 set %TAB(12)=$C(15,28,1)_"00L12423|1|[DBTBL33]MGLOBAL"
 set %TAB(13)=$C(17,28,1)_"00L|*zproc|[*]@zproc"
 do VTBL(.fDBTBL33)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordDBTBL33 fDBTBL33) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordDBTBL33 fDBTBL33) //
	// Validate routine name

	type public Boolean ER
	type public String V, X

	if (V '= X) set ER = $$VALPGM^DBSCDI(X) quit:ER

	quit
VP2(RecordDBTBL33 fDBTBL33) //
	type public Boolean zproc

	if zproc.get().isNull(), (%ProcessMode < 2) do DEFAULT^DBSMACRO("@zproc", 1)

	quit
VP3(RecordDBTBL33 fDBTBL33) //
	type public String RM, X

	// I18N=OFF
	if X.isLike("%""%") set RM = "Use ' instead of "" for literal string reference"
	// I18N=ON

	quit
VP4(RecordDBTBL33 fDBTBL33) //
	type public Boolean ER
	type public String RM, X
	
	type List keys
	type Number I
	
	quit:X.isNull()
	
	type SchemaTable tblrec = Db.getSchemaTable(fDBTBL33.pfid)
	
	set keys = {List}(tblrec.primaryKeys)
	
	for I = 1:1:X.length(",") do { quit:ER
		
		if 'keys.contains(X.piece(",", I)) do {
		
			set ER = 1
			// I18N=OFF
			// Invalid qualifier - ~p1
			set RM = $$^MSG(1430, "DISTINCT "_X)
			// I18N=ON
		}
	}
	
	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordDBTBL33 fDBTBL33
 do VPR(.fDBTBL33)
 do VDA1(.fDBTBL33)
 do ^DBSPNT()
 quit

VW(RecordDBTBL33 fDBTBL33)
 do VDA1(.fDBTBL33)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordDBTBL33 fDBTBL33)
 do VDA1(.fDBTBL33)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordDBTBL33 fDBTBL33
 do VDA1(.fDBTBL33)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordDBTBL33 fDBTBL33
 if sn="DBTBL33" do vSET1(.fDBTBL33,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordDBTBL33 fDBTBL33,di,X)
 do fDBTBL33.setAuditFlag(1)
 set fDBTBL33.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordDBTBL33 fDBTBL33
 if fid="DBTBL33" quit $$vREAD1(.fDBTBL33,di)
 quit ""
vREAD1(RecordDBTBL33 fDBTBL33,di)
 quit fDBTBL33.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
