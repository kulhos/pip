public DBSRWBR2	/* Part DBSRW*
	ORIG: Chiang - 10/4/90
	PROCEDURE ID: DBSRWBR2
	DESC: DATA-QWIK Report Browser - Part 2
	
	** Change to private once that feature works in PSL

	Handle option to browse report.
	
	---- Comments --------------------------------------------------------
	INPUTS:
		. vCOL		column definitions (col1,col2,..coln)   
				[FID]DI#TAB,[FID]DI#TAB,...

	RETURNS:
		. VFMQ		0 = Continue, 1 = Quit
		. vcrt		SOM function status
		. vHDG		Heading information

	------ Revision History ------------------------------------------------

        07/26/05 - SkariahV- CR16679
	           Removed #WARN directive.
	              	
	11/22/04 - RussellDS - CR13365
		   Add public tag to DBSRWBR2 line to eliminate PSL warnings.

	12/09/03 - Dan Russell - CR 7239
                   Fix PSL warnings for operator precedence.

	01/02/03 - Dan Russell - 51351
		   Moved into PSL.  Removed most of old change history.

		   Removed clipboard capabilities.  Since screens are not longer
		   a focus, not reason to continue to support, especially for
		   reports.

		   This code was originally in routine SCAVHDG1.

	------------------------------------------------------------------------

	I18N=QUIT Excluded from I18N standards
	*/

	type Public Number lnoff,PGNO,vcrt
	type Public String %fkey,vCOL,vHDG()

	type Number DX,DY,I,LINE,LN1,LN2,MAXCOL,QUIT,SIZE(),TAB(),ZLN1,ZLN2
	type String BTM,COL(),DATA,OLD,VCOL,VIDINC,VIDOFF,VIDREV,X

	set BTM=$$BTM^%TRMVT,VIDREV=$$VIDREV^%TRMVT
	set VIDINC=$$VIDINC^%TRMVT,VIDOFF=$$VIDOFF^%TRMVT

	set VCOL=vCOL.piece("\",1)

	if PGNO=1 set LN1=1
	else  set X=$$TMPGET^DBSRWBR(0,PGNO,0,.DATA),LN1=+DATA
	set X=$$TMPGET^DBSRWBR(0,PGNO+1,0,.DATA)
	if X set LN2=DATA-1
	else  set LN2=$$LASTLINE^DBSRWBR

	set LN1=LN1-lnoff,LN2=LN2-lnoff
	set ZLN1=LN1,ZLN2=LN2

	// Number of columns, column ID, column position

	set MAXCOL=VCOL.length(",")
	for I=1:1:MAXCOL do {
		set X=VCOL.piece(",",I)
		set COL(I)=X.piece("#",1)
		set TAB(I)=X.piece("#",2)
		set SIZE(I)=X.piece("#",3)
		}

	do STATUS

	// Start at line 1 column 1

	set LINE=LN1,QUIT=0
	for  do { quit:QUIT
		type Number BLK,COLUMN

		set COLUMN=1
		set BLK=$$DSPNEW(COLUMN,LINE)
		if 'BLK do {
			do ASK
			set QUIT=1
			}

		// Try next field
		else  if BLK=1 set LINE=LINE+1
		else  set QUIT=1
		}

	// No valid field on screen
	// BROWSE option not available for this page
	if 'QUIT write $$MSG^%TRMVT($$^MSG("4912"),0,1)

	quit


ASK	// Read next input key 	read X#1 do ZB^%ZREAD

	type Public Number COLUMN,LINE
	type Public String %fkey()

	type Number BLK,QUIT
	type String X,z

	set QUIT=0

	for  do { quit:QUIT

		read X#1 do ZB^%ZREAD
		set z=%fkey

		if z="ENT" set z="CUD"			// Change enter to down

		if z="ESC" do {				// Exit
			do DSPOLD
			set QUIT=1
			}

		else  if z="DSP" do {			 // refresh screen CTRL/W
			do PRINT
			do STATUS
			set BLK=$$DSPNEW(COLUMN,LINE)
			}

		else  if "/CUU/CUD/CUF/CUB/"[("/"_z_"/") do {
			for  do { quit:'BLK
				do DSPOLD
				if z="CUU" do MOVUP
				if z="CUD" do MOVDN
				if z="CUF" do MOVRT
				if z="CUB" do MOVLF
				set BLK=$$DSPNEW(COLUMN,LINE)
				}
			}

		else  if z="HLP" do {
			if $$HELP do {
				do PRINT
				do STATUS
				set BLK=$$DSPNEW(COLUMN,LINE)
				}
			}

		else  if z="SEL" do {
			if $$SELECT do {
				do PRINT
				do STATUS
				set BLK=$$DSPNEW(COLUMN,LINE)
				}
			}

		do DSPNEW1
		}
	quit


MOVUP	// Private - Move up one row

	type Public Number LINE,LN1,LN2
	
	if LINE=LN1 set LINE=LN2
	else  set LINE=LINE-1
	quit


MOVDN	// Private - Move down one row

	type Public Number LINE,LN1,LN2
	
	if LINE=LN2 set LINE=LN1
	else  set LINE=LINE+1
	quit


MOVRT	// Private - Move right one column

	type Public Number COLUMN,MAXCOL
	
	if COLUMN=MAXCOL set COLUMN=1
	else  set COLUMN=COLUMN+1
	quit


MOVLF	// Private - Move left one column

	type Public Number COLUMN,MAXCOL
	
	if COLUMN=1 set COLUMN=MAXCOL
	else  set COLUMN=COLUMN-1
	quit


PRINT	// Private

	type Public Number LN1,LN2,ZLN1,ZLN2

	set LN1=+ZLN1,LN2=+ZLN2
	if 'LN1 set LN1=1

	do PRINT^DBSRWBR(LN1,LN2)

	set LN1=ZLN1,LN2=ZLN2
	quit


DSPNEW(Number COLUMN,	// Private
	Number LINE)

	type Public Number DX,DY,LN1,OP,SIZE(),TAB()
	type Public String OLD,vHDG()

	type Number BLK,LEN,X
	type String FIELD

	set BLK=""

	set X=$$TMPGET^DBSRWBR(LINE,0,0,.FIELD)
	if 'X quit -1						// Not defined

	set DX=TAB(COLUMN),DY=LINE-LN1+vHDG
	set LEN=SIZE(COLUMN)
	if LEN>0 set OLD=$E(FIELD,DX,LEN+DX-1)
	else  do {
		type Number DX1
		if TAB(COLUMN+1).data() set DX1=TAB(COLUMN+1)-2
		else  set DX1=999
		if DX1<DX set DX1=999
		set OLD=FIELD.extract(DX,DX1)
		}

	if OLD?." "!(OLD?."-"." ")!(OLD?."="." ") do {		// Skip field
		set BLK=1
		set OLD=""
		}

	else  if 'OP.get() do DSPNEW1

	quit BLK


DSPNEW1	// Private

	type Public Number DX,DY
	type Public String OLD,VIDOFF,VIDREV

	write $$CUP^%TRMVT(DX,DY),VIDREV,OLD,VIDOFF
	write $$CUP^%TRMVT(DX,DY),$$CUOFF^%TRMVT
	quit


DSPOLD	// Private

	type Public String OLD

	write OLD
	quit


SELECT()	/* Private - <SELECT> key

	Return 0 - table list not available
	       1 - flag to repaint screen
	*/

	type Public Number COLUMN
	type Public String COL()

	type Number DINAM,%ProcessMode
	type String I(),RM,X

	set DINAM=COL(COLUMN)
	if DINAM'["[" do MSG quit 0

	do FILEDEF(DINAM)
	if I(5)="" do MSG quit 0

	// Reset screen right margin
	set %ProcessMode=2
	set X=$$^DBSTBL(I(5))
	do TERM^%ZUSE(0,"ECHO/WIDTH=133")
	if RM.get()'="" do MSG quit 0

	quit 1


HELP()	// Private - Help key

	type Public Number COLUMN
	type Public String COL(),vHDG()

	type Number DOCFLG,DINAM,OLNTB,VPT
	type String I(),RM,X,ZDI,ZFID

	set DINAM=COL(COLUMN)
	if DINAM.extract(1)=""""!(DINAM'["[") do MSG quit 0

	do FILEDEF(DINAM)
	set I(2)="["_ZFID_"]"_ZDI

	type ResultSet rs=Db.select("SEQ","DBTBL11D","%LIBS='SYSDEV' AND FID=:ZFID AND DI=:ZDI","SEQ DESC")
	if rs.isEmpty() set DOCFLG=""
	else  if rs.next() set DOCFLG=rs.getCol("SEQ")

	set VPT=OLNTB\1000

	write $$CPS^%TRMVT 	// Save current locstion

	do SEL^DBSHLP(DINAM,.VPT,"","",1)

	if 'VPT!(VPT=24) do { quit 0			// Option not selected
		hang 2
		do STATUS
		write $$CPR^%TRMVT
		}

	if VPT=1 do PNTHDR^SCAVHDG quit 1 		// Repaint column header

	write $$LOCK^%TRMVT(vHDG,24)	       		// Lock column header
	quit 1


FILEDEF(DINAM)	// Private

	type Public String E8,E67,FID,I(),OLNTB,vHDG(),ZB,ZDI,ZFID

	type Number %TO

	set OLNTB=((vHDG-1)*1000)+1,%TO=60

	set ZFID=DINAM.piece("]",1).extract(2,99)
	set ZDI=$P(DINAM,"]",2)

	type RecordDBTBL1D dbtbl1d=Db.getRecord("DBTBL1D","%LIBS=""SYSDEV"",FID=:ZFID,DI=:ZDI")
	set I(1)=dbtbl1d.nod
	set I(2)=dbtbl1d.len
	set I(3)=dbtbl1d.dft
	set I(4)=dbtbl1d.dom
	set I(5)=dbtbl1d.tbl
	set I(6)=dbtbl1d.ptn
	set I(7)=dbtbl1d.xpo
	set I(8)=dbtbl1d.xpr
	set I(9)=dbtbl1d.typ
	set I(10)=dbtbl1d.des
	set I(11)=dbtbl1d.itp
	set I(12)=dbtbl1d.min
	set I(13)=dbtbl1d.max
	set I(14)=dbtbl1d.dec
	set I(15)=dbtbl1d.req

	set E8=I(9),E67=I(2),FID=ZFID,ZB=13
	quit


MSG	// Private

	write $$CPS^%TRMVT 			// save current location

	// Option not available for this field
	write $$MSG^%TRMVT($$^MSG("4913"),0,1)

	do STATUS
	write $$CPR^%TRMVT 			// restore
	quit


STATUS	// Private - Display function key name at status line

	type Public String BTM,ZSTATUS

	write BTM
	if ZSTATUS.get()="" do {
		type String A()

		set A(1)="HLP"
		set A(2)="SEL|List"
		set A(3)="ESC"

		set ZSTATUS=$$SHOWKEY^%TRMVT(.A)
		}

	write ZSTATUS
	quit
 #OPTION ResultClass ON
public String vSIG()	quit "60107^27446^Viji Skariah^7026"	// Signature - LTD^TIME^USER^SIZE
