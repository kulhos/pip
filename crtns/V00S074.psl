V00S074(Number %ProcessMode,RecordDBTBL5Q fDBTBL5Q)   // -  - SID= <DBTBL5Q> QWIK Report Definition
 ;;Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:33 - pip
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fDBTBL5Q.exists() set fDBTBL5Q = Class.new("RecordDBTBL5Q")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="DBTBL5Q",VPGM=$T(+0),VSNAME="QWIK Report Definition"
 set VFSN("DBTBL5Q")="zfDBTBL5Q"
 set vPSL=1
 set KEYS(1)=fDBTBL5Q.LIBS
 set KEYS(2)=fDBTBL5Q.QRID
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fDBTBL5Q),VDA1(.fDBTBL5Q),^DBSPNT() quit

 set ER=0 do VSCRPRE(.fDBTBL5Q) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fDBTBL5Q),VPR(.fDBTBL5Q),VDA1(.fDBTBL5Q)
 if %ProcessMode do VLOD(.fDBTBL5Q) quit:$G(ER)  do VPR(.fDBTBL5Q),VDA1(.fDBTBL5Q)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fDBTBL5Q)
	quit


VNEW(RecordDBTBL5Q fDBTBL5Q) // Initialize arrays if %O=0
 
 do VLOD(.fDBTBL5Q)
 do VDEF(.fDBTBL5Q)
 do VLOD(.fDBTBL5Q)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordDBTBL5Q fDBTBL5Q)
 quit:fDBTBL5Q.LIBS.isNull() ! fDBTBL5Q.QRID.isNull() 
 quit:%ProcessMode  set ER=0 if (fDBTBL5Q.LIBS="")!(fDBTBL5Q.QRID="") set ER=1,RM=$$^MSG(1767,"LIBS,QRID") Q
 if Db.isDefined("DBTBL5Q","DBTBL5Q.LIBS=:fDBTBL5Q.LIBS AND DBTBL5Q.QRID=:fDBTBL5Q.QRID") S ER=1,RM=$$^MSG(2327) Q
 do fDBTBL5Q.setAuditFlag(1)
 if fDBTBL5Q.BANNER="" set fDBTBL5Q.BANNER=1
 if fDBTBL5Q.CSCMP="" set fDBTBL5Q.CSCMP=1
 if fDBTBL5Q.DTL="" set fDBTBL5Q.DTL=1
 if fDBTBL5Q.LTD="" set fDBTBL5Q.LTD=+$P($H,",",1)
 if fDBTBL5Q.MSQL="" set fDBTBL5Q.MSQL=0
 if fDBTBL5Q.RSIZE="" set fDBTBL5Q.RSIZE=80
 if fDBTBL5Q.STAT="" set fDBTBL5Q.STAT=0
 if fDBTBL5Q.UID="" set fDBTBL5Q.UID=$$USERNAM^%ZFUNC
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
VNEWDQ(RecordDBTBL5Q fDBTBL5Q) // Original VNEW section
 
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
VLOD(RecordDBTBL5Q fDBTBL5Q) // User defined access section
 //
 set %REPEAT = 8 
 quit:%ProcessMode=0
 if VFMQ.get()?1N quit
 quit 
 #ACCEPT date=11/05/03;pgm=Screen compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
VLODDQ(RecordDBTBL5Q fDBTBL5Q) //Original VLOD section
 
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordDBTBL5Q fDBTBL5Q) // Display screen prompts
 set VO="43||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,1,80,0,0,0,0,0,0,0)_"11Tlqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk"
 set VO(2)=$C(2,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(3)=$C(2,4,15,0,0,0,0,0,0,0)_"01TQWIK Report ID:"
 set VO(4)=$C(2,33,5,0,0,0,0,0,0,0)_"01TUser:"
 set VO(5)=$C(2,56,13,0,0,0,0,0,0,0)_"01TLast Updated:"
 set VO(6)=$C(2,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(7)=$C(3,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(8)=$C(3,6,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(9)=$C(3,61,8,0,52,0,0,0,0,0)_"01TRoutine:"
 set VO(10)=$C(3,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(11)=$C(4,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(12)=$C(4,3,16,1,0,0,0,0,0,0)_"01T Access File(s):"
 set VO(13)=$C(4,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(14)=$C(5,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(15)=$C(5,3,16,0,0,0,0,0,0,0)_"01TReport Order by:"
 set VO(16)=$C(5,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(17)=$C(6,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(18)=$C(6,9,10,0,0,0,0,0,0,0)_"01T Break on:"
 set VO(19)=$C(6,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(20)=$C(7,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(21)=$C(7,35,12,1,0,0,0,0,0,0)_"01T Data Items "
 set VO(22)=$C(7,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(23)=$C(8,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(24)=$C(8,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(25)=$C(9,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(26)=$C(9,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(27)=$C(10,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(28)=$C(10,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(29)=$C(12,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(30)=$C(12,2,19,0,0,0,0,0,0,0)_"01TData Export Option:"
 set VO(31)=$C(12,35,14,0,0,0,0,0,0,0)_"01T Print Detail:"
 set VO(32)=$C(12,60,13,0,0,0,0,0,0,0)_"01T Banner Page:"
 set VO(33)=$C(12,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(34)=$C(13,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(35)=$C(13,9,12,0,0,0,0,0,0,0)_"01T Statistics:"
 set VO(36)=$C(13,54,19,0,0,0,0,0,0,0)_"01T  SQL Query Syntax:"
 set VO(37)=$C(13,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(38)=$C(14,1,30,0,0,0,0,0,0,0)_"11Txqqqqqqqqqqqqqqqqqqqqqqqqqqqqq"
 set VO(39)=$C(14,32,19,1,0,0,0,0,0,0)_"01T Query Definitions "
 set VO(40)=$C(14,52,28,0,52,0,0,0,0,0)_"11Tqqqqqqqqqqqqqqqqqqqqqqqqqqqq"
 set VO(41)=$C(14,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(42)=$C(15,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(43)=$C(15,80,1,0,0,0,0,0,0,0)_"11Tx"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordDBTBL5Q fDBTBL5Q)  // Display screen data
 new V
 //
 set VO="66|44|13|0"
 set VO(44)=$C(2,20,12,2,0,0,0,0,0,0)_"01T"_$E(fDBTBL5Q.QRID,1,12)
 set VO(45)=$C(2,39,16,2,0,0,0,0,0,0)_"01T"_$E(fDBTBL5Q.UID,1,16)
 set VO(46)=$C(2,70,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fDBTBL5Q.LTD)
 set VO(47)=$C(3,20,40,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.DESC,1,40)
 set VO(48)=$C(3,70,8,2,0,0,0,0,0,0)_"01T"_$E(fDBTBL5Q.PGM,1,8)
 set VO(49)=$C(4,20,60,2,0,0,0,0,0,0)_"00U"_$E(fDBTBL5Q.PFID,1,60)
 set VO(50)=$C(5,20,61,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.ORDERBY,1,100)
 set VO(51)=$C(6,20,60,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.BREAKON,1,60)
 set VO(52)=$C(8,2,78,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.FLD1,1,78)
 set VO(53)=$C(9,2,78,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.FLD2,1,78)
 set VO(54)=$C(10,2,78,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.FLD3,1,78)
 set VO(55)=$C(12,22,12,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.TRANS,1,12)
 set VO(56)=$C(12,50,1,2,0,0,0,0,0,0)_"00L"_$S(fDBTBL5Q.DTL:"Y",1:"N")
 set VO(57)=$C(12,74,1,2,0,0,0,0,0,0)_"00L"_$S(fDBTBL5Q.BANNER:"Y",1:"N")
 set VO(58)=$C(13,22,1,2,0,0,0,0,0,0)_"00L"_$S(fDBTBL5Q.STAT:"Y",1:"N")
 set VO(59)=$C(13,74,1,2,0,0,0,0,0,0)_"00L"_$S(fDBTBL5Q.MSQL:"Y",1:"N")
 set VO(60)=$C(15,2,78,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.QID1,1,78)
 set VO(61)=$C(16,2,78,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.QID2,1,78)
 set VO(62)=$C(17,2,78,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.QID3,1,78)
 set VO(63)=$C(18,2,78,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.QID4,1,78)
 set VO(64)=$C(19,2,78,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.QID5,1,78)
 set VO(65)=$C(20,2,78,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.QID6,1,78)
 set VO(66)=$C(21,2,78,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL5Q.QID7,1,78)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordDBTBL5Q fDBTBL5Q)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=23,VPT=1,VPB=21,PGM=$T(+0),DLIB="SYSDEV",DFID="DBTBL5Q"
 set OLNTB=21002
 
 set VFSN("DBTBL5Q")="zfDBTBL5Q"
 //
 // 
	
	
 set %TAB(1)=$C(1,19,12)_"21U12402|1|[DBTBL5Q]QRID"
 set %TAB(2)=$C(1,38,16)_"21T12415|1|[DBTBL5Q]UID|||||||||20"
 set %TAB(3)=$C(1,69,10)_"21D12403|1|[DBTBL5Q]LTD"
 set %TAB(4)=$C(2,19,40)_"01T12401|1|[DBTBL5Q]DESC||||do VP1^V00S074(.fDBTBL5Q)"
 set %TAB(5)=$C(2,69,8)_"20U12402|1|[DBTBL5Q]PGM"
 set %TAB(6)=$C(3,19,60)_"01U12401|1|[DBTBL5Q]PFID|[DBTBL1]:LIST||do VP2^V00S074(.fDBTBL5Q)"
 set %TAB(7)=$C(4,19,61)_"00T12410|1|[DBTBL5Q]ORDERBY|||do VP3^V00S074(.fDBTBL5Q)|do VP4^V00S074(.fDBTBL5Q)|||||100"
 set %TAB(8)=$C(5,19,60)_"00T12411|1|[DBTBL5Q]BREAKON|||do VP5^V00S074(.fDBTBL5Q)"
 set %TAB(9)=$C(7,1,78)_"01T12401|1|[DBTBL5Q]FLD1|||do VP6^V00S074(.fDBTBL5Q)|do VP7^V00S074(.fDBTBL5Q)"
 set %TAB(10)=$C(8,1,78)_"00T12401|1|[DBTBL5Q]FLD2|||do VP8^V00S074(.fDBTBL5Q)|do VP9^V00S074(.fDBTBL5Q)"
 set %TAB(11)=$C(9,1,78)_"00T12401|1|[DBTBL5Q]FLD3|||do VP10^V00S074(.fDBTBL5Q)|do VP11^V00S074(.fDBTBL5Q)"
 set %TAB(12)=$C(11,21,12)_"00T12401|1|[DBTBL5Q]TRANS|[STBLTFMT]||do VP12^V00S074(.fDBTBL5Q)"
 set %TAB(13)=$C(11,49,1)_"00L12404|1|[DBTBL5Q]DTL"
 set %TAB(14)=$C(11,73,1)_"00L12412|1|[DBTBL5Q]BANNER"
 set %TAB(15)=$C(12,21,1)_"00L12408|1|[DBTBL5Q]STAT|||do VP13^V00S074(.fDBTBL5Q)"
 set %TAB(16)=$C(12,73,1)_"00L12413|1|[DBTBL5Q]MSQL|||do VP14^V00S074(.fDBTBL5Q)"
 set %TAB(17)=$C(14,1,78)_"00T12401|1|[DBTBL5Q]QID1|||do VP15^V00S074(.fDBTBL5Q)"
 set %TAB(18)=$C(15,1,78)_"00T12401|1|[DBTBL5Q]QID2|||do VP16^V00S074(.fDBTBL5Q)"
 set %TAB(19)=$C(16,1,78)_"00T12401|1|[DBTBL5Q]QID3|||do VP17^V00S074(.fDBTBL5Q)"
 set %TAB(20)=$C(17,1,78)_"00T12401|1|[DBTBL5Q]QID4|||do VP18^V00S074(.fDBTBL5Q)"
 set %TAB(21)=$C(18,1,78)_"00T12401|1|[DBTBL5Q]QID5|||do VP19^V00S074(.fDBTBL5Q)"
 set %TAB(22)=$C(19,1,78)_"00T12401|1|[DBTBL5Q]QID6|||do VP20^V00S074(.fDBTBL5Q)"
 set %TAB(23)=$C(20,1,78)_"00T12401|1|[DBTBL5Q]QID7|||do VP21^V00S074(.fDBTBL5Q)"
 do VTBL(.fDBTBL5Q),VDEPRE(.fDBTBL5Q) if $G(ER) quit
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordDBTBL5Q fDBTBL5Q) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDEPRE(RecordDBTBL5Q fDBTBL5Q)  // Data Entry Pre-processor
 
 if ZQRUN.isNull() quit
 
 // Run mode
 
 // ====== Protect ACCESS FILES and DATA ITEMS prompts
 
 do PROTECT^DBSMACRO("DBTBL5Q.DESC")
 do PROTECT^DBSMACRO("DBTBL5Q.PFID")
 do PROTECT^DBSMACRO("DBTBL5Q.ORDERBY")
 do PROTECT^DBSMACRO("DBTBL5Q.BREAKON")
 do PROTECT^DBSMACRO("DBTBL5Q.FLD1")
 do PROTECT^DBSMACRO("DBTBL5Q.FLD2")
 do PROTECT^DBSMACRO("DBTBL5Q.FLD3")
 do PROTECT^DBSMACRO("DBTBL5Q.FLD4")
 do PROTECT^DBSMACRO("DBTBL5Q.FLD5")
 do PROTECT^DBSMACRO("DBTBL5Q.STAT")
 do PROTECT^DBSMACRO("DBTBL5Q.TRANS")
 do PROTECT^DBSMACRO("DBTBL5Q.DTL")
 do PROTECT^DBSMACRO("DBTBL5Q.BANNER")
 do PROTECT^DBSMACRO("DBTBL5Q.CNTREC")
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordDBTBL5Q fDBTBL5Q) //
 type String ZMSG
 if 'QRID.isNull() quit
 
 set ZMSG = $$^MSG(7289)
 do DEFAULT^DBSMACRO("DBTBL5Q.DESC",ZMSG,"1","0","0")

 quit 
 
VP2(RecordDBTBL5Q fDBTBL5Q) //
 type Number I

 set FILES = X
 set DLIB = "SYSDEV"
 set DFID = X.piece(",",1)
 set X = "" 

 do ^DBSDI 
 quit:ER  

 set ZQFID = FID
 set X = FILES 

 do ^DBSFVER 

 if 'ER.get() do {
	set FID = FILES.piece(",",1)
	set PFID = FILES.piece(",",1)
 }

 for  quit:X'?.E1","  set X = X.extract(1,$L(X)-1)
 
 if ER.get() quit

 if %ProcessMode quit
 
 quit  

VP3(RecordDBTBL5Q fDBTBL5Q) //
 type public String V

 type Number J, Z
 type String FL, Y, ZA(), ZB, ZZORD


 set I(3)=""
 
 if X.get() = "" quit

 if X = V quit    
 
 if X.length(",")>7 do { quit
	set ER = 1
	set RM = $$^MSG(1695) 
 }
 
 set ER=0
 set Z = X.length(",") 

 for J=1:1:Z if X.piece(",",J)="" set ER=1 quit

 if ER.get() set RM=$$^MSG(1475) quit
 
 set FL = fDBTBL5Q.pfid.piece(",",1)

 type RecordDBTBL1 db1 = Db.getRecord("DBTBL1","%LIBS='SYSDEV',FID=:FL")

 if db1.acckeys = X  do { quit
	set ER = 1
	set RM = $$^MSG(3049,X) 
 } 

 do ORDERBY^DBSEXEQ6(fDBTBL5Q.pfid,X,.ZZORD)
 
 quit:ER
 
 set X="" 
 for J=1:1 do { quit:Y=""
	set Y = ZZORD.piece("|",J)  
	quit:Y=""
	set ZB = Y.piece("]",2)
	set Y = "["_Y.piece(",",2) 
	if ZA(ZB).exists() set ER=1 set RM=$$^MSG(871,Y) set Y="" quit
	set ZA(ZB) = ZB

	if '((ZB?1A.AN)!(Z?1"%".AN)) quit         // Skip dummy key

	if VORDER(ZB).exists() set X = X_Y_"/DESC"_","
	else  set X = X_Y_","
 }

 quit:ER

 set X = X.extract(1,X.length()-1)
 set V = "*****************************************"
 
 quit
VP4(RecordDBTBL5Q fDBTBL5Q) //
 set I(3) = "@SELDI^DBSFUN(FILES,vSTR):LIST"
 quit
VP5(RecordDBTBL5Q fDBTBL5Q) //
 type Number i, j
 type String DI, ZORD, ZORDDI

 quit:X.isNull()

 set ZORD = fDBTBL5Q.orderby

 // No ORDER BY specified, default from table's keys
 if ZORD.isNull() do ZZORD(.fDBTBL5Q,.ZORD)

 // Check to see if only column name was entered
 for i=1:1:X.length(",") do {
	set DI = X.piece(",",i)

	// Already in [TABLE]COLUMN format
	if DI.contains("[") quit
	
	// Not in [TABLE]COLUMN format
	for j=1:1:ZORD.length(",") do {
		set ZORDDI = ZORD.piece(",",j)
		if ZORDDI.piece("]",2) = DI set DI = ZORDDI
		}
	// Replace original entry with [TABLE]COLUMN format
	set X.piece(",",i) = DI
	}
	
 // Select name from list: ~p1 
 if '{List}ZORD.contains(X,",") do Runtime.setErrMSG("DBTBL5Q",2467,ZORD) quit:ER

 quit

 
 // Default to access keys from the primary file
 
ZZORD(RecordDBTBL5Q fDBTBL5Q,String ZORD) 	//

 type Number i, len
 type String KEYS,PFID

 set PFID=fDBTBL5Q.pfid
 set PFID=PFID.piece(",",1)
 type RecordDBTBL1 db1=Db.getRecord("DBTBL1","%LIBS='SYSDEV',FID=:PFID")

 set KEYS=db1.acckeys
 set ZORD=""

 set len=KEYS.length(",")

 for i=1:1:len do {
	if KEYS.piece(",",i).isLiteral() quit
	set ZORD=ZORD_"["_PFID_"]"_KEYS.piece(",",i)_","
 	}

 // Remove trailing comma
 set ZORD=ZORD.extract(1,ZORD.length()-1)

 quit
VP6(RecordDBTBL5Q fDBTBL5Q) //
 type public String zztblfid

 type Number Z2
 type String BK, Z, Z1

 set Z = fDBTBL5Q.breakon
 if X'="",Z'="" do {
 	set Z1 = Z.piece("]",2)
	set BK = Z1.piece("/",1)
 	for Z2=1:1 set Z1=X.piece(",",Z2) quit:Z1=""  do {
		if Z1["]" set Z1=Z1.piece("]",2) 
		if Z1=BK.get() set BK=""
	}
 	if 'BK.get().isNull() set ER=1 set RM=$$^MSG(1757,Z)
 }
 
 quit:ER

 if 'X.isNull(), FILES.isLike("%,%"), zztblfid.exists(), 'zztblfid.isNull(), 'X.isLike("%,%"), 'X.beginsWith("[") set X = "["_zztblfid_"]"_X

 do PPDI^DBSEXEQ(.X,FID,FILES,.I(),.RM,.ER)

 quit:ER
 
 if X?1"@".E do DELETE^DBSMACRO("DBTBL5Q.TRANS")
 if X?1"@".E do GOTO^DBSMACRO("DBTBL5Q.MSQL")

 quit
VP7(RecordDBTBL5Q fDBTBL5Q) //
 set I(3)="@SELDI^DBSFUN(FILES,vSTR):LIST"
 quit
VP8(RecordDBTBL5Q fDBTBL5Q) //
 type public String zztblfid

 if 'X.isNull(), FILES.isLike("%,%"), zztblfid.exists(), 'zztblfid.isNull(), 'X.isLike("%,%"), 'X.beginsWith("[") set X = "["_zztblfid_"]"_X

 do PPDI^DBSEXEQ(.X,FID,FILES,.I(),.RM,.ER)
 quit
VP9(RecordDBTBL5Q fDBTBL5Q) //
 set I(3)="@SELDI^DBSFUN(FILES,vSTR):LIST"
 quit
VP10(RecordDBTBL5Q fDBTBL5Q) //
 type public String zztblfid
 
 if 'X.isNull(), FILES.isLike("%,%"), zztblfid.exists(), 'zztblfid.isNull(), 'X.isLike("%,%"), 'X.beginsWith("[") set X = "["_zztblfid_"]"_X

 do PPDI^DBSEXEQ(.X,FID,FILES,.I(),.RM,.ER)
 quit
VP11(RecordDBTBL5Q fDBTBL5Q) //
 set I(3)="@SELDI^DBSFUN(FILES,vSTR):LIST"
 quit
VP12(RecordDBTBL5Q fDBTBL5Q) //
 if X="" Q
 
 if 'Db.isDefined("DBCTL","NAME='TFMT',CODE=:X") quit
 
 do DEFAULT^DBSMACRO("DBTBL5Q.BANNER",0,"1","0","0")
 
 // SELECT PRINT DETAIL OPTION
 do GOTO^DBSMACRO("DBTBL5Q.CNTREC")
 
 quit
VP13(RecordDBTBL5Q fDBTBL5Q) //
 
 // RUN mode ?
 if ZQRUN.get() set UX=1 quit
 
 // Format page only
 if 'X do { quit
	set %PAGE=2
	set %PG=1 
 }
 
 // Access stat screen
 set %PAGE=3
 set %PG=1 

 quit
VP14(RecordDBTBL5Q fDBTBL5Q) //
 // Convert DATA-QWIK query syntax into PROFILE/SQL syntax
 
 type Number i
 type String pfid, qry(), WHERE

 if 'V,X 
 else  quit
 
 // Changed from DQ to SQL synatx
 
 set qry(1) = fDBTBL5Q.qid1
 set qry(2) = fDBTBL5Q.qid2
 set qry(3) = fDBTBL5Q.qid3
 set qry(4) = fDBTBL5Q.qid4
 set qry(5) = fDBTBL5Q.qid5
 set qry(6) = fDBTBL5Q.qid6
 set qry(7) = fDBTBL5Q.qid7
 set qry(8) = fDBTBL5Q.qid8

 set pfid = fDBTBL5Q.pfid	// Primary file

 set WHERE=$$WHERE^SQLCONV(.qry,pfid)   ; SQL WHERE statement
 if WHERE="" quit

 for i=1:1:8 set qry(i)=""	// Delete old syntax

 do CONVLN^SQLCONV(WHERE,78,.qry) ; New syntax

 set fDBTBL5Q.qid1 = qry(1)
 set fDBTBL5Q.qid2 = qry(2)
 set fDBTBL5Q.qid3 = qry(3)
 set fDBTBL5Q.qid4 = qry(4)
 set fDBTBL5Q.qid5 = qry(5)
 set fDBTBL5Q.qid6 = qry(6)
 set fDBTBL5Q.qid7 = qry(7)
 set fDBTBL5Q.qid8 = qry(8)

 do DISPLAY^DBSMACRO("ALL")
 do GOTO^DBSMACRO("END")
 
 quit
VP15(RecordDBTBL5Q fDBTBL5Q) //
 type String FILES, PFID, ZX

 set FILES=""
 set PFID=""

 do PPQ^DBSEXEQ(fDBTBL5Q,.FILES,.PFID,.X,.RM,.ER)

 quit
VP16(RecordDBTBL5Q fDBTBL5Q) //
 type String FILES, PFID, ZX

 set FILES=""
 set PFID=""

 do PPQ^DBSEXEQ(fDBTBL5Q,.FILES,.PFID,.X,.RM,.ER)

 quit
VP17(RecordDBTBL5Q fDBTBL5Q) //
 type String FILES, PFID, ZX
 
 set FILES=""
 set PFID=""

 do PPQ^DBSEXEQ(fDBTBL5Q,.FILES,.PFID,.X,.RM,.ER)

 quit
VP18(RecordDBTBL5Q fDBTBL5Q) //
 type String FILES, PFID, ZX
 
 set FILES=""
 set PFID=""

 do PPQ^DBSEXEQ(fDBTBL5Q,.FILES,.PFID,.X,.RM,.ER)

 quit
VP19(RecordDBTBL5Q fDBTBL5Q) //
 type String FILES, PFID, ZX
 
 set FILES=""
 set PFID=""

 do PPQ^DBSEXEQ(fDBTBL5Q,.FILES,.PFID,.X,.RM,.ER)

 quit
VP20(RecordDBTBL5Q fDBTBL5Q) //
 type String FILES, PFID, ZX
 
 set FILES=""
 set PFID=""

 do PPQ^DBSEXEQ(fDBTBL5Q,.FILES,.PFID,.X,.RM,.ER)

 quit
VP21(RecordDBTBL5Q fDBTBL5Q) //
 type String FILES, PFID, ZX
 
 set FILES=""
 set PFID=""

 do PPQ^DBSEXEQ(fDBTBL5Q,.FILES,.PFID,.X,.RM,.ER)

 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordDBTBL5Q fDBTBL5Q
 do VPR(.fDBTBL5Q)
 do VDA1(.fDBTBL5Q)
 do ^DBSPNT()
 quit

VW(RecordDBTBL5Q fDBTBL5Q)
 do VDA1(.fDBTBL5Q)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordDBTBL5Q fDBTBL5Q)
 do VDA1(.fDBTBL5Q)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordDBTBL5Q fDBTBL5Q
 do VDA1(.fDBTBL5Q)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordDBTBL5Q fDBTBL5Q
 if sn="DBTBL5Q" do vSET1(.fDBTBL5Q,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordDBTBL5Q fDBTBL5Q,di,X)
 do fDBTBL5Q.setAuditFlag(1)
 set fDBTBL5Q.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordDBTBL5Q fDBTBL5Q
 if fid="DBTBL5Q" quit $$vREAD1(.fDBTBL5Q,di)
 quit ""
vREAD1(RecordDBTBL5Q fDBTBL5Q,di)
 quit fDBTBL5Q.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 //
VSCRPRE(RecordDBTBL5Q fDBTBL5Q)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 set LIBS = "SYSDEV"
 quit
 #ACCEPT date=11/05/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
