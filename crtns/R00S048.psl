R00S048	// DBSPPLST - DATA-QWIK Pre/Post-Proc Library Listing
	// Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:38 - pip

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ

	set RID="DBSPPLST"
	set RN="DATA-QWIK Pre/Post-Proc Library Listing"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB

	set %READ="IO/REQ,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String %TIM,BLANK,CONAM,LINKS,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="DBSPPLST",RN="DATA-QWIK Pre/Post-Proc Library Listing"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=ACCESS
			type String CHRSET=$$^UCIOENCD("Report","DBSPPLST","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60											// Non-interactive
	else  do {											// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$CLEARXY^%TRMVT
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$SCR132^%TRMVT											// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DBTBL13D]DATA#6#120"

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(,),VWHERE


		set VWHERE=""
		set VWHERE=VWHERE_"DBTBL13.PID IN (SELECT ELEMENT FROM TMPDQ WHERE PI"
		set VWHERE=VWHERE_"D=:%ProcessID)"
		set VBNRINFO("WHERE")=VWHERE

		set VBNRINFO("DESC")="DATA-QWIK Pre/Post-Proc Library Listing"
		set VBNRINFO("PGM")="R00S048"
		set VBNRINFO("RID")="DBSPPLST"
		set VBNRINFO("TABLES")="DBTBL13D,DBTBL13"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DBTBL13D]LIBS"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DBTBL13D]13"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DBTBL13D]PID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DBTBL13D]SEQ"


		do ^DBSRWBNR(IO,.VBNRINFO(,))											// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1										// Group break flags
			set VT(I)=0											// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	type ResultSet rwrs=Db.select("DBTBL13D.LIBS,DBTBL13D.PID,DBTBL13D.SEQ,DBTBL13.PID,DBTBL13.DESC,DBTBL13.UID,DBTBL13.DATE,DBTBL13.DOC,DBTBL13.DOC2,DBTBL13.DOC3,DBTBL13D.DATA","DBTBL13D,DBTBL13","DBTBL13.PID IN (SELECT ELEMENT FROM TMPDQ WHERE PID=:%ProcessID)","DBTBL13D.LIBS,DBTBL13D.PID,DBTBL13D.SEQ","","DQMODE=1")
	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11
	set vc1=V.piece(9.char(),1)											// DBTBL13D.LIBS
	set vc2=V.piece(9.char(),2)											// DBTBL13D.PID
	set vc3=V.piece(9.char(),3)											// DBTBL13D.SEQ
	set vc4=V.piece(9.char(),4)											// DBTBL13.PID
	set vc5=V.piece(9.char(),5)											// DBTBL13.DESC
	set vc6=V.piece(9.char(),6)											// DBTBL13.UID
	set vc7=V.piece(9.char(),7)											// DBTBL13.DATE
	set vc8=V.piece(9.char(),8)											// DBTBL13.DOC
	set vc9=V.piece(9.char(),9)											// DBTBL13.DOC2
	set vc10=V.piece(9.char(),10)											// DBTBL13.DOC3
	set vc11=V.piece(9.char(),11)											// DBTBL13D.DATA
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

MEMO(String MEMO,Number LINE,Number SIZE)	// Print all lines of memo, except last - return it in V

	type public Number IOSL,VFMQ,VLC
	type public String VL
	type Number I,TAB,VLLEN
	type String X

	set TAB=(LINE#1000)-1											// Location
	set MEMO=MEMO.trim()

	if MEMO.length()'>SIZE quit MEMO

		set VLLEN = VL.length()
	for  do { quit:VFMQ!(MEMO="")
		set X=MEMO.extract(1,SIZE)
		if X[" " do {
			for I=SIZE:-1:1 quit:X.extract(I)=" "
			set X=X.extract(1,I-1)
		}
		set MEMO=MEMO.extract(X.length()+1,MEMO.length())
		set X=X.trim()
		set MEMO=MEMO.trim() quit:MEMO.isNull()
		// Print this portion
		if VLC+1>IOSL do VHDG0 if VFMQ set VFMQ=1 quit
		set VL=VL_"".justify(TAB-VL.length())_X do VOM
		set VL="".justify(TAB)
	}
	set VL="".justify(VLLEN)
	quit X

VEXIT(NOINFO)	// Exit from report
	type public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data

	quit

VPRINT	// Print section
	type public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0										// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1
	quit

VSUM	// Report Group Summary
	type public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type public Number VRWOPT(),VT()
	type public String VSTATS()

	set VT(4)=VT(4)+1
	quit

VDTL3	// Detail
	type public String %TIM,BLANK,IOSL,LINKS,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	quit:VD(3)  set VD(3)=1											// Print flag
	if VLC+8>IOSL do VHDG0 quit:VFMQ

	do VOM
	set VL=$E(vc4,1,12)
	set VL=VL_"".justify(17-VL.length())_($E(vc5,1,40))
	set VL=VL_"".justify(66-VL.length())_("User: ")
	set VL=VL_"".justify(72-VL.length())_($E(vc6,1,20))
	set VL=VL_"".justify(106-VL.length())_("Date: ")
	set VL=VL_"".justify(112-VL.length())_($J($$DAT^%ZM(vc7),10))
	do VOM
	do VOM
	set V=vc8,VO=V do VP1 quit:VFMQ!verror.get()  set V=$E(V,1,75) set VL="                 "_V
	if 'VL.translate(" ").isNull() do VOM
	set VL="                 "_($E(vc9,1,75))
	if 'VL.translate(" ").isNull() do VOM
	set VL="                 "_($E(vc10,1,75))
	if 'VL.translate(" ").isNull() do VOM
	do VP2 quit:VFMQ!verror.get()  set V=$$MEMO(LINKS,7018,100) set VL="                 "_V
	if 'VL.translate(" ").isNull() do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$E(BLANK,1,1) set VL="                 "_V
	if 'VL.translate(" ").isNull() do VOM
	quit

VDTL4	// Detail
	type public String %TIM,BLANK,IOSL,LINKS,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="     "_($E(vc11,1,120))
	do VOM
	quit


VHDG0	// Page Header
	type public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,BLANK,CONAM,LINKS,RID,RN,VL,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit											// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+5,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM.get(),1,45)
	set VL=VL_"".justify(100-VL.length())_("Run Date:")
	set VL=VL_"".justify(110-VL.length())_($E(vrundate,1,10))
	set VL=VL_"".justify(123-VL.length())_($E(%TIM,1,8))
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_"".justify(102-VL.length())_("System:")
	set VL=VL_"".justify(110-VL.length())_($E(vsysdate,1,10))
	set VL=VL_"".justify(122-VL.length())_("Page:")
	set VL=VL_"".justify(128-VL.length())_($E($J(VPN,3),1,3))
	do VOM
	do VOM
	set VL=" "_("Name            Description")
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)											// Lock report page heading

	quit


VOM	// Output print line
	type public Number AUXPTR,vcrt,vlc,VLC,VRG
	type public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {											// Non-CRT device (form feed)
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if 'AUXPTR.get() write 12.char(),!
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if vcrt<2 write VL,!											// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)										// Save in BROWSER buffer
	set VLC=VLC+1,VL=""											// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - [SYSDEV,DBTBL13]DOC

	type public String BLANK

	// Use BLANK to add or not a blank line after all documentation.
	// Keeps us from having two blanks in case there is no documentation.

	set BLANK = 9.char()	// Line will not be blank to start

	quit

VP2	// Column pre-processor - Variable: LINKS

	type public String vc4
	type public String LINKS

	type Boolean rptHit, scrnHit
	type String PID

	set PID = vc4
	set LINKS = ""

	type ResultSet rs = Db.select("TYP,NAME", "DBTBL13LNK", "LIBS='SYSDEV' AND PID=:PID", "TYP ASC")

	quit:rs.isEmpty()

	set LINKS = "Screen/Report References: "

	set (rptHit, scrnHit) = 0

	while rs.next() do {

		if (rs.getCol("TYP") = -2), 'scrnHit do {

			set LINKS = LINKS_"  Screen(s) - "
			set scrnHit = 1
		}
		else  if 'rptHit do {

			set LINKS = LINKS_"  Report(s) - "
			set rptHit = 1
		}

		set LINKS = LINKS_rs.getCol("NAME")_"; "
	}

	if LINKS.endsWith("; ") set LINKS = LINKS.extract(1, LINKS.length() - 2)

	quit

VP3	// Column pre-processor - Variable: BLANK

	type public String vc8,vc9,vc10
	type public String BLANK, LINKS, V

	// If all preceeding lines are null, don't need another blank line

	if vc8.isNull(), vc9.isNull(), vc10.isNull(), LINKS.isNull() set BLANK = ""

	quit
