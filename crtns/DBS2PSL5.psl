public	DBS2PSL5	// DBS - U - V7.0 PSL Screen Compiler
	/*
	       ORIG:  Bob (8447) - 04/08/87
	       DESC: DECODE USER DEFINED REQ SET DEFINITIONS

	      INPUT:             X = (BAL,IRN) OR (BAL-,IRN-)
	             %NAMCUR(DINAM)= LLTT
	     OUTPUT:
	   I18N=QUIT: Exculded from I18N standards.

	  ---------- Revision History -------------------------------------------
	  06/23/06 - Pete Chenard - 23555
	  	     Removed Hang 5 from ERR section.
	  	     Cleaned up compiler warnings.
	  	
	   01/12/05 - Pete Chenard - 18980
	   	      Modified XLATE section to recognize if DINAM is a 
	   	      local variable rather than a column name.

	   08/13/05 - TITOVE - 18351
		      Temporary patch to enable screen compiles. To see changes
                      made, please search for TITOVE. Also patched logic in
		      DEFAULT section based on p04devlx version.

	   04/21/05 - Pete Chenard - CR14146
	   	      Several bug fixes relating to data item set logic.
	   	      
	   12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	   10/24/02 - Pete Chenard - 45497
		      Converted to PSL
		      Removed old revision history


	*/

	type Public String %MOD,RM,TMP(),X
	type Public Number ER
	type public String DILNM,DINAM,LINE,LOOP,NS,Q,QQ,SAVDI,XCOMP,XNS,VRSEQ,XR0,XR1,XR7,XR7REG,XR7VAR,XR8,XR9,z,ZXR7

	// TITOVE - initialized variables for the first run through
	if 'TMP(1000).exists() set (LINE,LOOP,NS,Q,QQ,SAVDI,XCOMP,XNS,VRSEQ,XR0,XR1,XR7,XR7REG,XR7VAR,XR8,XR9,z,ZXR7)=""

	set XR9=1 
	set Q=$C(34) 
	set QQ=Q_Q
	set LINE = ""
	set LINE=LINE.justify(60,1,"_")


	if X="" quit
	set XR0=X

	if 'TMP(1000).exists() do {
		set VRSEQ=0 set XR8=1
		if 'Db.isDefined("DBTBL2PP","LIBS=:%Library,SID=:SID,SEQ=0,PSEQ=21") do {

			// Screen post processor does not contain any code
			set TMP(1000,XR8)="" 
			set XR8=XR8+1
			set TMP(1000,XR8)=" quit" 
			set TMP(1000,XR8+1)="" 
			set TMP(1000,XR8+2)="VSPP"
			// TITOVE - PATCH START
			// Need to add call to  Required Data Item Def section
			set TMP(1000,XR8+3)=""
			set TMP(1000,XR8+4)=" do VSPPREQ"_"("_vobjlst("actual")_") if ER quit" 
			set TMP(1000,XR8+5)=""
			set XR8=XR8+6
			// TITOVE - PATCH END
			}  // isDefined

	   	set TMP(1000,XR8)="" 
	   	set TMP(1000,XR8+1)="VSPPREQ("_vobjlst("formal")_") " 
	   	set XR8=XR8+2
	   	set TMP(1000,XR8)=" //"_$E(LINE,1,55) 
	   	set XR8=XR8+1
	   	set TMP(1000,XR8)=" //  User Defined Required Data Item Definitions" 
	   	set XR8=XR8+1
	   	set TMP(1000,XR8)=" //"_$E(LINE,1,55) 
	   	set TMP(1000,XR8+1)="" 
	   	set TMP(1000,XR8+2)=" set ER=0"
	
		set XR7=XR8+5 
		set XR8=XR8+100
		}  //'$d(TMP(1000)


	set VRSEQ=VRSEQ+1
	set TMP(1000,XR7)=""

	// Reserve next entry for later processing

	set ZXR7=XR7+1
	set z=" for I=%MODS:1:%REPEAT+%MODS-1"
	set XR7VAR=z_" do VR"_VRSEQ_"("_vobjlst("actual")_") if ER set NI=((I-1)*"_%MOD_")+(1+%MODOFF) quit"
	set XR7REG=" do VR"_VRSEQ_"("_vobjlst("actual")_") if ER"

	set TMP(1000,XR7+2)=" quit" 
	set XR7=XR7+2

	set TMP(1000,XR8)="" 
	set TMP(1000,XR8+1)="VR"_VRSEQ_"("_vobjlst("formal")_") " 
	set XR8=XR8+2

	for  set XR1=$P(XR0,")",XR9) do:XR1="" DONE quit:XR1=""  do {
		type Number %I1,I
		type String DINAM
		
		set XR1=$P(XR1,"(",2)
		type String CODE 
		set CODE=" I "
		for %I1=1:1 set DINAM=$P(XR1,",",%I1) quit:DINAM=""  do REQ(DINAM,.CODE()) if ER quit

		// Remove , from end of command line

		set TMP(1000,XR8)="" 
		set XR8=XR8+1 
		set TMP(1000,XR8)=" // ("_XR1_")" 
		set XR8=XR8+1
		set CODE=$E(CODE,1,$L(CODE)-1)
		if $O(CODE(""))="" set CODE=CODE_" quit"
		set TMP(1000,XR8)="" 
		set XR8=XR8+1

		set TMP(1000,XR8)=CODE
		set XR8=XR8+1

		for I=1:1 quit:'CODE(I).exists()  set TMP(1000,XR8)=" if "_$E(CODE(I),1,$L(CODE(I))-1) set XR8=XR8+1
		if $O(CODE(""))'="" set TMP(1000,XR8-1)=TMP(1000,XR8-1)_" quit"
	
	   	set TMP(1000,XR8)="" 
		set XR8=XR8+1
		set XR9=XR9+1 
		}  // for

	quit  // end of program


REQ(String DINAM, String CODE())
	//  Default to ON condition ... either DI or DI+
	type Public Number FID,ER
	type Public String %NAMCUR(),FILES,QQ,TMP(),XR7REG,XR7VAR,ZXR7
	type String DI,LIB,NS,PFID,X1,XON,Z
	type Number z
	
	set XON = 1
	if DINAM["-",DINAM.piece("-",2,99).isNull() set DINAM=DINAM.piece("-",1) set XON = 0

	if DINAM?1"@".E do VAR if 1
	
	else  do {  quit:ER'=""
		type String DFID, DLIB, X
		set ER = ""
		if DINAM'?1"["1E.E1"]"1E.E do DEFAULT(DINAM,.DFID) if ER do ERR quit
		set DLIB = %Library 
		set PFID = FILES.get()
		set DFID = $P(PFID,",",1) 
		set X = DINAM 
		do ^DBSDI 
		if ER do ERR
		set DINAM="["_LIB_","_FID_"]"_DI 
		do ^DBSCHK if ER'="" do ERR quit
	
		// TITOVE - PATCH START
		// Convert string such as "$P(fUTBLACC,""|"",43)" into current
		// standard reference "fUTBLACC.deprnpbp"
		set NS = NS.extract(4,NS.find(",")-2)_"."_DI.lowerCase()
		// TITOVE - PATCH END
		}


	set Z=$S(DINAM[",":"["_$P(DINAM,",",2,3),1:DINAM)
	set NS = $$XLATE(Z)
	// on the screen
	if '%NAMCUR(Z).exists() do ERR quit
	if %NAMCUR(Z)["+" do {
		set TMP(1000,ZXR7)=XR7VAR
		if NS["." set NS = NS.piece(".",1)_"(I)."_NS.piece(".",2)
		else  set NS=NS.piece("(1)",1)_"(I)"_NS.piece("(1)",2,99)
	}
	else  do {
		type String XNS
		quit:TMP(1000,ZXR7).exists()
		set TMP(1000,ZXR7)=XR7REG
		set XNS = 1 
		if %NAMCUR(Z).exists() set XNS = %NAMCUR(Z).piece("|",2)
		set TMP(1000,ZXR7) = TMP(1000,ZXR7)_" set NI="_XNS_" quit"
		}  // end else


	set X1 = "" 
	if XON set X1 = "'"

	if CODE.length() > 200 set z=$O(CODE(""),-1)+1 set CODE(z)=CODE set CODE=" I "
	set CODE=CODE_"("_NS_X1_"="_QQ_"),"
	quit


XLATE(String DINAM)
	type Public String fsn(),NS
	type String col,fid,sn
	
	if $E(DINAM)="@" Q NS
	if DINAM["[" set fid = DINAM.piece("]",1).extract(2,999)
	set col = DINAM.piece("]",2)
	if 'fsn(fid).exists() do fsn^SQLDD(.fsn,fid)
	set sn = fsn(fid).piece("|",1)
	if sn.extract(sn.length()) = "(" set sn = sn.extract(1,sn.length()-1)
	quit sn_"."_col


	// Add default file id
DEFAULT(String DINAM, String DFID)

	type Public Number ER
	type Public String FILES
	type String DLIB, Q ,vDINAM, X
	type Number quit,vTBLNO

	set vDINAM=DINAM
	set vTBLNO=1


	//DEFAULT1	//
	set ER=0
	set quit=0
	for vTBLNO=1:1:FILES.length(",") do { quit:quit
		set DFID=FILES.piece(",",vTBLNO)		
		if DFID'="" do {
			set DLIB = %Library 
			set X = vDINAM
			do ^DBSDI
			if ER set ER=0
			else  set quit = 1
			}  // if
		else  set ER = 1,DFID=FILES.piece(",",1)
	}  // for
	quit


ERR
	type Public String DINAM, X, XR1
	type Public Number ER
	
	write !!,DINAM,?5," - Invalid Data Item Set Definition  ( "_XR1_" )",!!
	set ER=1
	quit


DONE	
	type Public String Q, TMP(), XR8
	
	set XR8=XR8+1

	// TITOVE - removed setting of ER, it is done in VR99 anyway
	set TMP(1000,XR8)=" do VR99 quit"
	set XR8=XR8+1 
	set TMP(1000,XR8)="" 
	set XR8=XR8+1
	
	// TITOVE - moved setting of RM one line lower
	set TMP(1000,XR8+1)="VR99	"
	set TMP(1000,XR8+2)=" set RM="_Q_$$^MSG(1768)_Q
	set TMP(1000,XR8+3)=" set ER=1 quit"
	quit


VAR	//
	type Public String %NAMCUR(),DINAM,NS,SID
	type String pos, x, Z
	
	set NS=""
	if 'SID.exists() quit
	set x=0 
	type ResultSet rs=Db.select("NAME,PROMPT,POS","DBTBL2D","LIBS=:%Library and SID=:SID and SEQ>0 and NAME=:DINAM")
	quit:'rs.next()
	set Z=rs.getCol("PROMPT")
	set pos = rs.getCol("POS")
	set NS=$E($P(Z,",",1),3,99)
	if NS[">>" set NS=$P(NS,">>",1)
	// repeat region
	if %NAMCUR(DINAM)["+" set NS=NS_"(1)"
	if 'pos.isNull() set NS="$P("_NS_","_$C(34,124,34)_","_pos_")"
	quit
 #OPTION ResultClass ON
public String vSIG()	quit "60662^55395^Pete Chenard^7231"	// Signature - LTD^TIME^USER^SIZE
