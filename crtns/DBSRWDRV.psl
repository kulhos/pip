DBSRWDRV
	/*
	ORIG:
	PROCEDURE ID: DBSRWDRV
	DESC: DATA-QWIK Report Writer Driver
	
	---- Comments --------------------------------------------------------

	Library:
		. BUILD		Build run-time report
		. COPY		Copy report
		. CREATE	Create new report
		. DELETE	Delete report
		. EXEC		Run report
		. EXT		Compile a list of reports
		. LIST		List report(s)
		. MODIFY	Modify existing report
		. PRINT		Print report definition

	Notes on structure:
		^DBTBL(%LIBS,5,RID,1-10) = SEQUENCE BY
				  11-30) = STATISTICS
				  31-50) = QUERY DEFINITIONS
				  51-70) = REPORT PRE-PROCESSOR (AFTER QRY)
				  71-90) = REPORT POST-PROCESSOR
				 91-110) = REPORT DOCUMENTATION
				111-130) = REPORT PRE-PROCESSOR (BEFORE QRY)
					   -- Following are for new compiler only
				201-220) = OPEN pre-processor
				221-240) = OPEN post-processor
				241-260) = FETCH pre-processor
				261-280) = FETCH post-processor
				281-300) = PRINT pre-processor

		^DBTBL(%LIBS,5,RID,GRP,0)= REGION (H,D,T)
				      25)= REPEAT INFORMATION
				      26)= SUPPRESS BLANK LINE (FROM-TO)
				      27)= SUPPRESS LINE FEEDS (FROM-TO)
				      28)= USER DEFINED RTN INDICATOR
				   31-50)= USER DEFINED COLLATING
				   51-70)= USER DEFINED ACCESS
				   71-90)= USER DEFINED POST PROCESSOR
				   101- )= ITEM INFO
				         ,1-20)= ITEM PRE-PROCESSOR
					,21-40)= ITEM POST-PROCESSOR

	------ Revision History ------------------------------------------------
	
	10/23/06 - RussellDS - CR22719
		   Add BUILDALL section.
	
	05/09/06 - RussellDS - CR20967
		   Eliminate call to DBSEXEK3 and call DBSWRITE directly.
	
	12/19/05 - RussellDS - CR18400
		   Modify BUILD and EXT section, and add BUILDEM to provide
		   way to call with list of reports already built..
		   
		   Modify EXT call to BUILD1.
		   
		   Removed old revision history.
	
	11/14/05 - RussellDS - CR18193
		   Add VERSION section to eliminate $$CUVAR call.
	
	05/30/05 - RussellDS - CR16137
		   Modified SETHDR section to ignore literal keys.
	
	05/05/05 - RussellDS - CR15379
		   Remove write of message in COMPILE section since call to
		   PSL compiler will now do it.
		   
		   Added public tag to EXT and BUILD.
		   
		   Modified COMPILE to display error message if gets an error.
	
	03/26/05 - RussellDS - CR15067
		   Fixed SETHDR section to set DESC for report.  Prevents problem
		   in creating new report.
		   
		   Fixed minor PSL warning issues.

	------------------------------------------------------------------------

	 I18N=QUIT Excluded from I18N standards
	*/

	quit
	

public BUILD		// Prompt for reports to build, then build them
	
	quit:'$$LIST^DBSGETID("DBTBL5H")	// Prompt
	
	do BUILDEM				// Build
	
	quit
	
	
public BUILDALL		// Build all reports

	do Db.delete("TMPDQ","PID=:%ProcessID")
	
	type ResultSet rs = Db.select("RID", "DBTBL5H", "LIBS='SYSDEV'")
	
	while rs.next() do {
	
		type RecordTMPDQ tmpdq = Class.new("RecordTMPDQ", "PID=:%ProcessID,ELEMENT=:rs.getCol(""RID"")")
		
		do tmpdq.save()
	}

	do BUILDEM
	
	quit
		
	
BUILDEM	// Generate run-time code for report(s)

	type Number STOP
	type String PID,RID

	set STOP=0
	set PID=%ProcessID

	type ResultSet tmpdqrs=Db.select("ELEMENT","TMPDQ","PID=:PID")

        while tmpdqrs.next() do { quit:STOP
		// If error, keep going, unless interrupt
		catch error {
			type String ET
			do ET^%ZT(.ET)
			if ET="INTERRUPT" set STOP=1
			else  use 0 write !!,RID.get(),?15,error.thrownAt,",",error.type,",",error.description,!
			}
		set RID=tmpdqrs.getCol("ELEMENT")
		do COMPILE(RID)
		}

	do Db.delete("TMPDQ","PID=:%ProcessID")

	quit
	

COPY	// Copy existing report definition

	type String DQSCR

	set DQSCR=$$DQSCR
	if DQSCR'="" do COPY^DBSUTL("DBTBL5H")
	
	quit

CREATE	/* Create new report definition

	RETURNS:
		. ER		Error flag	/TYP=L
		. RM		Error message	/TYP=T
	*/

	type Public String ER, RID, RM, STATUS
	type Number %ProcessMode
	
	set RID = $$FIND^DBSGETID("DBTBL5H", 1) quit:RID.isNull()

	if Db.isDefined("DBTBL5H","LIBS=""SYSDEV"",RID=:RID") quit

	set STATUS=$$SETHDR		// try to set up header
	if 'STATUS do { quit
		set ER=1
		set RM=STATUS.piece("|",2)
		}

	set %ProcessMode=0
	do ^FORMDQ5(RID)
	
	quit

DELETE	// Delete report definition

	type String DQSCR

	set DQSCR=$$DQSCR
	if DQSCR'="" do DEL^DBSUTL("DBTBL5H")
	
	quit

EXEC	/* Run report

	RETURNS:
		. ER	Error flag		/TYP=T
		. RM	Error message		/TYP=T
	*/

	type Public Number ER
	type Public String RM
	
	type String RID, PGM
	
	set RID = $$FIND^DBSGETID("DBTBL5H", 0) quit:RID.isNull()

	type RecordDBTBL5H dbtbl5h=Db.getRecord("DBTBL5H","LIBS=""SYSDEV"",RID=:RID")
	set PGM=dbtbl5h.pgm

	// Check to see if needs to be compiled first
	if PGM'="",$$VALID^%ZRTNS(PGM)
	// Compile report first
	else  set ER=1,RM=$$^MSG(7960) quit

	write $$CLEAR^%TRMVT
	do ^@PGM
	quit


public EXT	/* External entry point for report compiler

	INPUT:
		. Table TMPDQ
	*/

	do BUILDEM
	
	quit


LIST	// List report definition

	type Public Number ER=0
	type Public String RM

	type Number CNT, VRWOPT()
	type String IO, RID, PGM, vudwhere
	
	quit:'$$LIST^DBSGETID("DBTBL5H", "List", .IO)

	set RID="DBSRPTLST"
	do ^URID quit:PGM.get()=""

	set vudwhere="LIBS='SYSDEV' AND RID=:ZRID AND SEQ>0"

	do OPEN^SCAIO quit:ER

	type ResultSet tmpdqrs=Db.select("ELEMENT","TMPDQ","PID=:%ProcessID")

	set CNT=0
        while tmpdqrs.next() do { quit:ER
		type String ZRID

		// If interactive, prompt to continue
		if CNT,IO=$P do { quit:ER
			type String MSG

			set MSG=""
			if $$^DBSMBAR(161)'=1 set ER=1,RM=""
			}

		set ZRID=tmpdqrs.getCol("ELEMENT")
		set VRWOPT("NOOPEN")=1
		set VRWOPT("NOCLOSE")=1
		do @("V0^"_PGM)
		set CNT=CNT+1
		}

	do CLOSE^SCAIO
	
	do Db.delete("TMPDQ","PID=:%ProcessID")

	quit

MODIFY	// Modify report definition

	type String RID

	set RID = $$FIND^DBSGETID("DBTBL5H", 0) quit:RID.isNull()

	do ^FORMDQ5(RID)
	
	quit

PRINT	// Pring report definition(s)

	do PNT^DBSEXE5
	
	quit

DQSCR()	// Return program for DQ report control page

	type String SID="DBTBL5H"
	type String PGM

	do ^USID if PGM="" quit ""
	
	quit "^"_PGM
	

public COMPILE(String RID)

	/*
	Compile report

	ARGUMENTS:
		. RID		Report ID	/REQ/NONULL/MECH=VAL
	*/

	type Number ER=0
	type String RM

	do ^DBSRW(RID)
	
	if ER, 'RM.get().isNull() write !!, RM, !
	
	quit

SETHDR()	/* Private - Define header

	RETURNS:
		. $$	Status			/TYP=T
			1 = success
			0|reason = failure
	*/

	type Public String RID
	type String %A,%A(),DQSCR,FID,PGM,%ProcessMode
	type String LIBS,RM,SID,SORT,VFMQ,X,Z
	type Number ER,I

	set ER=0
	set (%A,%A(0))=""
	for I=1:1:10 set %A(I)="|1|1|*|A"

	set DQSCR=$$DQSCR quit:DQSCR=""
	set LIBS="SYSDEV"
	set %ProcessMode=0
        do @DQSCR				// Main page
        if VFMQ="Q" quit 0

	set SID="DBTBL5H1"			// Sequence by page
	do ^USID if PGM="" quit 0
	do ^@PGM
	if VFMQ="Q" quit 0

	set %A(0).piece("|",15)=%UserID

	for I=1:1:10 do {
		type String X
		set X=%A(I).piece("|",1)
		if X'="" set SORT(X)=""
		}

	set FID=%A(0).piece("|",1).piece(",",1)
	// Invalid file name - ~p1
	if 'Db.isDefined("DBTBL1","%LIBS=""SYSDEV"",FID=:FID") quit 0_"|"_$$^MSG(1337,FID)

	type RecordDBTBL1 dbtbl1=Db.getRecord("DBTBL1","%LIBS=""SYSDEV"",FID=:FID")

	set Z=dbtbl1.acckeys
	for I=1:1:Z.length(",") do {
		type String KEY
		quit:Z.piece(",",I).isLiteral()
		set KEY="[SYSDEV,"_FID_"]"_Z.piece(",",I)
		if '$D(SORT(KEY)) do {
			// Missing Key(s)
			if 'ER set ER=1,RM=$$^MSG(7962)
			set RM=RM_" "_KEY
			}
		}
	if ER quit 0_"|"_RM

	type RecordDBTBL5H dbtbl5h=Class.new("RecordDBTBL5H")
	do dbtbl5h.setAuditFlag(1)

	set dbtbl5h.desc = %A
	set dbtbl5h.libs="SYSDEV"
	set dbtbl5h.rid=RID
	set dbtbl5h.pfid=FID
	set dbtbl5h.date=%CurrentDate
	set dbtbl5h.rsize=%A(0).piece("|",5)
	set dbtbl5h.psize=%A(0).piece("|",6)
	set dbtbl5h.resflg=%A(0).piece("|",7)
	set dbtbl5h.fixlen=%A(0).piece("|",8)
	set dbtbl5h.norb=%A(0).piece("|",9)
	set dbtbl5h.ver=%A(0).piece("|",10)
	set dbtbl5h.inlist=%A(0).piece("|",11)
	set dbtbl5h.outlist=%A(0).piece("|",12)
	set dbtbl5h.msql=%A(0).piece("|",13)
	set dbtbl5h.uid=%UserID
	set dbtbl5h.banner=%A(0).piece("|",16)
	set dbtbl5h.align=%A(0).piece("|",17)
	set dbtbl5h.newcomp=%A(0).piece("|",18)
	set dbtbl5h.variable=%A(0).piece("|",19)
	set dbtbl5h.distkey=%A(0).piece("|",20)
	set dbtbl5h.varreport=%A(0).piece("|",21)
	set dbtbl5h.index=%A(0).piece("|",22)
	set dbtbl5h.seq=%A(1).piece("|",1)
	set dbtbl5h.pgbk=%A(1).piece("|",2)
	set dbtbl5h.phdr=%A(1).piece("|",3)
	set dbtbl5h.prng=%A(1).piece("|",4)
	set dbtbl5h.sortord=%A(1).piece("|",5)
	set dbtbl5h.seq2=%A(2).piece("|",1)
	set dbtbl5h.pgbk2=%A(2).piece("|",2)
	set dbtbl5h.phdr2=%A(2).piece("|",3)
	set dbtbl5h.prng2=%A(2).piece("|",4)
	set dbtbl5h.sortord2=%A(2).piece("|",5)
	set dbtbl5h.seq3=%A(3).piece("|",1)
	set dbtbl5h.pgbk3=%A(3).piece("|",2)
	set dbtbl5h.phdr3=%A(3).piece("|",3)
	set dbtbl5h.prng3=%A(3).piece("|",4)
	set dbtbl5h.sortord3=%A(3).piece("|",5)
	set dbtbl5h.seq4=%A(4).piece("|",1)
	set dbtbl5h.pgbk4=%A(4).piece("|",2)
	set dbtbl5h.phdr4=%A(4).piece("|",3)
	set dbtbl5h.prng4=%A(4).piece("|",4)
	set dbtbl5h.sortord4=%A(4).piece("|",5)
	set dbtbl5h.seq5=%A(5).piece("|",1)
	set dbtbl5h.pgbk5=%A(5).piece("|",2)
	set dbtbl5h.phdr5=%A(5).piece("|",3)
	set dbtbl5h.prng5=%A(5).piece("|",4)
	set dbtbl5h.sortord5=%A(5).piece("|",5)
	set dbtbl5h.seq6=%A(6).piece("|",1)
	set dbtbl5h.pgbk6=%A(6).piece("|",2)
	set dbtbl5h.phdr6=%A(6).piece("|",3)
	set dbtbl5h.prng6=%A(6).piece("|",4)
	set dbtbl5h.sortord6=%A(6).piece("|",5)
	set dbtbl5h.seq7=%A(7).piece("|",1)
	set dbtbl5h.pgbk7=%A(7).piece("|",2)
	set dbtbl5h.phdr7=%A(7).piece("|",3)
	set dbtbl5h.prng7=%A(7).piece("|",4)
	set dbtbl5h.sortord7=%A(7).piece("|",5)
	set dbtbl5h.seq8=%A(8).piece("|",1)
	set dbtbl5h.pgbk8=%A(8).piece("|",2)
	set dbtbl5h.phdr8=%A(8).piece("|",3)
	set dbtbl5h.prng8=%A(8).piece("|",4)
	set dbtbl5h.sortord8=%A(8).piece("|",5)
	set dbtbl5h.seq9=%A(9).piece("|",1)
	set dbtbl5h.pgbk9=%A(9).piece("|",2)
	set dbtbl5h.phdr9=%A(9).piece("|",3)
	set dbtbl5h.prng9=%A(9).piece("|",4)
	set dbtbl5h.sortord9=%A(9).piece("|",5)
	set dbtbl5h.seq10=%A(10).piece("|",1)
	set dbtbl5h.pgbk10=%A(10).piece("|",2)
	set dbtbl5h.phdr10=%A(10).piece("|",3)
	set dbtbl5h.prng10=%A(10).piece("|",4)
	set dbtbl5h.sortord10=%A(10).piece("|",5)

	do dbtbl5h.save()
	quit 1


STAT	// Called by ^FORMDQ5C for Statistics page

	type Public String %A(),RID
	type String PGM,SID,VFMQ

	set SID="DBTBL5SQ"
	do ^USID if PGM="" quit
	do ^@PGM quit:VFMQ="Q"

	type RecordDBTBL5H dbtbl5h=Db.getRecord("DBTBL5H","LIBS=""SYSDEV"",RID=:RID")

	set dbtbl5h.statsrc1=%A(11).piece("|",1)
	set dbtbl5h.stattrgt1=%A(11).piece("|",4)
	set dbtbl5h.statinc1=%A(11).piece("|",5)
	set dbtbl5h.statsrc2=%A(12).piece("|",1)
	set dbtbl5h.stattrgt2=%A(12).piece("|",4)
	set dbtbl5h.statinc2=%A(12).piece("|",5)
	set dbtbl5h.statsrc3=%A(13).piece("|",1)
	set dbtbl5h.stattrgt3=%A(13).piece("|",4)
	set dbtbl5h.statinc3=%A(13).piece("|",5)
	set dbtbl5h.statsrc4=%A(14).piece("|",1)
	set dbtbl5h.stattrgt4=%A(14).piece("|",4)
	set dbtbl5h.statinc4=%A(14).piece("|",5)
	set dbtbl5h.statsrc5=%A(15).piece("|",1)
	set dbtbl5h.stattrgt5=%A(15).piece("|",4)
	set dbtbl5h.statinc5=%A(15).piece("|",5)
	set dbtbl5h.statsrc6=%A(16).piece("|",1)
	set dbtbl5h.stattrgt6=%A(16).piece("|",4)
	set dbtbl5h.statinc6=%A(16).piece("|",5)
	set dbtbl5h.statsrc7=%A(17).piece("|",1)
	set dbtbl5h.stattrgt7=%A(17).piece("|",4)
	set dbtbl5h.statinc7=%A(17).piece("|",5)
	set dbtbl5h.statsrc8=%A(18).piece("|",1)
	set dbtbl5h.stattrgt8=%A(18).piece("|",4)
	set dbtbl5h.statinc8=%A(18).piece("|",5)
	set dbtbl5h.statsrc9=%A(19).piece("|",1)
	set dbtbl5h.stattrgt9=%A(19).piece("|",4)
	set dbtbl5h.statinc9=%A(19).piece("|",5)
	set dbtbl5h.statsrc10=%A(20).piece("|",1)
	set dbtbl5h.stattrgt10=%A(20).piece("|",4)
	set dbtbl5h.statinc10=%A(20).piece("|",5)
	set dbtbl5h.statsrc11=%A(21).piece("|",1)
	set dbtbl5h.stattrgt11=%A(21).piece("|",4)
	set dbtbl5h.statinc11=%A(21).piece("|",5)
	set dbtbl5h.statsrc12=%A(22).piece("|",1)
	set dbtbl5h.stattrgt12=%A(22).piece("|",4)
	set dbtbl5h.statinc12=%A(22).piece("|",5)
	set dbtbl5h.statsrc13=%A(23).piece("|",1)
	set dbtbl5h.stattrgt13=%A(23).piece("|",4)
	set dbtbl5h.statinc13=%A(23).piece("|",5)
	set dbtbl5h.statsrc14=%A(24).piece("|",1)
	set dbtbl5h.stattrgt14=%A(24).piece("|",4)
	set dbtbl5h.statinc14=%A(24).piece("|",5)
	set dbtbl5h.statsrc15=%A(25).piece("|",1)
	set dbtbl5h.stattrgt15=%A(25).piece("|",4)
	set dbtbl5h.statinc15=%A(25).piece("|",5)
	set dbtbl5h.statsrc16=%A(26).piece("|",1)
	set dbtbl5h.stattrgt16=%A(26).piece("|",4)
	set dbtbl5h.statinc16=%A(26).piece("|",5)
	set dbtbl5h.statsrc17=%A(27).piece("|",1)
	set dbtbl5h.stattrgt17=%A(27).piece("|",4)
	set dbtbl5h.statinc17=%A(27).piece("|",5)
	set dbtbl5h.statsrc18=%A(28).piece("|",1)
	set dbtbl5h.stattrgt18=%A(28).piece("|",4)
	set dbtbl5h.statinc18=%A(28).piece("|",5)
	set dbtbl5h.statsrc19=%A(29).piece("|",1)
	set dbtbl5h.stattrgt19=%A(29).piece("|",4)
	set dbtbl5h.statinc19=%A(29).piece("|",5)
	set dbtbl5h.statsrc20=%A(30).piece("|",1)
	set dbtbl5h.stattrgt20=%A(30).piece("|",4)
	set dbtbl5h.statinc20=%A(30).piece("|",5)

	do dbtbl5h.save()
	quit

QUERY	/* Called by ^FORMDQ5C for Query page

	Query range is 31-50
	*/

	type public String RID
	
	type Number WIDTH
	type String DATA(), I, MESSAGE

	// ~p1 - QUERY DEFINITIONS
	set MESSAGE=$$^MSG(7965,RID)

	do LOADDATA(RID, .DATA(), 31, .WIDTH)
	
	do ^DBSWRITE("DATA", 3, 22, 99999, WIDTH, MESSAGE)

	if (DATA.data() > 0) do SAVEDATA(RID, .DATA(), 31)

	quit


KEYS	/* Called from FORMDQ5C for user defined routines

	Display user-defined options - four user-defined
	sections, plus five new user-defined sections.
	*/

	for  quit:'$$GROUP
	
	quit


GROUP()	/* Private - Choose group and update it

	RETURNS:
		. $$	0 when done, else 1	/TYP=L
	*/

	type Public String RID
	type Number GRPDSC, GRPNO, GRPSEQ, I, SEL(), START, WIDTH
	type String DATA(), GROUP(), GRP, MESSAGE, SEQBY(), X


	// MODIFY USER DEFINED INFORMATION
	write $$CLEAR^%TRMVT,!!,$$^MSG(7963),!

	type RecordDBTBL5H dbtbl5h=Db.getRecord("DBTBL5H","LIBS=""SYSDEV"",RID=:RID")

	// If old compiler, set up sort-by groups first
	set SEQBY(1)=dbtbl5h.seq
	set SEQBY(2)=dbtbl5h.seq2
	set SEQBY(3)=dbtbl5h.seq3
	set SEQBY(4)=dbtbl5h.seq4
	set SEQBY(5)=dbtbl5h.seq5
	set SEQBY(6)=dbtbl5h.seq6
	set SEQBY(7)=dbtbl5h.seq7
	set SEQBY(8)=dbtbl5h.seq8
	set SEQBY(9)=dbtbl5h.seq9
	set SEQBY(10)=dbtbl5h.seq10

	set GRPSEQ=1

	set GROUP(GRPSEQ)="@PRERP|Report Pre-Processor (before QUERY)|"_(Db.isDefined("DBTBL5PR","LIBS=""SYSDEV"",RID=:RID,SEQ='111'")),GRPSEQ=GRPSEQ+1
	set GROUP(GRPSEQ)="@PRE|Report Pre-Processor (after QUERY)|"_(Db.isDefined("DBTBL5PR","LIBS=""SYSDEV"",RID=:RID,SEQ='51'")),GRPSEQ=GRPSEQ+1
	set GROUP(GRPSEQ)="@POST|Report Post-Processor|"_(Db.isDefined("DBTBL5PR","LIBS=""SYSDEV"",RID=:RID,SEQ='71'")),GRPSEQ=GRPSEQ+1
	set GROUP(GRPSEQ)="@DOC|Report Documentation|"_(Db.isDefined("DBTBL5PR","LIBS=""SYSDEV"",RID=:RID,SEQ='91'")),GRPSEQ=GRPSEQ+1

	set GROUP(GRPSEQ)="@VOPENPR|OPEN Pre-Processor|"_(Db.isDefined("DBTBL5PR","LIBS=""SYSDEV"",RID=:RID,SEQ='201'")),GRPSEQ=GRPSEQ+1
	set GROUP(GRPSEQ)="@VOPENPP|OPEN Post-Processor|"_(Db.isDefined("DBTBL5PR","LIBS=""SYSDEV"",RID=:RID,SEQ='221'")),GRPSEQ=GRPSEQ+1
	set GROUP(GRPSEQ)="@VFETCHPR|FETCH Pre-Processor|"_(Db.isDefined("DBTBL5PR","LIBS=""SYSDEV"",RID=:RID,SEQ='241'")),GRPSEQ=GRPSEQ+1
	set GROUP(GRPSEQ)="@VFETCHPP|FETCH Post-Processor|"_(Db.isDefined("DBTBL5PR","LIBS=""SYSDEV"",RID=:RID,SEQ='261'")),GRPSEQ=GRPSEQ+1
	set GROUP(GRPSEQ)="@PRINT|PRINT Pre-Processor|"_(Db.isDefined("DBTBL5PR","LIBS=""SYSDEV"",RID=:RID,SEQ='281'")),GRPSEQ=GRPSEQ+1

	// Display group selection
	do {
		write $$CUP^%TRMVT(0,5),$$CLP^%TRMVT,$$LINE^%TRMVT(80)
		set GRP=""
		for  set GRP=$O(GROUP(GRP)) quit:GRP=""  do {
			write $$VIDOFF^%TRMVT
			write !,GRP,")",?6
			if GROUP(GRP).piece("|",3) write $$VIDREV^%TRMVT
			write " ",GROUP(GRP).piece("|",2)," "
		}
		
		write $$VIDOFF^%TRMVT
	}

	// Select group
	for I=1:1:GRPSEQ-1 set SEL(I)=I

	set GRPNO=$$^DBSMBAR(18,"","","",.SEL)
	if GRPNO="" quit 0

	set GRP=GROUP(GRPNO).piece("|",1),GRPDSC=GROUP(GRPNO).piece("|",2)

	// Edit group and save changes
	if GRP="@PRERP" S START=111
	else  if GRP="@PRE" S START=51
	else  if GRP="@POST" S START=71
	else  if GRP="@DOC" S START=91
	else  if GRP="@VOPENPR" S START=201
	else  if GRP="@VOPENPP" S START=221
	else  if GRP="@VFETCHPR" S START=241
	else  if GRP="@VFETCHPP" S START=261
	else  if GRP="@PRINT" S START=281

	set MESSAGE=RID_" - "_GRPDSC

	do LOADDATA(RID, .DATA(), START, .WIDTH)
	
	do ^DBSWRITE("DATA", 3, 22, 99999, WIDTH, MESSAGE)
	
	if (DATA.data() > 0) do SAVEDATA(RID, .DATA(), START)

	quit 1


LOADDATA(String RID,		// Report ID
	 String ARRAY(),	// Load to array	/MECH=REFARR:W
	 Number START,		// Starting SEQ
	 Number WIDTH)		// Width (80 or 132)	/MECH=REFNAM:W
	 
	 /*
	 Load data from DBTBL5PR section
	 */

	type Number CNT,END

	set WIDTH = 80

	set END=START+20,START=START-.001
	set CNT=1

	type ResultSet rs=Db.select("DATA","DBTBL5PR","LIBS='SYSDEV' AND RID=:RID AND SEQ>:START AND SEQ<:END","SEQ ASC")
 
        while rs.next() do {
		set ARRAY(CNT)=rs.getCol("DATA")
		if ARRAY(CNT).length() > 78 set WIDTH = 132
		set CNT=CNT+1
	}

	quit

SAVEDATA(String RID,String ARRAY(),Number START)	/* Private - Save data to DBTBL5PR section

	ARGUMENTS:
		. RID		Report ID	/REQ/MECH=VAL

		. ARRAY		Save from array	/REQ/MECH=REFARR:W

		. START		Starting SEQ	/REQ/MECH=VAL
	*/

	type Number END,N,OK,SEQ

	set END=START+20,START=START-.001

	// Delete old data first
	do Db.delete("DBTBL5PR","RID=:RID AND SEQ>:START AND SEQ<:END")

	/* Add new records.  Old code would use whole numbers if there were 20
	   or less, and increment by .001 if there were more than 20.  Why 
	   bother?  Just increment by .001 in all cases.
	
	   Ignore all beginning null records.  This also deals with the fact
	   that a return of no info from the editor still provides ARRAY(1)=""
	*/

	set OK=0				// Signal once get non-nulls
	set SEQ=START
	set N=""
	for  set N=$O(ARRAY(N)) quit:N=""  do {

		if OK!(ARRAY(N)'="") do {
			type RecordDBTBL5PR dbtbl5pr=Class.new("RecordDBTBL5PR")
			set SEQ=SEQ+.001
			set dbtbl5pr.libs="SYSDEV"
			set dbtbl5pr.rid=RID
			set dbtbl5pr.seq=SEQ
			set dbtbl5pr.data=ARRAY(N)
			do dbtbl5pr.bypassSave()
			set OK=1
			}
		}

	quit
	
	
private VERSION()

	/*
	Return version number default value for DBTBL5H.VER
	*/
	
	quit CUVAR.%VN
 #OPTION ResultClass ON
public String vSIG()	quit "60571^42180^Dan Russell^17711"	// Signature - LTD^TIME^USER^SIZE
