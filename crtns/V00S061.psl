V00S061(Number %ProcessMode,RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1)   //DBS - DBS - SID= <DBTBL1K> Foreign Key Definition
 ;;Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:33 - pip
 // The DBTBL1K screen enables the institution to establish referential
 // relationships between data item values in multiple files.  For example, the
 // institution may indicate that a user cannot delete a data item value if another
 // file depends on the existence of that value.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fDBTBL1F.exists() set fDBTBL1F = Class.new("RecordDBTBL1F")
  if 'fDBTBL1.exists() set fDBTBL1 = Class.new("RecordDBTBL1")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,FKEYS,DELETE",VSID="DBTBL1K",VPGM=$T(+0),VSNAME="Foreign Key Definition"
 set VFSN("DBTBL1")="zfDBTBL1",VFSN("DBTBL1F")="zfDBTBL1F"
 set vPSL=1
 set KEYS(1)=fDBTBL1.%LIBS
 set KEYS(2)=fDBTBL1.FID
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fDBTBL1F,.fDBTBL1),VDA1(.fDBTBL1F,.fDBTBL1),^DBSPNT() quit

 set ER=0 do VSCRPRE(.fDBTBL1F,.fDBTBL1) if ER quit  // Screen Pre-Processor
 
 if '%ProcessMode do VNEW(.fDBTBL1F,.fDBTBL1),VPR(.fDBTBL1F,.fDBTBL1),VDA1(.fDBTBL1F,.fDBTBL1)
 if %ProcessMode do VLOD(.fDBTBL1F,.fDBTBL1) quit:$G(ER)  do VPR(.fDBTBL1F,.fDBTBL1),VDA1(.fDBTBL1F,.fDBTBL1)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fDBTBL1F,.fDBTBL1)
	quit


VNEW(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1) // Initialize arrays if %O=0
 
 do VDEF(.fDBTBL1F,.fDBTBL1)
 do VLOD(.fDBTBL1F,.fDBTBL1)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1)
 quit:fDBTBL1F.%LIBS.isNull() ! fDBTBL1F.FID.isNull() ! fDBTBL1F.FKEYS.isNull() 
 quit:%ProcessMode  set ER=0 if (fDBTBL1F.%LIBS="")!(fDBTBL1F.FID="")!(fDBTBL1F.FKEYS="") set ER=1,RM=$$^MSG(1767,"%LIBS,FID,FKEYS") Q
 if Db.isDefined("DBTBL1F","DBTBL1F.%LIBS=:fDBTBL1F.%LIBS AND DBTBL1F.FID=:fDBTBL1F.FID AND DBTBL1F.FKEYS=:fDBTBL1F.FKEYS") S ER=1,RM=$$^MSG(2327) Q
 do fDBTBL1F.setAuditFlag(1)
 if fDBTBL1F.DEL="" set fDBTBL1F.DEL=0
 if fDBTBL1F.RCFRMIN="" set fDBTBL1F.RCFRMIN=0
 if fDBTBL1F.RCTOMAX="" set fDBTBL1F.RCTOMAX=1
 if fDBTBL1F.RCTOMIN="" set fDBTBL1F.RCTOMIN=1
 if fDBTBL1F.UPD="" set fDBTBL1F.UPD=0
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1) // Display screen prompts
 set VO="24||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,1,81,1,0,0,0,0,0,0)_"01T                           Foreign Key Definition                                "
 set VO(2)=$C(3,11,9,0,0,0,0,0,0,0)_"01TFilename:"
 set VO(3)=$C(4,3,16,1,0,0,0,0,0,0)_"01T Foreign Key(s):"
 set VO(4)=$C(6,13,7,0,0,0,0,0,0,0)_"01TDelete:"
 set VO(5)=$C(8,2,18,1,0,0,0,0,0,0)_"01T Related Filename:"
 set VO(6)=$C(9,7,12,0,0,0,0,0,0,0)_"01TAccess Keys:"
 set VO(7)=$C(12,1,80,0,0,0,0,0,0,0)_"11Tlqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk"
 set VO(8)=$C(13,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(9)=$C(13,3,14,0,0,0,0,0,0,0)_"01TEach record in"
 set VO(10)=$C(13,31,9,0,0,0,0,0,0,0)_"01Trefers to"
 set VO(11)=$C(13,41,3,1,0,0,0,0,0,0)_"01Tmin"
 set VO(12)=$C(13,48,1,0,0,0,0,0,0,0)_"01T&"
 set VO(13)=$C(13,50,3,1,0,0,0,0,0,0)_"01Tmax"
 set VO(14)=$C(13,57,10,0,0,0,0,0,0,0)_"01Trecords in"
 set VO(15)=$C(13,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(16)=$C(14,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(17)=$C(14,3,15,0,0,0,0,0,0,0)_"01TEach record in "
 set VO(18)=$C(14,31,13,0,0,0,0,0,0,0)_"01Trefers to min"
 set VO(19)=$C(14,48,5,0,0,0,0,0,0,0)_"01T& max"
 set VO(20)=$C(14,57,10,0,0,0,0,0,0,0)_"01Trecords in"
 set VO(21)=$C(14,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(22)=$C(15,1,80,0,0,0,0,0,0,0)_"11Tmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj"
 set VO(23)=$C(17,2,19,1,0,0,0,0,0,0)_"01T Update Constraint:"
 set VO(24)=$C(17,48,20,1,0,0,0,0,0,0)_"01T  Delete Constraint:"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1)  // Display screen data
 new V
 if %ProcessMode=5 new DELETE,DES,DESR1,DESR2,FID,FKEYS,PKEYS
 if  set (DELETE,DES,DESR1,DESR2,FID,FKEYS,PKEYS)=""
 else  set DELETE=$G(DELETE),DES=$G(DES),DESR1=$G(DESR1),DESR2=$G(DESR2),FID=$G(FID),FKEYS=$G(FKEYS),PKEYS=$G(PKEYS)
 
 s DELETE=$G(DELETE)
 s DES=$G(DES)
 s DESR1=$G(DESR1)
 s DESR2=$G(DESR2)
 s FID=$G(FID)
 s FKEYS=$G(FKEYS)
 s PKEYS=$G(PKEYS)
 //
 set VO="41|25|13|0"
 set VO(25)=$C(3,21,12,2,0,0,0,0,0,0)_"01T"_$E(fDBTBL1.FID,1,12)
 set VO(26)=$C(3,35,40,2,0,0,0,0,0,0)_"01T"_$E(fDBTBL1.DES,1,40)
 set VO(27)=$C(4,20,60,2,0,0,0,0,0,0)_"00U"_FKEYS.get()
 set VO(28)=$C(6,21,1,2,0,0,0,0,0,0)_"00L"_$S(DELETE.get():"Y",1:"N")
 set VO(29)=$C(8,21,12,2,0,0,0,0,0,0)_"00U"_$E(fDBTBL1F.TBLREF,1,12)
 set VO(30)=$C(8,35,40,2,0,0,0,0,0,0)_"01T"_DES.get()
 set VO(31)=$C(9,20,60,2,0,0,0,0,0,0)_"01T"_PKEYS.get()
 set VO(32)=$C(13,18,12,2,0,0,0,0,0,0)_"01T"_FID.get()
 set VO(33)=$C(13,45,2,2,0,0,0,0,0,0)_"00N"_fDBTBL1F.RCTOMIN
 set VO(34)=$C(13,54,2,2,0,0,0,0,0,0)_"00N"_fDBTBL1F.RCTOMAX
 set VO(35)=$C(13,68,12,2,0,0,0,0,0,0)_"01T"_DESR1.get()
 set VO(36)=$C(14,18,12,2,0,0,0,0,0,0)_"01T"_DESR2.get()
 set VO(37)=$C(14,45,2,2,0,0,0,0,0,0)_"00N"_fDBTBL1F.RCFRMIN
 set VO(38)=$C(14,54,2,2,0,0,0,0,0,0)_"00N"_fDBTBL1F.RCFRMAX
 set VO(39)=$C(14,68,12,2,0,0,0,0,0,0)_"01T"_FID.get()
 set VO(40)=$C(17,22,1,2,0,0,0,0,0,0)_"00N"_fDBTBL1F.UPD
 set VO(41)=$C(17,69,1,2,0,0,0,0,0,0)_"00N"_fDBTBL1F.DEL
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=17,VPT=1,VPB=17,PGM=$T(+0),DLIB="SYSDEV",DFID="DBTBL1F,DBTBL1",VSCRPP=1,VSCRPP=1
 set OLNTB=17069
 
 set VFSN("DBTBL1")="zfDBTBL1",VFSN("DBTBL1F")="zfDBTBL1F"
 //
 // 
	
	
 set %TAB(1)=$C(2,20,12)_"20U12402|1|[DBTBL1]FID|[DBTBL1]|if X?1A.AN!(X?1""%"".AN)!(X?.A.""_"".E)|||||||25"
 set %TAB(2)=$C(2,34,40)_"20T12401|1|[DBTBL1]DES"
 set %TAB(3)=$C(3,19,60)_"01U|*FKEYS|[*]@OOE8|[DBTBL1F]:NOVAL||do VP1^V00S061(.fDBTBL1F,.fDBTBL1)|do VP2^V00S061(.fDBTBL1F,.fDBTBL1)"
 set %TAB(4)=$C(5,20,1)_"00L|*DELETE|[*]@DELETE|||do VP3^V00S061(.fDBTBL1F,.fDBTBL1)"
 set %TAB(5)=$C(7,20,12)_"01U12405|1|[DBTBL1F]TBLREF|[DBTBL1]|if X?1A.AN!(X?1""%"".AN)!(X?.A.""_"".E)|do VP4^V00S061(.fDBTBL1F,.fDBTBL1)||||||25"
 set %TAB(6)=$C(7,34,40)_"20T|*DES|[*]@DES"
 set %TAB(7)=$C(8,19,60)_"20T|*PKEYS|[*]@PKEYS"
 set %TAB(8)=$C(12,17,12)_"20T|*FID|[*]@FID"
 set %TAB(9)=$C(12,44,2)_"01N12401|1|[DBTBL1F]RCTOMIN|||||0|1"
 set %TAB(10)=$C(12,53,2)_"01N12402|1|[DBTBL1F]RCTOMAX|||||0"
 set %TAB(11)=$C(12,67,12)_"20T|*DESR1|[*]@DESR1"
 set %TAB(12)=$C(13,17,12)_"20T|*DESR2|[*]@DESR2"
 set %TAB(13)=$C(13,44,2)_"00N12406|1|[DBTBL1F]RCFRMIN|||||0"
 set %TAB(14)=$C(13,53,2)_"00N12407|1|[DBTBL1F]RCFRMAX|||||0"
 set %TAB(15)=$C(13,67,12)_"20T|*FID|[*]@FID"
 set %TAB(16)=$C(16,21,1)_"01N12404|1|[DBTBL1F]UPD|[STBLFKOPT]||do VP5^V00S061(.fDBTBL1F,.fDBTBL1)"
 set %TAB(17)=$C(16,68,1)_"01N12403|1|[DBTBL1F]DEL|[STBLFKOPT]||do VP6^V00S061(.fDBTBL1F,.fDBTBL1)"
 do VTBL(.fDBTBL1F,.fDBTBL1)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VSPP   // screen post proc
 type Public RecordDBTBL1F fDBTBL1F
 type Public RecordDBTBL1 fDBTBL1
 do VSPP1(.fDBTBL1F,.fDBTBL1)
 #ACCEPT Date=11/05/03; pgm=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
VSPP1(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1)
	// Compare field attributes between two data items
	type public Boolean ER
	type public String FID, FKEYS, RM
	type Number J
	type String fid2
	set fid2 = fDBTBL1F.tblref
	for J = 1:1:FKEYS.length(",") do {
		type String column, dd1, dd2
		set column = FKEYS.piece(",", J)
		type SchemaColumn colrec = Db.getSchemaColumn(FID, column)
		set dd1 = colrec.dataType_" "_colrec.length
		if (colrec.precision > 0) set dd1 = dd1_"."_colrec.precision
		type SchemaColumn colrec2 = Db.getSchemaColumn(fid2, column)
		set dd2 = colrec2.dataType_" "_colrec2.length
		if (colrec2.precision > 0) set dd2 = dd2_"."_colrec2.precision
		if (dd1 '= dd2) do {
		
			set ER = 1
			// Mismatch between Data Item ~p1 in files ~p2 and ~p3
			set RM = $$^MSG(8263, column, FID, fid2)
		}
	}
	quit
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1) //
	type public Boolean DELETE, ER
	type public Number OPTION
	type public String %NOPRMT, DES, DESR1, DESR2, FID, PKEYS, RM, X

	type Number J
	type String badcols		

	quit:X.replace(" ", "").isNull()

	do CHANGE^DBSMACRO("TBL", "")

	set badcols = ""
	for J = 1:1:X.length(",") do {

		type String column

		set column = X.piece(",", J)

		quit:column.isLiteral()
		quit:column.beginsWith("$")
		quit:Db.isSchemaColumn(FID, column)

		set badcols = badcols_column_","
	}

	if 'badcols.isNull() do { quit

		set ER = 1
		// Invalid reference(s) , ~p1
		set RM = $$^MSG(1440, badcols.extract(1, badcols.length() - 1))

		if Db.isDefined("DBTBL1F", "%LIBS='SYSDEV' AND FID=:FID AND FKEYS=:X") do Db.delete("DBTBL1F", "%LIBS='SYSDEV' AND FID=:FID AND FKEYS=:X")
	}		

	do UNPROT^DBSMACRO("@DELETE")

	set DELETE = 0
	set DES = ""

	type RecordDBTBL1F recload = Db.getRecord("DBTBL1F", "%LIBS='SYSDEV',FID=:FID,FKEYS=:X", 1)
	set fDBTBL1F = recload.copy()

	if (fDBTBL1F.getMode() = 0) do {

		set OPTION = 0
		set (PKEYS, DESR1, DESR2) = ""

		set fDBTBL1F.rctomax = 1
		set fDBTBL1F.rctomin = 1
		set fDBTBL1F.del = 0
		set fDBTBL1F.rcfrmin = 0
		set fDBTBL1F.upd = 0

		do PROTECT^DBSMACRO("@DELETE")
		do DISPLAY^DBSMACRO("ALL")
	}

	else  do {

		type String PARFID, TBLREF

		set OPTION = 1

		set TBLREF = fDBTBL1F.tblref

		type SchemaTable tblrec = Db.getSchemaTable(TBLREF)

		set DES = tblrec.description

		set PKEYS = tblrec.primaryKeys
		set (DESR1, DESR2) = TBLREF

		do DISPLAY^DBSMACRO("ALL")

		// If this points to a parent file, it can only be edited there
		set PARFID = tblrec.parentTable
		if 'PARFID.isNull(), Db.isDefined("DBTBL1F", "%LIBS='SYSDEV' AND FID=:PARFID AND FKEYS=:X") do {

			set OPTION = 2
			set %NOPRMT = "N"

			do GOTO^DBSMACRO("END")

			// Exists in Supertype Entity ~p1
			write $$MSG^%TRMVT($$^MSG(7294, PARFID), 0, 1)
		}
	}

	quit
VP2(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1) //
	type public String FID

	do CHANGE^DBSMACRO("TBL",  "[DBTBL1F]:QU ""[DBTBL1F]FID=<<FID>>""")

	quit
VP3(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1) //
	type public Boolean X

	if X do GOTO^DBSMACRO("END")

	quit
VP4(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1) //
	type public Boolean ER
	type public Number OPTION
	type public String DES, FKEYS, FID, PKEYS, RM, X

	type Number lendiff

	quit:X.isNull()

	if (FID = X) do { quit

		set ER = 1
		// Invalid file
		set RM = $$^MSG(1332)
	}

	quit:(OPTION <> 0)

	type SchemaTable tblrec = Db.getSchemaTable(X)

	set PKEYS = tblrec.primaryKeys
	set DES = tblrec.description

	do DISPLAY^DBSMACRO("@PKEYS", PKEYS)
	do DISPLAY^DBSMACRO("@DES", DES)
	do DISPLAY^DBSMACRO("@DESR1", X)
	do DISPLAY^DBSMACRO("@DESR2", X)

	set lendiff = PKEYS.length(",") - FKEYS.length(",")

	if (lendiff > 0) do {

		set ER = 1
		// Too few keys in reference ~p1
		set RM = $$^MSG(2663, lendiff)
	}
	else  if (lendiff < 0) do {

		set ER = 1
		// Too many keys in reference ~p1
		set RM = $$^MSG(2664, lendiff)
	}

	quit
VP5(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1) //
	type public Number X

	quit:X.isNull()

	do CONSTR

	quit


private CONSTR	// Verify Constraint Parameters

	type public Boolean ER
	type public Number X
	type public String FID, FKEYS, RM

	type Number J

	if (X = 1) for J = 1:1:FKEYS.length(",") do {

		type String key

		set key = FKEYS.piece(",", J)

		quit:key.isLiteral()
		quit:key.beginsWith("$")

		type SchemaColumn colrec = Db.getSchemaColumn(FID, key)

		if (colrec.isRequired ! colrec.node.isLike("%*%")) do {

			set ER = 1
			// Required fields cannot be null - ~p1
			set RM = $$^MSG(2388, key)
		}
	}

	quit
VP6(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1) //
	type public Number X

	if 'X.isNull() do CONSTR

	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordDBTBL1F fDBTBL1F
 type Public RecordDBTBL1 fDBTBL1
 do VPR(.fDBTBL1F,.fDBTBL1)
 do VDA1(.fDBTBL1F,.fDBTBL1)
 do ^DBSPNT()
 quit

VW(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1)
 do VDA1(.fDBTBL1F,.fDBTBL1)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1)
 do VDA1(.fDBTBL1F,.fDBTBL1)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordDBTBL1F fDBTBL1F
 type Public RecordDBTBL1 fDBTBL1
 do VDA1(.fDBTBL1F,.fDBTBL1)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordDBTBL1F fDBTBL1F
 if sn="DBTBL1F" do vSET1(.fDBTBL1F,di,X)
 type Public RecordDBTBL1 fDBTBL1
 if sn="DBTBL1" do vSET2(.fDBTBL1,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordDBTBL1F fDBTBL1F,di,X)
 do fDBTBL1F.setAuditFlag(1)
 set fDBTBL1F.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET2(RecordDBTBL1 fDBTBL1,di,X)
 do fDBTBL1.setAuditFlag(1)
 set fDBTBL1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordDBTBL1F fDBTBL1F
 if fid="DBTBL1F" quit $$vREAD1(.fDBTBL1F,di)
 type Public RecordDBTBL1 fDBTBL1
 if fid="DBTBL1" quit $$vREAD2(.fDBTBL1,di)
 quit ""
vREAD1(RecordDBTBL1F fDBTBL1F,di)
 quit fDBTBL1F.@di
vREAD2(RecordDBTBL1 fDBTBL1,di)
 quit fDBTBL1.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 //
VSCRPRE(RecordDBTBL1F fDBTBL1F,RecordDBTBL1 fDBTBL1)  // Screen Pre-Processor
 new %TAB,vtab // Disable .MACRO. references to %TAB()
 //
 K DES,DESR1,DESR2,PKEYS
 #ACCEPT date=11/05/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
