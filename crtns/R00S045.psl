R00S045	// DBSIDXLST - Index File Definition Listing
	// Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:38 - pip

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String %LIBS
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1=%LIBS
	type String VIN3="ALL"

	set RID="DBSIDXLST"
	set RN="Index File Definition Listing"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()											// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DBTBL8]%LIBS|[DBTBL8]%LIBS:DISTINCT:NOVAL||D EXT^DBSQRY||T|Library Name|||||"
	set %TAB("VIN3")="|255||[DBTBL8]FID|[DBTBL1]:NOVAL||D EXT^DBSQRY||T|Primary File|||||"

	set %READ="IO/REQ,VIN1#0,VIN3#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String %LIBS
	type public String VIN1,VIN3
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,DESC,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="DBSIDXLST",RN="Index File Definition Listing"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=ACCESS
			type String CHRSET=$$^UCIOENCD("Report","DBSIDXLST","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60											// Non-interactive
	else  do {											// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$CLEARXY^%TRMVT
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$SCR132^%TRMVT											// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DBTBL8]INDEXNM#17#16,[DBTBL8]IDXDESC#34#29,[DBTBL8]ORDERBY#64#60,[DBTBL8]GLOBAL#125#8\[DBTBL8]PARFID#105#8"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DBTBL8]%LIBS "_VIN1,SEQ=SEQ+1
		set DQQRY(SEQ)="[DBTBL8]INDEXNM>0",SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DBTBL8]FID "_VIN3,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DBTBL8") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(,)

		set VBNRINFO("PROMPTS",1)="WC2|"_"Library Name"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"Primary File"_"|VIN3|"_VIN3.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="Index File Definition Listing"
		set VBNRINFO("PGM")="R00S045"
		set VBNRINFO("RID")="DBSIDXLST"
		set VBNRINFO("TABLES")="DBTBL8"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DBTBL8]%LIBS"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DBTBL8]8"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DBTBL8]FID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DBTBL8]INDEXNM"


		do ^DBSRWBNR(IO,.VBNRINFO(,))											// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1										// Group break flags
			set VT(I)=0											// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DBTBL8.%LIBS,DBTBL8.FID,DBTBL8.INDEXNM,DBTBL8.IDXD"
	set VSELECT=VSELECT_"ESC,DBTBL8.ORDERBY,DBTBL8.GLOBAL,DBTBL8.PARFID"

	#ACCEPT DATE=02/24/2010;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DBTBL8",VWHERE,"DBTBL8.%LIBS,DBTBL8.FID,DBTBL8.INDEXNM","","DQMODE=1")
	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize old values
	type public String vovc1="",vovc2="",vovc3="",vovc4="",vovc5="",vovc6="",vovc7=""
	quit

VSAVLAST	// Save old values
	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	type public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7
	set vovc1=vc1,vovc2=vc2,vovc3=vc3,vovc4=vc4,vovc5=vc5,vovc6=vc6,vovc7=vc7
	quit


VGETDATA(String V,String VI)	//
	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	set vc1=V.piece(9.char(),1)											// DBTBL8.%LIBS
	set vc2=V.piece(9.char(),2)											// DBTBL8.FID
	set vc3=V.piece(9.char(),3)											// DBTBL8.INDEXNM
	set vc4=V.piece(9.char(),4)											// DBTBL8.IDXDESC
	set vc5=V.piece(9.char(),5)											// DBTBL8.ORDERBY
	set vc6=V.piece(9.char(),6)											// DBTBL8.GLOBAL
	set vc7=V.piece(9.char(),7)											// DBTBL8.PARFID
	quit

	// User-defined pre/post-processor code

VPREBQ	// Pre-processor (before query)

	//Incoming=%Library
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data

	quit

VPRINT	// Print section
	type public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0										// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG4 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do VSUM4 quit:VFMQ  do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type public Number VRWOPT(),VT()
	type public String VSTATS()

	set VT(4)=VT(4)+1
	quit

VHDG4	// Group Header
	type public String %LIBS,%MSKD,%TIM,CONAM,DESC,ER,IOSL,RID,RN,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vcrt,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	quit:vh(4)  set vh(4)=1											// Print flag
	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=" "_($E(vc2,1,30))
	do VP1 quit:VFMQ!verror.get()  set V=$E(DESC,1,40)
	set VL=VL_"".justify(33-VL.length())_V
	do VOM
	quit

VDTL4	// Detail
	type public String %LIBS,%TIM,DESC,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc2,vc3,vc4,vc5,vc6,vc7,verror,vh(),vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 quit:VFMQ

	set VL="                "_("-----------------------------------------------------------------------------------------------------------------")
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                "_($E(vc3,1,16))
	set VL=VL_"".justify(33-VL.length())_($E(vc4,1,29))
	set VL=VL_"".justify(63-VL.length())_($E(vc5,1,60))
	set VL=VL_"".justify(124-VL.length())_($E(vc6,1,8))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="                                                                                                        "_($E(vc7,1,8))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	quit

VSUM4	// Summary
	type public String %LIBS,%TIM,DESC,I,IOSL,V,VFMQ,VL,VLC,VO,VOFFLG,VPN,VT(),VX(),verror,vh(),vrundate,vsysdate

	type public String vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7
	type String vc1,vc2,vc3,vc4,vc5,vc6,vc7
	if 'VT(4) quit
	set vc1=vovc1
	set vc2=vovc2
	set vc3=vovc3
	set vc4=vovc4
	set vc5=vovc5
	set vc6=vovc6
	set vc7=vovc7
	type String VLSAV = ""
	if VLC+0>IOSL do VHDG0 quit:VFMQ  set vh(4)=0 do VHDG4 set VLSAV=VL quit:VFMQ

	set VL="                "_("-----------------------------------------------------------------------------------------------------------------")
	if 'VL.translate(" ").isNull() do VOM
	set VL = VLSAV.get()
	quit


VHDG0	// Page Header
	type public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %LIBS,%MSKD,%TIM,CONAM,DESC,RID,RN,VL,vc1,vc2,vc3,vc4,vc5,vc6,vc7,vovc1,vovc2,vovc3,vovc4,vovc5,vovc6,vovc7,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit											// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+7,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM.get(),1,45)
	set VL=VL_"".justify(100-VL.length())_("Run Date:")
	set VL=VL_"".justify(110-VL.length())_($E(vrundate,1,10))
	set VL=VL_"".justify(123-VL.length())_($E(%TIM,1,8))
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_"".justify(102-VL.length())_("System:")
	set VL=VL_"".justify(110-VL.length())_($E(vsysdate,1,10))
	set VL=VL_"".justify(122-VL.length())_("Page:")
	set VL=VL_"".justify(128-VL.length())_($J(VPN,3))
	do VOM
	do VOM
	do VOM
	set VL=" "_("Primary File   Index            Description                   Order By                                 Supertype file      Global")
	do VOM
	set VL="===================================================================================================================================="
	do VOM
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)											// Lock report page heading

	quit


VOM	// Output print line
	type public Number AUXPTR,vcrt,vlc,VLC,VRG
	type public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {											// Non-CRT device (form feed)
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if 'AUXPTR.get() write 12.char(),!
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if vcrt<2 write VL,!											// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)										// Save in BROWSER buffer
	set VLC=VLC+1,VL=""											// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: DESC

	type public String vc2
	type public String DESC
	
	type String FID = vc2

	type RecordDBTBL1 dbtbl1 = Db.getRecord("DBTBL1", "%LIBS='SYSDEV',FID=:FID", 1)

	set DESC = dbtbl1.des

	quit	

	
	
