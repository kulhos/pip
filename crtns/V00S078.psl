V00S078(Number %ProcessMode,RecordDBTBL6SQ fDBTBL6S())   //DBS - DBS - SID= <DBTBL6S> QWIK Definition - Statistics
 ;;Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:33 - pip
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fDBTBL6S(1).exists() set fDBTBL6S(1) = Class.new("RecordDBTBL6SQ")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab",VSID="DBTBL6S",VPGM=$T(+0),VSNAME="QWIK Definition - Statistics"
 set VFSN("DBTBL6SQ")="zfDBTBL6S"
 set vPSL=1
 set KEYS(1)=fDBTBL6S(1).LIBS.get()
 set KEYS(2)=fDBTBL6S(1).QID.get()
 set KEYS(3)=fDBTBL6S(1).SEQ.get()
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 set %MODS=1,%REPEAT=19 do VPR(.fDBTBL6S()),VDA1(.fDBTBL6S()),V5^DBSPNT quit

 if '%ProcessMode do VNEW(.fDBTBL6S()),VPR(.fDBTBL6S()),VDA1(.fDBTBL6S())
 if %ProcessMode do VLOD(.fDBTBL6S()) quit:$G(ER)  do VPR(.fDBTBL6S()),VDA1(.fDBTBL6S())

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fDBTBL6S())
 type Number ptr
 set ptr=""
 for  set ptr = fDBTBL6S(ptr).order() quit:ptr.isNull()  do {
     if fDBTBL6S(ptr).SEQ="" kill fDBTBL6S(ptr)
     }
	quit


VNEW(RecordDBTBL6SQ fDBTBL6S()) // Initialize arrays if %O=0
 
 do VDEF(.fDBTBL6S())
 do VLOD(.fDBTBL6S())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordDBTBL6SQ fDBTBL6S())
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordDBTBL6SQ fDBTBL6S()) // Load data from disc - %O = (1-5)
 if '$D(%REPEAT) set %REPEAT=19
 if '$D(%MODS) set %MODS=1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordDBTBL6SQ fDBTBL6S()) // Display screen prompts
 set VO="8||13|0"
 set VO(0)="|0"
 set VO(1)=$C(1,1,80,0,0,0,0,0,0,0)_"11Tlqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk"
 set VO(2)=$C(2,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(3)=$C(2,6,11,1,0,0,0,0,0,0)_"01T Data Item "
 set VO(4)=$C(2,35,10,1,0,0,0,0,0,0)_"01T Based on "
 set VO(5)=$C(2,54,23,1,0,0,0,0,0,0)_"01T Statistics Increments "
 set VO(6)=$C(2,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(7)=$C(3,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(8)=$C(3,80,1,0,0,0,0,0,0,0)_"11Tx"
 if '%MODS.exists() set %MODS=1
 set DY=4 for I=%MODS:1:%REPEAT+%MODS-1 do VRPR(.fDBTBL6S())
 set VO=(+VO)_"|"_(VO+1)_"|13" quit  // BOD pointer
 
VRPR(RecordDBTBL6SQ fDBTBL6S())  // Display prompts %REPEAT times
 
 set VO(VO+1)=$C(DY,1,1,37,52,52,0,0,0,0)_"11Tx"
 set VO(VO+2)=$C(DY,80,1,38,52,0,0,0,0,0)_"11Tx"
 set VO=VO+2,DY=DY+1
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordDBTBL6SQ fDBTBL6S())  // Display screen data
 new V
 //
 set VX=$P(VO,"|",2)
  
 set:'%MODS.exists() %MODS=1 set VX=VO.piece("|",2)+-1,DY=4 for I=%MODS:1:%REPEAT+%MODS-1 do VRDA(.fDBTBL6S())
 set VO.piece("|",1)=VX quit  // EOD pointer
 
VRDA(RecordDBTBL6SQ fDBTBL6S())  // Display data %REPEAT times
 //instantiate new object if necessary
  #ACCEPT;DATE=08/08/06; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEPRECATED
  if 'fDBTBL6S(I).getPointer() do {
     set fDBTBL6S(I)=Class.new("RecordDBTBL6SQ","$G(KEYS(1)),$G(KEYS(2))")
     }
 set VO(VX+1)=$C(DY,2,25,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL6S(I).QDI,1,25)
 set VO(VX+2)=$C(DY,28,25,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL6S(I).QBASE,1,25)
 set VO(VX+3)=$C(DY,54,26,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL6S(I).QINCR,1,26)
 set DY=DY+1,VX=VX+3
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordDBTBL6SQ fDBTBL6S())
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab set %MODGRP=1
 set %MODOFF=0,%MOD=3,%MAX=(%MOD*%REPEAT)+%MODOFF,VPT=1,VPB=3+%REPEAT,BLKSIZ=(76*%REPEAT)+0,PGM=$T(+0),DLIB="SYSDEV",DFID="DBTBL6SQ"
 set OLNTB=VPB*1000
 
 set VFSN("DBTBL6SQ")="zfDBTBL6S"
 //
 for I=4:1:%MAX set %TAB(I)=""
	
	
 set %TAB(1)=$C(3,1,25)_"00T12404|1|[DBTBL6SQ]QDI|||do VP1^V00S078(.fDBTBL6S)|do VP2^V00S078(.fDBTBL6S)|||||40"
 set %TAB(2)=$C(3,27,25)_"00T12401|1|[DBTBL6SQ]QBASE|||do VP3^V00S078(.fDBTBL6S)||||||40"
 set %TAB(3)=$C(3,53,26)_"00T12405|1|[DBTBL6SQ]QINCR|||do VP4^V00S078(.fDBTBL6S)||||||40"
 do VTBL(.fDBTBL6S())
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordDBTBL6SQ fDBTBL6S()) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordDBTBL6SQ fDBTBL6S()) //
 type String FILES
 
 set ER=0
 if X="",V'="" do { quit
        do DELETE^DBSMACRO("DBTBL6SQ.QDI")
        do DELETE^DBSMACRO("DBTBL6SQ.QINCR")
        do GOTO^DBSMACRO("NEXT")
 }
 
 if X="" do GOTO^DBSMACRO("NEXT") quit
 
 type RecordDBTBL5Q d5q = Db.getRecord("DBTBL5Q","LIBS='SYSDEV',QRID=:QRID")
 set FILES = d5q.pfid
 
 if X'["[" S X="[SYSDEV,"_FILES.piece(",",1)_"]"_X // Convert to {lib,fi}di
 
 if 'ZTBL(X).exists() quit
 
 quit
VP2(RecordDBTBL6SQ fDBTBL6S()) //
 type String FILES,DFID,DINAM,DLIB

 type RecordDBTBL5Q d5q=Db.getRecord("DBTBL5Q","LIBS='SYSDEV',QRID=:QRID")
 set FILES=d5q.pfid
 set DFID=FILES.piece(",",1) 
 set DLIB="SYSDEV"

 type DbSet ds=Db.selectDbSet("DBTBL6F","LIBS='SYSDEV' AND QRID=:QRID")
 while ds.next() do {
        type RecordDBTBL6F d6f = ds.getRecord("DBTBL6F")
	set X=d6f.formdi
	do ^DBSDI
        set ZTBL(DINAM)="     "_d6f.formdesc.translate("@"," ")
 }
 
 set I(3)="ZTBL("
 set RM=""
 
 quit
VP3(RecordDBTBL6SQ fDBTBL6S()) //
 type String DLIB, DFID, DINAM, PFID

 if X="",fDBTBL6S(I(1)).qdi.isNull() quit
 if X="",'fDBTBL6S(I(1)).qdi.isNull() set E5=1 quit  

 type RecordDBTBL5Q d5q = Db.getRecord("DBTBL5Q","LIBS='SYSDEV',QRID=:QRID")
 
 set PFID = d5q.pfid.piece(",",1)
 
 set DLIB="SYSDEV"
 set DFID=PFID

 do ^DBSDI 
 quit:ER

 set X=DINAM

 if X=fDBTBL6S(I(1)).qdi,"TUFL"'[DI(9) quit

 do DELETE^DBSMACRO("DBTBL5SQ.QINCR")

 set NI=NI+1
 
 quit
 
VP4(RecordDBTBL6SQ fDBTBL6S()) //
 if X.isNull() quit
 if X=0 set X="" quit

 set X2=-99999999

 for Z1=1:1 do { quit:ER!(Z.isNull() & (Z99.isNull())) 
	set Z=X.piece(",",Z1) 
	set Z99=X.piece(",",Z1+1,999) 
	if (Z.isNull() & (Z99.isNull())) quit  
	do INCCHK
 }

 quit

 
INCCHK 

 if Z="" do INCCHKX quit

 if Z<X2 set ER=1,RM=$$^MSG(943) quit

 set X2=Z
 if Z?."-"1N.N quit
 
 if Z?."-"1N.N1".".N quit

 do INCCHKX

 quit

INCCHKX 
 set ER=1
 set RM=$$^MSG(961) 
 
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordDBTBL6SQ fDBTBL6S()
 do VPR(.fDBTBL6S())
 do VDA1(.fDBTBL6S())
 do ^DBSPNT()
 quit

VW(RecordDBTBL6SQ fDBTBL6S())
 do VDA1(.fDBTBL6S())
 do ^DBSPNT(10)
 quit

VDAPNT(RecordDBTBL6SQ fDBTBL6S())
 do VDA1(.fDBTBL6S())
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordDBTBL6SQ fDBTBL6S()
 do VDA1(.fDBTBL6S())
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordDBTBL6SQ fDBTBL6S()
 if sn="DBTBL6SQ" do vSET1(fDBTBL6S(I(1)),di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordDBTBL6SQ fDBTBL6S,di,X)
 do fDBTBL6S.setAuditFlag(1)
 set fDBTBL6S.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordDBTBL6SQ fDBTBL6S()
 if fid="DBTBL6SQ" quit $$vREAD1(fDBTBL6S(I(1)),di)
 quit ""
vREAD1(RecordDBTBL6SQ fDBTBL6S,di)
 quit fDBTBL6S.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
