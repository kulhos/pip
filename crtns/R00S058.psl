R00S058	// DBSTRGLST - List Trigger Definition
	// Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:38 - pip

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"
	type String VIN3="ALL"
	type String VIN4="ALL"
	type String VIN5="ALL"

	set RID="DBSTRGLST"
	set RN="List Trigger Definition"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DBTBL7]TABLE|[DBTBL1]:NOVAL||D EXT^DBSQRY||T|Table Name|||||"
	set %TAB("VIN2")="|255||[DBTBL7]TRGID|[DBTBL7]TRGID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Trigger Name|||||"
	set %TAB("VIN3")="|255||[DBTBL7]COLUMNS|||D EXT^DBSQRY||T|List of Columns|||||"
	set %TAB("VIN4")="|255||[DBTBL7]TLD|||D EXT^DBSQRY||T|Date Last Updated|||||"
	set %TAB("VIN5")="|255||[DBTBL7]USER|||D EXT^DBSQRY||T|User|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,VIN3#0,VIN4#0,VIN5#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2,VIN3,VIN4,VIN5
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CODE,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),ZSETAUD,ZSYSGEN,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="DBSTRGLST",RN="List Trigger Definition"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=ACCESS
			type String CHRSET=$$^UCIOENCD("Report","DBSTRGLST","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60											// Non-interactive
	else  do {											// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$CLEARXY^%TRMVT
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$SCR132^%TRMVT											// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DBTBL7]TABLE "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DBTBL7]TRGID "_VIN2,SEQ=SEQ+1
		if VIN3.get()="" set VIN3="ALL"
		if VIN3'="ALL" set DQQRY(SEQ)="[DBTBL7]COLUMNS "_VIN3,SEQ=SEQ+1
		if VIN4.get()="" set VIN4="ALL"
		if VIN4'="ALL" set DQQRY(SEQ)="[DBTBL7]TLD "_VIN4,SEQ=SEQ+1
		if VIN5.get()="" set VIN5="ALL"
		if VIN5'="ALL" set DQQRY(SEQ)="[DBTBL7]USER "_VIN5,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DBTBL7") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(,)

		set VBNRINFO("PROMPTS",1)="WC2|"_"Table Name"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"Trigger Name"_"|VIN2|"_VIN2.get()
		set VBNRINFO("PROMPTS",3)="WC2|"_"List of Columns"_"|VIN3|"_VIN3.get()
		set VBNRINFO("PROMPTS",4)="WC2|"_"Date Last Updated"_"|VIN4|"_VIN4.get()
		set VBNRINFO("PROMPTS",5)="WC2|"_"User"_"|VIN5|"_VIN5.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="List Trigger Definition"
		set VBNRINFO("PGM")="R00S058"
		set VBNRINFO("RID")="DBSTRGLST"
		set VBNRINFO("TABLES")="DBTBL7"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DBTBL7]%LIBS"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DBTBL7]TABLE"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DBTBL7]TRGID"


		do ^DBSRWBNR(IO,.VBNRINFO(,))											// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1										// Group break flags
			set VT(I)=0											// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DBTBL7.%LIBS,DBTBL7.TABLE,DBTBL7.TRGID,DBTBL7.DES,"
	set VSELECT=VSELECT_"DBTBL7.ACTBI,DBTBL7.ACTAI,DBTBL7.ACTBU,DBTBL7.ACTA"
	set VSELECT=VSELECT_"U,DBTBL7.ACTBD,DBTBL7.ACTAD,DBTBL7.TLD,DBTBL7.USER"
	set VSELECT=VSELECT_",DBTBL7.COLUMNS"

	#ACCEPT DATE=02/24/2010;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DBTBL7",VWHERE,"DBTBL7.%LIBS,DBTBL7.TABLE,DBTBL7.TRGID","","DQMODE=1")
	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13
	set vc1=V.piece(9.char(),1)											// DBTBL7.%LIBS
	set vc2=V.piece(9.char(),2)											// DBTBL7.TABLE
	set vc3=V.piece(9.char(),3)											// DBTBL7.TRGID
	set vc4=V.piece(9.char(),4)											// DBTBL7.DES
	set vc5=V.piece(9.char(),5)											// DBTBL7.ACTBI
	set vc6=V.piece(9.char(),6)											// DBTBL7.ACTAI
	set vc7=V.piece(9.char(),7)											// DBTBL7.ACTBU
	set vc8=V.piece(9.char(),8)											// DBTBL7.ACTAU
	set vc9=V.piece(9.char(),9)											// DBTBL7.ACTBD
	set vc10=V.piece(9.char(),10)											// DBTBL7.ACTAD
	set vc11=V.piece(9.char(),11)											// DBTBL7.TLD
	set vc12=V.piece(9.char(),12)											// DBTBL7.USER
	set vc13=V.piece(9.char(),13)											// DBTBL7.COLUMNS
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

MEMO(String MEMO,Number LINE,Number SIZE)	// Print all lines of memo, except last - return it in V

	type public Number IOSL,VFMQ,VLC
	type public String VL
	type Number I,TAB,VLLEN
	type String X

	set TAB=(LINE#1000)-1											// Location
	set MEMO=MEMO.trim()

	if MEMO.length()'>SIZE quit MEMO

		set VLLEN = VL.length()
	for  do { quit:VFMQ!(MEMO="")
		set X=MEMO.extract(1,SIZE)
		if X[" " do {
			for I=SIZE:-1:1 quit:X.extract(I)=" "
			set X=X.extract(1,I-1)
		}
		set MEMO=MEMO.extract(X.length()+1,MEMO.length())
		set X=X.trim()
		set MEMO=MEMO.trim() quit:MEMO.isNull()
		// Print this portion
		if VLC+1>IOSL do VHDG0 if VFMQ set VFMQ=1 quit
		set VL=VL_"".justify(TAB-VL.length())_X do VOM
		set VL="".justify(TAB)
	}
	set VL="".justify(VLLEN)
	quit X

VEXIT(NOINFO)	// Exit from report
	type public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data

	quit

VPRINT	// Print section
	type public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0										// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1,VH0=1
	quit

VSUM	// Report Group Summary
	type public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type public Number VRWOPT(),VT()
	type public String VSTATS()

	set VT(3)=VT(3)+1
	quit

VDTL3	// Detail
	type public String %TIM,CODE,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),ZSETAUD,ZSYSGEN,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=$E(vc2,1,12)
	set VL=VL_"".justify(14-VL.length())_($E(vc3,1,20))
	set VL=VL_"".justify(36-VL.length())_($E(vc4,1,40))
	set VL=VL_"".justify(78-VL.length())_($S(vc5:"Y",1:"N"))
	set VL=VL_"".justify(82-VL.length())_($S(vc6:"Y",1:"N"))
	set VL=VL_"".justify(86-VL.length())_($S(vc7:"Y",1:"N"))
	set VL=VL_"".justify(90-VL.length())_($S(vc8:"Y",1:"N"))
	set VL=VL_"".justify(94-VL.length())_($S(vc9:"Y",1:"N"))
	set VL=VL_"".justify(98-VL.length())_($S(vc10:"Y",1:"N"))
	set VL=VL_"".justify(102-VL.length())_($J($$DAT^%ZM(vc11),10))
	set VL=VL_"".justify(113-VL.length())_($E(vc12,1,18))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="          "_("UPDATE action by columns:")
	set V=vc13,VO=V do VP1 quit:VFMQ!verror.get()  set V=$$MEMO(V,3037,90)
	set VL=VL_"".justify(36-VL.length())_V
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set VL="          "_("-------------------------------------------------- Procedural Code")
	set VL=VL_"".justify(77-VL.length())_("-------------------------------------------")
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="          "_("(System Generated): ")
	do VP2 quit:VFMQ!verror.get()  set V=$E(ZSYSGEN,1,70)
	set VL=VL_"".justify(32-VL.length())_V
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$E(ZSETAUD,1,70) set VL="                                "_V
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	do VP4 quit:VFMQ!verror.get()  set V=$E(CODE,1,110) set VL="          "_V
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="          "_("--------------------------------------------------------------------------------------------------------------")
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	quit


VHDG0	// Page Header
	type public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CODE,CONAM,RID,RN,VL,ZSETAUD,ZSYSGEN,vc1,vc10,vc11,vc12,vc13,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit											// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+6,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM.get(),1,45)
	set VL=VL_"".justify(100-VL.length())_("Run Date:")
	set VL=VL_"".justify(110-VL.length())_($E(vrundate,1,10))
	set VL=VL_"".justify(123-VL.length())_($E(%TIM,1,8))
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_"".justify(102-VL.length())_("System:")
	set VL=VL_"".justify(110-VL.length())_($E(vsysdate,1,10))
	set VL=VL_"".justify(122-VL.length())_("Page:")
	set VL=VL_"".justify(128-VL.length())_($J(VPN,3))
	do VOM
	do VOM
	set VL="                                                                              "_("--- Trigger Actions ---      Last")
	do VOM
	set VL="Table Name    Trigger Name          Description                               BI  AI  BU  AU  BD  AD    Updated  By User"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)											// Lock report page heading

	quit


VOM	// Output print line
	type public Number AUXPTR,vcrt,vlc,VLC,VRG
	type public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {											// Non-CRT device (form feed)
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if 'AUXPTR.get() write 12.char(),!
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if vcrt<2 write VL,!											// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)										// Save in BROWSER buffer
	set VLC=VLC+1,VL=""											// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: COLUMNS

	type public String vc13
	type public String VL

	type String COLUMNS

	set COLUMNS = vc13

	// Make blank to null blank line
	if COLUMNS.isNull() set (VL) = ""

	quit

VP2	// Column pre-processor - Variable: ZSYSGEN

	type public String vc2
	type public String ZSYSGEN

	set ZSYSGEN = " type public Record"_vc2_" "_vc2.lowerCase()

	quit

VP3	// Column pre-processor - Variable: ZSETAUD

	type public String vc7,vc2
	type public String ZSETAUD

	set ZSETAUD = ""

	quit:'vc7

	// Before update trigger
	set ZSETAUD = " do "_vc2.lowerCase()_".setAuditFlag(1)"

	quit

VP4	// Column pre-processor - Variable: CODE

	type public String vc2,vc3
	type public Number IOSL, verror, VFMQ, VLC
	type public String CODE, VL

	type String TABLE,TRGID

	set verror = 0
	set CODE = ""

	set TABLE = vc2
	set TRGID = vc3

	type ResultSet rs=Db.select("CODE","DBTBL7D","%LIBS='SYSDEV' AND TABLE=:TABLE AND TRGID=:TRGID","SEQ ASC")

	while rs.next() do { quit:verror
		set VL=$J("",10)_rs.getRow()
		if VLC+2>IOSL do {
			do VHDG0
			if VFMQ set verror=1
		}
		else  do VOM
	}

	quit
