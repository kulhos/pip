V00S046(Number %ProcessMode,RecordDBSDOM fDBSDOM)   // -  - SID= <DBSDOM> User-Defined Data Types Maintenance
 ;;Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:33 - pip
 // The DBSDOM screen enables the institution to create, maintain, and delete
 // user-defined data types.
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fDBSDOM.exists() set fDBSDOM = Class.new("RecordDBSDOM")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,SYSSN,DOM,DELETE",VSID="DBSDOM",VPGM=$T(+0),VSNAME="User-Defined Data Types Maintenance"
 set VFSN("DBSDOM")="zfDBSDOM"
 set vPSL=1
 set KEYS(1)=fDBSDOM.SYSSN
 set KEYS(2)=fDBSDOM.DOM
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fDBSDOM),VDA1(.fDBSDOM),^DBSPNT() quit

 if '%ProcessMode do VNEW(.fDBSDOM),VPR(.fDBSDOM),VDA1(.fDBSDOM)
 if %ProcessMode do VLOD(.fDBSDOM) quit:$G(ER)  do VPR(.fDBSDOM),VDA1(.fDBSDOM)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fDBSDOM)
	quit


VNEW(RecordDBSDOM fDBSDOM) // Initialize arrays if %O=0
 
 do VDEF(.fDBSDOM)
 do VLOD(.fDBSDOM)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordDBSDOM fDBSDOM)
 quit:fDBSDOM.SYSSN.isNull() ! fDBSDOM.DOM.isNull() 
 quit:%ProcessMode  set ER=0 if (fDBSDOM.SYSSN="")!(fDBSDOM.DOM="") set ER=1,RM=$$^MSG(1767,"SYSSN,DOM") Q
 if Db.isDefined("DBSDOM","DBSDOM.SYSSN=:fDBSDOM.SYSSN AND DBSDOM.DOM=:fDBSDOM.DOM") S ER=1,RM=$$^MSG(2327) Q
 do fDBSDOM.setAuditFlag(1)
 if fDBSDOM.LTD="" set fDBSDOM.LTD=+$H
 if fDBSDOM.PRLEN="" set fDBSDOM.PRLEN=1
 if fDBSDOM.PRTYP="" set fDBSDOM.PRTYP=1
 if fDBSDOM.USER="" set fDBSDOM.USER=$$USERNAM^%ZFUNC
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordDBSDOM fDBSDOM) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordDBSDOM fDBSDOM) // Display screen prompts
 set VO="65||13|"
 set VO(0)="|0"
 set VO(1)=$C(2,1,80,0,0,0,0,0,0,0)_"11Tlqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk"
 set VO(2)=$C(3,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(3)=$C(3,19,8,1,0,0,0,0,0,0)_"01T System:"
 set VO(4)=$C(3,61,8,0,0,0,0,0,0,0)_"01TUpdated:"
 set VO(5)=$C(3,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(6)=$C(4,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(7)=$C(4,11,16,1,0,0,0,0,0,0)_"01T Data Type Name:"
 set VO(8)=$C(4,50,7,0,0,0,0,0,0,0)_"01TDelete:"
 set VO(9)=$C(4,61,8,0,0,0,0,0,0,0)_"01TBy User:"
 set VO(10)=$C(4,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(11)=$C(5,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(12)=$C(5,2,4,2,0,0,0,0,0,0)_"01TProt"
 set VO(13)=$C(5,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(14)=$C(6,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(15)=$C(6,14,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(16)=$C(6,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(17)=$C(7,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(18)=$C(7,6,21,1,0,0,0,0,0,0)_"01T DATA-QWIK Data Type:"
 set VO(19)=$C(7,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(20)=$C(8,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(21)=$C(8,19,8,1,0,0,0,0,0,0)_"01T Length:"
 set VO(22)=$C(8,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(23)=$C(9,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(24)=$C(9,7,20,0,0,0,0,0,0,0)_"01TScreen Display Size:"
 set VO(25)=$C(9,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(26)=$C(10,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(27)=$C(10,10,17,0,0,0,0,0,0,0)_"01T   Fixed Decimal:"
 set VO(28)=$C(10,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(29)=$C(11,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(30)=$C(11,12,15,0,0,0,0,0,0,0)_"01TColumn Heading:"
 set VO(31)=$C(11,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(32)=$C(12,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(33)=$C(12,12,15,0,0,0,0,0,0,0)_"01T Default Value:"
 set VO(34)=$C(12,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(35)=$C(13,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(36)=$C(13,10,17,0,0,0,0,0,0,0)_"01T Table Reference:"
 set VO(37)=$C(13,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(38)=$C(14,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(39)=$C(14,7,20,0,0,0,0,0,0,0)_"01T      Pattern Match:"
 set VO(40)=$C(14,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(41)=$C(15,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(42)=$C(15,10,17,0,0,0,0,0,0,0)_"01T Validation Expr:"
 set VO(43)=$C(15,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(44)=$C(16,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(45)=$C(16,5,22,0,0,0,0,0,0,0)_"01T        Minimum Value:"
 set VO(46)=$C(16,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(47)=$C(17,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(48)=$C(17,13,14,0,0,0,0,0,0,0)_"01TMaximum Value:"
 set VO(49)=$C(17,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(50)=$C(18,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(51)=$C(18,5,22,0,0,0,0,0,0,0)_"01T         Input Filter:"
 set VO(52)=$C(18,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(53)=$C(19,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(54)=$C(19,4,23,0,0,0,0,0,0,0)_"01T         Output Filter:"
 set VO(55)=$C(19,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(56)=$C(20,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(57)=$C(20,5,22,0,0,0,0,0,0,0)_"01T    Null Substitution:"
 set VO(58)=$C(20,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(59)=$C(21,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(60)=$C(21,10,17,0,0,0,0,0,0,0)_"01T Unit of Measure:"
 set VO(61)=$C(21,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(62)=$C(22,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(63)=$C(22,14,13,0,0,0,0,0,0,0)_"01T String Mask:"
 set VO(64)=$C(22,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(65)=$C(23,1,80,0,0,0,0,0,0,0)_"11Tmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordDBSDOM fDBSDOM)  // Display screen data
 new V
 if %ProcessMode=5 new DELETE,DOM,SYSSN
 if  set (DELETE,DOM,SYSSN)=""
 else  set DELETE=$G(DELETE),DOM=$G(DOM),SYSSN=$G(SYSSN)
 
 s DELETE=$G(DELETE)
 s DOM=$G(DOM)
 s SYSSN=$G(SYSSN)
 //
 set VO="105|66|13|"
 set VO(66)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^UTLREAD($G(%FN)))
 set VO(67)=$C(3,28,3,2,0,0,0,0,0,0)_"00U"_SYSSN.get()
 set VO(68)=$C(3,70,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fDBSDOM.LTD)
 set VO(69)=$C(4,28,20,2,0,0,0,0,0,0)_"00U"_DOM.get()
 set VO(70)=$C(4,58,1,2,0,0,0,0,0,0)_"00L"_$S(DELETE.get():"Y",1:"N")
 set VO(71)=$C(4,70,10,2,0,0,0,0,0,0)_"01T"_$E(fDBSDOM.USER,1,10)
 set VO(72)=$C(6,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRDES:"Y",1:"N")
 set VO(73)=$C(6,28,40,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.DES,1,40)
 set VO(74)=$C(7,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRTYP:"Y",1:"N")
 set VO(75)=$C(7,28,1,2,0,0,0,0,0,0)_"00U"_$E(fDBSDOM.TYP,1,1)
 set VO(76)=$C(8,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRLEN:"Y",1:"N")
 set VO(77)=$C(8,28,5,2,0,0,0,0,0,0)_"00N"_fDBSDOM.LEN
 set VO(78)=$C(9,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRSIZ:"Y",1:"N")
 set VO(79)=$C(9,28,3,2,0,0,0,0,0,0)_"00N"_fDBSDOM.SIZ
 set VO(80)=$C(10,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRDEC:"Y",1:"N")
 set VO(81)=$C(10,28,2,2,0,0,0,0,0,0)_"00N"_fDBSDOM.DEC
 set VO(82)=$C(11,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRRHD:"Y",1:"N")
 set VO(83)=$C(11,28,40,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.RHD,1,40)
 set VO(84)=$C(12,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRDFT:"Y",1:"N")
 set VO(85)=$C(12,28,52,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.DFT,1,52)
 set VO(86)=$C(13,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRTBL:"Y",1:"N")
 set VO(87)=$C(13,28,52,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.TBL,1,52)
 set VO(88)=$C(14,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRPTN:"Y",1:"N")
 set VO(89)=$C(14,28,52,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.PTN,1,52)
 set VO(90)=$C(15,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRVLD:"Y",1:"N")
 set VO(91)=$C(15,28,52,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.VLD,1,52)
 set VO(92)=$C(16,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRMIN:"Y",1:"N")
 set VO(93)=$C(16,28,25,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.MIN,1,25)
 set VO(94)=$C(17,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRMAX:"Y",1:"N")
 set VO(95)=$C(17,28,25,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.MAX,1,25)
 set VO(96)=$C(18,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRIPF:"Y",1:"N")
 set VO(97)=$C(18,28,40,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.IPF,1,40)
 set VO(98)=$C(19,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PROPF:"Y",1:"N")
 set VO(99)=$C(19,28,40,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.OPF,1,40)
 set VO(100)=$C(20,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRNLV:"Y",1:"N")
 set VO(101)=$C(20,28,20,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.NLV,1,20)
 set VO(102)=$C(21,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRMSU:"Y",1:"N")
 set VO(103)=$C(21,28,1,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.MSU,1,1)
 set VO(104)=$C(22,3,1,2,0,0,0,0,0,0)_"00L"_$S(fDBSDOM.PRMSK:"Y",1:"N")
 set VO(105)=$C(22,28,20,2,0,0,0,0,0,0)_"00T"_$E(fDBSDOM.MSK,1,20)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordDBSDOM fDBSDOM)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=39,VPT=1,VPB=23,PGM=$T(+0),DLIB="SYSDEV",DFID="DBSDOM"
 set OLNTB=23001
 
 set VFSN("DBSDOM")="zfDBSDOM"
 //
 // 
	
	
 set %TAB(1)=$C(2,27,3)_"01U|*SYSSN|[*]@SYSSN|[SCASYS]"
 set %TAB(2)=$C(2,69,10)_"20D12419|1|[DBSDOM]LTD"
 set %TAB(3)=$C(3,27,20)_"01U|*DOM|[*]@DOM|[DBSDOM]||do VP1^V00S046(.fDBSDOM)"
 set %TAB(4)=$C(3,57,1)_"00L|*DELETE|[*]@DELETE|||do VP2^V00S046(.fDBSDOM)"
 set %TAB(5)=$C(3,69,10)_"20T12420|1|[DBSDOM]USER|||||||||20"
 set %TAB(6)=$C(5,2,1)_"00L12401|1|[DBSDOM]PRDES"
 set %TAB(7)=$C(5,27,40)_"01T12401|1|[DBSDOM]DES|||do VP3^V00S046(.fDBSDOM)"
 set %TAB(8)=$C(6,2,1)_"00L12402|1|[DBSDOM]PRTYP"
 set %TAB(9)=$C(6,27,1)_"01U12402|1|[DBSDOM]TYP|[DBCTLDVFM]||do VP4^V00S046(.fDBSDOM)"
 set %TAB(10)=$C(7,2,1)_"00L12403|1|[DBSDOM]PRLEN"
 set %TAB(11)=$C(7,27,5)_"01N12403|1|[DBSDOM]LEN"
 set %TAB(12)=$C(8,2,1)_"00L12404|1|[DBSDOM]PRSIZ"
 set %TAB(13)=$C(8,27,3)_"00N12404|1|[DBSDOM]SIZ|||||1|80"
 set %TAB(14)=$C(9,2,1)_"00L12415|1|[DBSDOM]PRDEC"
 set %TAB(15)=$C(9,27,2)_"00N12415|1|[DBSDOM]DEC|||||0|16"
 set %TAB(16)=$C(10,2,1)_"00L12406|1|[DBSDOM]PRRHD"
 set %TAB(17)=$C(10,27,40)_"00T12406|1|[DBSDOM]RHD"
 set %TAB(18)=$C(11,2,1)_"00L12414|1|[DBSDOM]PRDFT"
 set %TAB(19)=$C(11,27,52)_"00T12414|1|[DBSDOM]DFT|||||||||58"
 set %TAB(20)=$C(12,2,1)_"00L12405|1|[DBSDOM]PRTBL"
 set %TAB(21)=$C(12,27,52)_"00T12405|1|[DBSDOM]TBL|||||||||255"
 set %TAB(22)=$C(13,2,1)_"00L12410|1|[DBSDOM]PRPTN"
 set %TAB(23)=$C(13,27,52)_"00T12410|1|[DBSDOM]PTN|||||||||60"
 set %TAB(24)=$C(14,2,1)_"00L12413|1|[DBSDOM]PRVLD"
 set %TAB(25)=$C(14,27,52)_"00T12413|1|[DBSDOM]VLD|||||||||70"
 set %TAB(26)=$C(15,2,1)_"00L12408|1|[DBSDOM]PRMIN"
 set %TAB(27)=$C(15,27,25)_"00T12408|1|[DBSDOM]MIN|||do VP5^V00S046(.fDBSDOM)"
 set %TAB(28)=$C(16,2,1)_"00L12409|1|[DBSDOM]PRMAX"
 set %TAB(29)=$C(16,27,25)_"00T12409|1|[DBSDOM]MAX|||do VP6^V00S046(.fDBSDOM)"
 set %TAB(30)=$C(17,2,1)_"00L12412|1|[DBSDOM]PRIPF"
 set %TAB(31)=$C(17,27,40)_"00T12412|1|[DBSDOM]IPF"
 set %TAB(32)=$C(18,2,1)_"00L12411|1|[DBSDOM]PROPF"
 set %TAB(33)=$C(18,27,40)_"00T12411|1|[DBSDOM]OPF"
 set %TAB(34)=$C(19,2,1)_"00L12407|1|[DBSDOM]PRNLV"
 set %TAB(35)=$C(19,27,20)_"00T12407|1|[DBSDOM]NLV"
 set %TAB(36)=$C(20,2,1)_"00L12416|1|[DBSDOM]PRMSU"
 set %TAB(37)=$C(20,27,1)_"00T12416|1|[DBSDOM]MSU|,C#Currency,D#Distance,V#Volume,W#Weight"
 set %TAB(38)=$C(21,2,1)_"00L12417|1|[DBSDOM]PRMSK"
 set %TAB(39)=$C(21,27,20)_"00T12417|1|[DBSDOM]MSK"
 do VTBL(.fDBSDOM)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordDBSDOM fDBSDOM) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordDBSDOM fDBSDOM) //
	type public Boolean DELETE
	type public String REQ, RM, SYSSN, V, X
	
	quit:X.isNull()
	
	do CHANGE^DBSMACRO("TBL", "")
	
	quit:(X = V)
	
	set fDBSDOM = Db.getRecord("DBSDOM", "SYSSN=:SYSSN, DOM=:X", 1)
	
	if (fDBSDOM.getMode() = 0) do {
		
		set %ProcessMode = 0
		// Create new data item
		set RM = $$^MSG(639)
		
		do GOTO^DBSMACRO("DBSDOM.DES")
	}
	else  do {
		
		set %ProcessMode = 1
		kill REQ
	}
	
	set DELETE = 0

	do DISPLAY^DBSMACRO("ALL")
	
	quit
VP2(RecordDBSDOM fDBSDOM) //
	type public Boolean ER, X
	type public String RM
	
	quit:'X
	
	type ResultSet rs = Db.select("DI", "DBTBL1D,DBTBL1", "%LIBS='SYSDEV' AND DOM=:DOM", "", "", "/DQMODE=1")
	
	if rs.next() do {
		
		set ER = 1
		// Domain references exist
		set RM = $$^MSG(851)
	}
	
	if 'ER do GOTO^DBSMACRO("END")
	
	quit
VP3(RecordDBSDOM fDBSDOM) //
	type public String V, X
	
	type String HDR
	
	quit:(X.isNull() ! (X = V))
	
	// If long description, split for report header
	set HDR = ""	
	if (fDBSDOM.len < X.length()), (X?1A.E1" "1E.E) do {

		type Number I, ptr
		
		set ptr = X.length() \ 2
		
		if X.extract(ptr) = " " set HDR = X.extract(1, ptr - 1)_"@"_X.extract(ptr + 1, X.length())
		else  for I = 1:1:ptr do { quit:'HDR.isNull()
			
			if X.extract(ptr + I) = " " set HDR = X.extract(1, ptr + I - 1)_"@"_X.extract(ptr + I + 1, X.length())
			else  if X.extract(ptr - I) = " " set HDR = X.extract(1, ptr - I - 1)_"@"_X.extract(ptr - I + 1, X.length())
		}
	}

	if HDR.isNull() set HDR = X
	
	set fDBSDOM.rhd = HDR
	
	quit
VP4(RecordDBSDOM fDBSDOM) //
	type public String V, X
	
	quit:(X.isNull() ! (X = V))
	
	type RecordDBCTLDVFM dvfm = Db.getRecord("DBCTLDVFM", "TYP=:X", 1)
	
	do DEFAULT^DBSMACRO("DBSDOM.LEN", dvfm.len)
	do DEFAULT^DBSMACRO("DBSDOM.SIZ", dvfm.siz)
	do DEFAULT^DBSMACRO("DBSDOM.NLV", dvfm.nlv)
	do DEFAULT^DBSMACRO("DBSDOM.OPF", dvfm.opf)
	do DEFAULT^DBSMACRO("DBSDOM.IPF", dvfm.ipf)
	do DEFAULT^DBSMACRO("DBSDOM.MSK", dvfm.msk)

	do DISPLAY^DBSMACRO("ALL")
	
	quit
VP5(RecordDBSDOM fDBSDOM) //
	type public Boolean ER
	type public String RM, X
 
	quit:X.isNull()
 
	quit:(X.beginsWith("<<") & X.endsWith(">>"))
 
	quit:Db.isDefined("STBLJRNFUNC", "FUNC=:X")
 
	if (X.length() > fDBSDOM.len) do { quit
 
		set ER = 1
		// Maximum length allowed - ~p1
		set RM = $$^MSG(1690, fDBSDOM.len)
	}
 
	if ((fDBSDOM.typ = "D") ! (fDBSDOM.typ = "C")) do {
 
		type String retval
 
		// Validate format - will return ER/RM if bad
		set retval = $$INT^%ZM(X, fDBSDOM.typ)
	}
 
	quit
VP6(RecordDBSDOM fDBSDOM) //
	type public Boolean ER
	type public String RM, X
 
	quit:X.isNull()
 
	quit:(X.beginsWith("<<") & X.endsWith(">>"))
 
	quit:Db.isDefined("STBLJRNFUNC", "FUNC=:X")
 
	if (X.length() > fDBSDOM.len) do { quit
 
		set ER = 1
		// Maximum length allowed - ~p1
		set RM = $$^MSG(1690, fDBSDOM.len)
	}
 
	if ((fDBSDOM.typ = "D") ! (fDBSDOM.typ = "C")) do {
 
		type String retval
 
		// Validate format - will return ER/RM if bad
		set retval = $$INT^%ZM(X, fDBSDOM.typ)
	}
 
	quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordDBSDOM fDBSDOM
 do VPR(.fDBSDOM)
 do VDA1(.fDBSDOM)
 do ^DBSPNT()
 quit

VW(RecordDBSDOM fDBSDOM)
 do VDA1(.fDBSDOM)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordDBSDOM fDBSDOM)
 do VDA1(.fDBSDOM)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordDBSDOM fDBSDOM
 do VDA1(.fDBSDOM)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordDBSDOM fDBSDOM
 if sn="DBSDOM" do vSET1(.fDBSDOM,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordDBSDOM fDBSDOM,di,X)
 do fDBSDOM.setAuditFlag(1)
 set fDBSDOM.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordDBSDOM fDBSDOM
 if fid="DBSDOM" quit $$vREAD1(.fDBSDOM,di)
 quit ""
vREAD1(RecordDBSDOM fDBSDOM,di)
 quit fDBSDOM.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
