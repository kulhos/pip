DBS2PSL3(RecordDBTBL2 dbtbl2)	// DBS - U - V7.0 - PSL Screen compiler
	/*
	       ORIG:  CHIANG - 1/15/86
	       DESC:  CHECK VALID SCREEN ID
	   I18N=QUIT: Exculded from I18N standards.

	  ---------- Revision History -------------------------------------------

          07/27/05 - SkariahV- CR16679
	             Removed #WARN and #OPTIMIZE directives.
	

	   12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	   10/02/02  CHENARDP - 45497
		     Converted to PSL
		     
	  -----------------------------------------------------------------------

	*/
	type String I,SAVC,SAVD,X
	type Public String %OFF,%TIM,AR,BLD,C,C1,D,ER,EXTSID,FID,L,OM,PFID,Q,QUIT,SAVT,SID,TMP(),VNEW(),VSAV(),X41
	
	set SAVD=D set SAVC=C

	kill BLD,TMP(998),TMP(999)
	set EXTSID=SID

	// Data entry pre/post processor
	kill OM
	type DbSet ds=Db.selectDbSet("DBTBL2PP","LIBS='SYSDEV' AND SID=:SID and SEQ=0 and PSEQ between 1 and 20")
	if 'ds.isEmpty() do {
		while ds.next() do {
			type String code,pseq
			type RecordDBTBL2PP dbtbl2pp=ds.getRecord("DBTBL2PP")
			set pseq=dbtbl2pp.pseq
			set code=dbtbl2pp.code
			set OM(pseq)=code
			}  // while ...

		do PPLIB^DBS2PSL4(.OM)	// parse for PP Libs
		
		set TMP(998,1)="VDEPRE("_vobjlst("formal")_")  // Data Entry Pre-processor" 
		set TMP(998,2)=" "
		set X="" for I=3:1 set X=$O(OM(X)) quit:X=""  set TMP(998,I)=OM(X)
		}  //isEmpty

	kill OM
	type DbSet ds1=Db.selectDbSet("DBTBL2PP","LIBS='SYSDEV' AND SID=:SID and SEQ=0 and PSEQ between 21 and 40")
	if 'ds1.isEmpty() do {
		while ds1.next() do {
			new code,pseq
			type RecordDBTBL2PP dbtbl2pp=ds1.getRecord("DBTBL2PP")
			set pseq=dbtbl2pp.pseq
			set code=dbtbl2pp.code
			set OM(pseq)=code
			}  // while ...
	
		do PPLIB^DBS2PSL4(.OM)	// parse for PP Libs
		
		set X="" for I=1:1 set X=$O(OM(X)) quit:X=""  set TMP(999,I)=OM(X)
		}  // is Empty

	kill OM

	if Db.isDefined("DBTBL2PP","LIBS=:%Library,SID=:SID,SEQ=0,PSEQ=101") do { 
		do SUBVLOD(.dbtbl2)
		}

	else  do {  quit:ER
		do ^DBSREL if ER do ERR^DBSBLD quit
		set L=0 set FID=PFID do FLD^DBSBLD
		set AR=""
		}


	if dbtbl2.repeat set VNEW(1)=" do VLOD("_vobjlst("actual")_")"

	set %TIM=$$TIM^%ZM
	set C=" //" set QUIT=" quit"
	if dbtbl2.repeat do {
		set X41=" //" if SAVT set X41=" for I="_(SAVT+1)_":1:%MAX set %TAB(I)="_Q_Q
		set C1=" kill VSCRPP,REQ,%TAB,vtab,%MOD,%MODOFF set %MODOFF="_%OFF
		}
	else  set X41=" // "


	if $D(BLD(2)),$P(BLD(2)," ;",1)="EXEC" set BLD(2)="VLOD("_vobjlst("formal")_") // Load data from disc - %O = (1-5)"
	if dbtbl2.repeat set BLD(2.5)=" if '$D(%REPEAT) set %REPEAT="_(23-dbtbl2.repeat)
	if dbtbl2.repeat set BLD(2.55)=" if '$D(%MODS) set %MODS=1" set VSAV(1,"%MODS")="" set VSAV(1,"%REPEAT")=""
	do ^DBS2PSL4(.dbtbl2)
	quit


SUBVLOD(RecordDBTBL2 dbtbl2)	// Substitute VLOD with user defined access section

	type Public String BLD(),VNEW(),vobjlst()
	type String OM,X
	type Number I
	
	
	kill BLD 
	set BLD(1)="VLOD("_vobjlst("formal")_") // User defined access section" 
	set BLD(1.1)=" //"
	kill OM
	type DbSet ds=Db.selectDbSet("DBTBL2PP","LIBS='SYSDEV' AND SID=:SID and SEQ=0 and PSEQ between 101 and 120")
	if 'ds.isEmpty() do {
		while ds.next() do {
			type String code,pseq
			type RecordDBTBL2PP dbtbl2pp=ds.getRecord("DBTBL2PP")
			set pseq=dbtbl2pp.pseq
			set code=dbtbl2pp.code
			set OM(pseq)=code
			}  // while ...

		do PPLIB^DBS2PSL4(.OM)	// parse for PP Libs
		set X="" for I=3:.001 set X=$O(OM(X)) quit:X=""  set BLD(I)=OM(X)
		kill OM
		if 'dbtbl2.repeat set VNEW(100)=" do VLOD("_vobjlst("actual")_")"
		}  //isEmpty
	quit
 #OPTION ResultClass ON
public String vSIG()	quit "60108^20902^Viji Skariah^3518"	// Signature - LTD^TIME^USER^SIZE
