DBARCHIVE1	
		 
	/*
	DBARCHIVE2 Builder
	
	This procedure builds DBARCHIVE2, which supports procedure DBARCHIVE.
	
	It is called from the top by ARCHIVE^DBARCHIVE to invoke the correct
	filer program ARCHIVE routine to perform archiving for a specific table.

	---- Revision History -------------------------------------------------
	07/16/2008 - RussellDS - CR30801
		* Modified to eliminate filer program and use new method syntax
		  to call archive.
		* Modified getPSLTable method to use level 0
	
	03/12/07 - RussellDS - CR26386
		   Created.

	-----------------------------------------------------------------------
	*/
	
	type String pslcode()
	
	do addcode(.pslcode(), "private DBARCHIVE2(String ARCHDIR, Number ARCHNUM, Date THRUDATE, String ARCHTBL, String KEYVALS())"_9.char()_"// Call RecordTABLE.archive() to archive data")
	do addcode(.pslcode(), " // Last compiled:  "_%CurrentDate.toString()_" "_$$TIM^%ZM_" - "_%UserName)
	do addcode(.pslcode(), "")
	do addcode(.pslcode(), " // THIS IS A COMPILED ROUTINE.  Compiled by procedure DBARCHIVE1")
	do addcode(.pslcode(), "")
	do addcode(.pslcode(), " // See DBARCHIVE1 for argument definitions")
	do addcode(.pslcode(), "")
	do addcode(.pslcode(), " type Number retVal = 0")
	do addcode(.pslcode(), "")
	
	/* Arguments for DBARCHIVE2:
	
		ARCHTBL		Archive table name
		KEYVALS()	Top key values, up to, but excluding archive key
		THRUDATE	Archive through date
	*/
	
	type ResultSet rs = Db.select("ARCHTBL", "DBUTARCHIVE", "", "ARCHTBL ASC")
	
	while rs.next() do {
		
		type Number i, KEYCNT
		type String ARCHTBL, code
		
		set ARCHTBL = rs.getCol("ARCHTBL")
		
		type PSLTable tblDes = PSL.getPSLTable(ARCHTBL, 0)
		
		set KEYCNT = tblDes.getArchiveKey()
		
		do addcode(.pslcode(), " if (ARCHTBL = """_ARCHTBL_""") do {")
		
		do addcode(.pslcode(), "  type static Record"_ ARCHTBL)
		
		// If archive key is first key, KEYVALS will not be passed as it
		// is not used
		set code = "set retVal = Record"_ ARCHTBL_".archive(ARCHDIR, ARCHNUM, THRUDATE"
		for i = 1:1:KEYCNT - 1 set code = code_", KEYVALS("_i_")"
		set code = code_")"
		
		do addcode(.pslcode(), "  "_code)
		do addcode(.pslcode(), " }")
	}
	
	do addcode(.pslcode(), "")
	do addcode(.pslcode(), " quit retVal")
	
	// Build compiled routine
	do cmpA2F^UCGM(.pslcode, "DBARCHIVE2")
	
	quit
	
addcode(String pslcode(),	// PSL code array
	String code)		// Code to insert into array
		
	type Number LINENO
	
	if code.beginsWith(" ") set code = 9.char()_code.extract(2, code.length())
	
	set LINENO = pslcode("").order(-1) + 1 	// Add to end	
	set pslcode(LINENO) = code

	quit
 #OPTION ResultClass ON
public String vSIG()	quit "61254^68517^Dan Russell^2519"	// Signature - LTD^TIME^USER^SIZE
