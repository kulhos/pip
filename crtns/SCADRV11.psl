SCADRV11	// Function/MRPC Userclass Authorization
  /*
	ORIG: kellyp - 03/04/2005
	DESC: Function/MRPC Userclass Authorization

	---- Comments --------------------------------------------------------

	Used to create and delete userclass authorization records for SCATBL5A
	(MRPC) and SCATBL3 (Function) records.
	
		ADD - Add userclass authorization
			Used by functions SCA011 (Function) and SCA012 (MRPC)
		DEL - Delete userclass aurhorization
			Used by functions SCA025 (Function) and SCA026 (MRPC)

	---- Revision History ------------------------------------------------

	   05/22/07 - BeltranA - CR26822
		Modified FILE section to get the record and not quit but 
		update scatbl3.auth=1 and then save. This will ensure 
		that the global reference for the function with authorization
		will be set to 1 and not just null.
	   
	   03/08/05 - KELLYP - CR 13664
	   	Converted to PSL.

	----------------------------------------------------------------------
 */
 
 	quit


public ADD(Number LV)	// Add authorization
	
	type String HDRMSG,OPT
	
	set OPT="A"
	
	// The following authorization will be added:
	set HDRMSG=$$^MSG(6271)
	
	do INIT
	
	quit


public DEL(Number LV)	
	
	type String HDRMSG,OPT
	
	set OPT="D"
	
	// The following authorization will be deleted:
	set HDRMSG=$$^MSG(6272)
	
	do INIT
	
	quit
	

INIT	// Initialize query screen
	type Public Boolean ER
	type Public String %FN,HDRMSG

	type Boolean SEC
	type Number CNT,I,N
	type String FNARR(),HDG,MSG(),OLNTB,PRM1,PRM2,%READ,UCLSARR(),%UX,VFMQ

	type RecordSCAU0 scau0=Db.getRecord("SCAU0","UCLS=:%UserClass")
	type RecordSCATBL scatbl=Db.getRecord("SCATBL","FN=:%FN")
	
	// Define current user's class as secure (SEC=1) or not secured (SEC=0)
	set SEC=scau0.secucls	

	// Function description
	set HDG=scatbl.desc

	do FN quit:'FNARR.data()  quit:VFMQ="Q"
	do UCLS quit:'UCLSARR.data()
	
	quit:VFMQ="Q"

	set MSG(1)=PRM1
	set MSG(2)=""
	set CNT=2
	
	set N="" 
	for  set N=FNARR(N).order() quit:N.isNull()  do MSG(N)

	set MSG(CNT+1)=""
	set MSG(CNT+2)=PRM2
	set MSG(CNT+3)=""
	set CNT=CNT+3
	
	set N=""
	for  set N=UCLSARR(N).order() quit:N.isNull()  do MSG(N)

	set %READ="@@%FN,,@HDRMSG,"
	
	for I=1:1 quit:'MSG(I).data()  set %READ=%READ_",@MSG("_I_")"

	kill OLNTB
	
	set %UX=""
	
	do ^UTLREAD quit:ER
	
	do VER
	
	quit


VER	// Page control

	type Public String VFMQ

	if VFMQ'="Q" do FILE

	do END

	quit


FILE	// File data

	type Public Number LV
	type Public String FNARR(),OPT,UCLSARR()

	type Boolean LOGIT
	type Number RPCID
	type String FID,FN,SCATBL3,SCATBL5A,UCLS,UX

	set FN=""
	set UCLS=""

	if LV=1 set FID="SCATBL3"
	if LV=5 set FID="SCATBL5A"
	
	for  set FN=FNARR(FN).order() quit:FN.isNull()  do {
		for  set UCLS=UCLSARR(UCLS).order() quit:UCLS.isNull()  do {
			
			set LOGIT=0
			
			if LV=1,OPT="A" do {		// Add func. auth.
				type RecordSCATBL3 scatbl3=Db.getRecord("SCATBL3","FN=:FN,UCLS=:UCLS",1)
				if scatbl3.getMode() set scatbl3.auth=1
				do scatbl3.save()
				set %ProcessMode=0
				set SCATBL3=""
				set LOGIT=1
				}
			else  if LV=1,OPT="D" do {	// Delete func. auth.
				if 'Db.isDefined("SCATBL3","FN=:FN,UCLS=:UCLS") quit
				if $$SECURE(UCLS) do Db.delete("SCATBL3","FN=:FN AND UCLS=:UCLS")
				set %ProcessMode=3
				set LOGIT=1
				}
			else  if LV=5,OPT="A" do {	// Add MRPC auth.
				type RecordSCATBL5A scatbl5a=Db.getRecord("SCATBL5A","RPCID=:FN,UCLS=:UCLS",1)
				if scatbl5a.getMode() quit
				do scatbl5a.save()
				set %ProcessMode=0
				set SCATBL5A=""
				set LOGIT=1
				set RPCID=FN
				}
			else  if LV=5,OPT="D" do {	// Delete MRPC auth.
				if 'Db.isDefined("SCATBL5A","RPCID=:FN,UCLS=:UCLS") quit
				if $$SECURE(UCLS) do Db.delete("SCATBL5A","RPCID=:FN AND UCLS=:UCLS")
				set %ProcessMode=3
				set LOGIT=1
				set RPCID=FN
				}
			
			if LOGIT do ^DBSLOG(FID,%ProcessMode,.UX)
			}
		}
	quit


SECURE(String UCLS)	// Check for unsecured user deleting a secure userclass

	type Public Boolean SEC

	if SEC quit 1
	
	type RecordSCAU0 scau0=Db.getRecord("SCAU0","UCLS=:UCLS")

	if 'scau0.secucls quit 1
	
	quit 0


FN	// Create function input list

	type Public Boolean ER
	type Public Number LV
	type Public String HDG,PRM1,RM
	
	type String FID
	
	if LV=1 do {
		set FID="[SCATBL]"
		set PRM1=$$DES^DBSDD("SCATBL.FN")
		}
	else  do {
		set FID="[SCATBL5]"
		set PRM1=$$DES^DBSDD("SCATBL5.RPCID")
		}
	
	do ^UTLLIST(FID,"FNARR",PRM1,HDG)
	
	if 'ER kill RM
	
	quit
	

UCLS	// Create userclass input list

	type Public Boolean ER
	type Public String HDG,PRM2,RM

	set PRM2=$$DES^DBSDD("SCAU0.UCLS")
	
	do ^UTLLIST("[SCAU0]","UCLSARR",PRM2,HDG)
	
	if 'ER kill RM

	quit

MSG(String N)	// Build messages for display

	type Public Number CNT
	type Public String MSG()

	if (MSG(CNT).length()+N.length())>79 set CNT=CNT+1
	
	set MSG(CNT)=MSG(CNT).get()_N_" "
	
	quit


ERR	
	type Public Boolean ER
	type Public String VFMQ

	set ER=1 
	do ^UTLERR
	set VFMQ="Q"

	quit


END	
	type Public String ER,RM,VFMQ

	quit:ER

	// Authorization not modified
	if VFMQ="Q" set RM=$$^MSG(312)
	// Authorization modified
	else  set RM=$$^MSG(311)
	
	set ER="W"
	
	quit
 #OPTION ResultClass ON
public String vSIG()	quit "60773^54317^Aries Beltran^4825"	// Signature - LTD^TIME^USER^SIZE
