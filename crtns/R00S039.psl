R00S039	// DBSDOMLST - User-Defined Data Types Report
	// Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:37 - pip

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN1="ALL"
	type String VIN2="ALL"

	set RID="DBSDOMLST"
	set RN="User-Defined Data Types Report"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN1")="|255||[DBSDOM]SYSSN|[SCASYS]:NOVAL||D EXT^DBSQRY||T|System Name|||||"
	set %TAB("VIN2")="|255||[DBSDOM]DOM|[DBSDOM]:NOVAL||D EXT^DBSQRY||T|User-Defined Data Type|||||"

	set %READ="IO/REQ,VIN1#0,VIN2#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN1,VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="DBSDOMLST",RN="User-Defined Data Types Report"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=ACCESS
			type String CHRSET=$$^UCIOENCD("Report","DBSDOMLST","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60											// Non-interactive
	else  do {											// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$CLEARXY^%TRMVT
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$SCR132^%TRMVT											// Switch to 132 col mode
		}

	do INIT^%ZM()


	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		if VIN1.get()="" set VIN1="ALL"
		if VIN1'="ALL" set DQQRY(SEQ)="[DBSDOM]SYSSN "_VIN1,SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DBSDOM]DOM "_VIN2,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DBSDOM") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(,)

		set VBNRINFO("PROMPTS",1)="WC2|"_"System Name"_"|VIN1|"_VIN1.get()
		set VBNRINFO("PROMPTS",2)="WC2|"_"User-Defined Data Type"_"|VIN2|"_VIN2.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="User-Defined Data Types Report"
		set VBNRINFO("PGM")="R00S039"
		set VBNRINFO("RID")="DBSDOMLST"
		set VBNRINFO("TABLES")="DBSDOM"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DBSDOM]""SYS"""
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DBSDOM]""DOM"""
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DBSDOM]SYSSN"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DBSDOM]DOM"

		set VBNRINFO("DOC",1)="The DBSDOMLST report lists the attributes associated with a user-defined data"
		set VBNRINFO("DOC",2)="type and whether or not these attributes are protected."

		do ^DBSRWBNR(IO,.VBNRINFO(,))											// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1										// Group break flags
			set VT(I)=0											// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DBSDOM.SYSSN,DBSDOM.DOM,DBSDOM.PRDES,DBSDOM.DES,DB"
	set VSELECT=VSELECT_"SDOM.PRRHD,DBSDOM.RHD,DBSDOM.PRTYP,DBSDOM.TYP,DBSD"
	set VSELECT=VSELECT_"OM.PRLEN,DBSDOM.LEN,DBSDOM.PRSIZ,DBSDOM.SIZ,DBSDOM"
	set VSELECT=VSELECT_".PRDEC,DBSDOM.DEC,DBSDOM.PRMIN,DBSDOM.MIN,DBSDOM.P"
	set VSELECT=VSELECT_"RMAX,DBSDOM.MAX,DBSDOM.PRTBL,DBSDOM.TBL,DBSDOM.PRD"
	set VSELECT=VSELECT_"FT,DBSDOM.DFT,DBSDOM.PRPTN,DBSDOM.PTN,DBSDOM.PRNLV"
	set VSELECT=VSELECT_",DBSDOM.NLV,DBSDOM.PRIPF,DBSDOM.IPF,DBSDOM.PROPF,D"
	set VSELECT=VSELECT_"BSDOM.OPF,DBSDOM.PRVLD,DBSDOM.VLD,DBSDOM.PRMSU,DBS"
	set VSELECT=VSELECT_"DOM.MSU,DBSDOM.PRMSK,DBSDOM.MSK"

	#ACCEPT DATE=02/24/2010;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DBSDOM",VWHERE,"DBSDOM.SYSSN,DBSDOM.DOM","","DQMODE=1")
	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type public String vovc1,vovc2
	set vovc1="",vovc2=""
	quit

VSAVLAST	// Save last access keys values
	type public String vovc1,vc1,vovc2,vc2
	set vovc1=vc1,vovc2=vc2
	quit


VGETDATA(String V,String VI)	//
	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35,vc36
	set vc1=V.piece(9.char(),1)											// DBSDOM.SYSSN
	set vc2=V.piece(9.char(),2)											// DBSDOM.DOM
	set vc3=V.piece(9.char(),3)											// DBSDOM.PRDES
	set vc4=V.piece(9.char(),4)											// DBSDOM.DES
	set vc5=V.piece(9.char(),5)											// DBSDOM.PRRHD
	set vc6=V.piece(9.char(),6)											// DBSDOM.RHD
	set vc7=V.piece(9.char(),7)											// DBSDOM.PRTYP
	set vc8=V.piece(9.char(),8)											// DBSDOM.TYP
	set vc9=V.piece(9.char(),9)											// DBSDOM.PRLEN
	set vc10=V.piece(9.char(),10)											// DBSDOM.LEN
	set vc11=V.piece(9.char(),11)											// DBSDOM.PRSIZ
	set vc12=V.piece(9.char(),12)											// DBSDOM.SIZ
	set vc13=V.piece(9.char(),13)											// DBSDOM.PRDEC
	set vc14=V.piece(9.char(),14)											// DBSDOM.DEC
	set vc15=V.piece(9.char(),15)											// DBSDOM.PRMIN
	set vc16=V.piece(9.char(),16)											// DBSDOM.MIN
	set vc17=V.piece(9.char(),17)											// DBSDOM.PRMAX
	set vc18=V.piece(9.char(),18)											// DBSDOM.MAX
	set vc19=V.piece(9.char(),19)											// DBSDOM.PRTBL
	set vc20=V.piece(9.char(),20)											// DBSDOM.TBL
	set vc21=V.piece(9.char(),21)											// DBSDOM.PRDFT
	set vc22=V.piece(9.char(),22)											// DBSDOM.DFT
	set vc23=V.piece(9.char(),23)											// DBSDOM.PRPTN
	set vc24=V.piece(9.char(),24)											// DBSDOM.PTN
	set vc25=V.piece(9.char(),25)											// DBSDOM.PRNLV
	set vc26=V.piece(9.char(),26)											// DBSDOM.NLV
	set vc27=V.piece(9.char(),27)											// DBSDOM.PRIPF
	set vc28=V.piece(9.char(),28)											// DBSDOM.IPF
	set vc29=V.piece(9.char(),29)											// DBSDOM.PROPF
	set vc30=V.piece(9.char(),30)											// DBSDOM.OPF
	set vc31=V.piece(9.char(),31)											// DBSDOM.PRVLD
	set vc32=V.piece(9.char(),32)											// DBSDOM.VLD
	set vc33=V.piece(9.char(),33)											// DBSDOM.PRMSU
	set vc34=V.piece(9.char(),34)											// DBSDOM.MSU
	set vc35=V.piece(9.char(),35)											// DBSDOM.PRMSK
	set vc36=V.piece(9.char(),36)											// DBSDOM.MSK
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data

	quit

VPRINT	// Print section
	type public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0										// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type public String vc1,vovc1,vc2,vovc2
	set VH0=1											// Page break
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb3!(vovc1'=vc1) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type public Number VRWOPT(),VT()
	type public String VSTATS()

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String %TIM,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL="      "_("Protection Flag")
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc3:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Description")
	set VL=VL_"".justify(48-VL.length())_($E(vc4,1,40))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc5:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Report Header")
	set VL=VL_"".justify(48-VL.length())_($E(vc6,1,40))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc7:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Type")
	set VL=VL_"".justify(48-VL.length())_($E(vc8,1,1))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc9:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Length")
	set VL=VL_"".justify(48-VL.length())_($E(vc10,1,5))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc11:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Display")
	set VL=VL_"".justify(48-VL.length())_($E(vc12,1,3))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc13:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Decimal")
	set VL=VL_"".justify(48-VL.length())_($E(vc14,1,2))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc15:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Minimum")
	set VL=VL_"".justify(48-VL.length())_($E(vc16,1,25))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc17:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Maximum")
	set VL=VL_"".justify(48-VL.length())_($E(vc18,1,25))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc19:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Table")
	set VL=VL_"".justify(48-VL.length())_($E(vc20,1,80))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc21:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Default")
	set VL=VL_"".justify(48-VL.length())_($E(vc22,1,58))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc23:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Pattern")
	set VL=VL_"".justify(48-VL.length())_($E(vc24,1,60))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc25:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Null Value")
	set VL=VL_"".justify(48-VL.length())_($E(vc26,1,20))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc27:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Input Filter")
	set VL=VL_"".justify(48-VL.length())_($E(vc28,1,40))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc29:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Output Filter")
	set VL=VL_"".justify(48-VL.length())_($E(vc30,1,40))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc31:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Validation")
	set VL=VL_"".justify(48-VL.length())_($E(vc32,1,70))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc33:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Unit of Measure")
	set VL=VL_"".justify(48-VL.length())_($E(vc34,1,1))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="                  "_($S(vc35:"Y",1:"N"))
	set VL=VL_"".justify(25-VL.length())_("Mask")
	set VL=VL_"".justify(48-VL.length())_($E(vc36,1,20))
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	if VLC+1>IOSL do VHDG0 quit:VFMQ
	do VOM
	quit


VHDG0	// Page Header
	type public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,RID,RN,VL,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc36,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit											// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+5,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM.get(),1,45)
	set VL=VL_"".justify(100-VL.length())_("Run Date:")
	set VL=VL_"".justify(110-VL.length())_($E(vrundate,1,10))
	set VL=VL_"".justify(123-VL.length())_($E(%TIM,1,8))
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_"".justify(102-VL.length())_("System:")
	set VL=VL_"".justify(110-VL.length())_($E(vsysdate,1,10))
	set VL=VL_"".justify(122-VL.length())_("Page:")
	set VL=VL_"".justify(128-VL.length())_($J(VPN,3))
	do VOM
	do VOM
	set VL=""_("System: ")
	set VL=VL_"".justify(9-VL.length())_($E(vc1,1,3))
	set VL=VL_"".justify(18-VL.length())_("Data Type: ")
	set VL=VL_"".justify(29-VL.length())_($E(vc2,1,20))
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)											// Lock report page heading

	quit


VOM	// Output print line
	type public Number AUXPTR,vcrt,vlc,VLC,VRG
	type public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {											// Non-CRT device (form feed)
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if 'AUXPTR.get() write 12.char(),!
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if vcrt<2 write VL,!											// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)										// Save in BROWSER buffer
	set VLC=VLC+1,VL=""											// Reset line buffer
	quit

	// Pre/post-processors
