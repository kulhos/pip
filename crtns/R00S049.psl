R00S049	// DBSPROCLST - List Procedure Definition
	// Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:38 - pip

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN2="ALL"

	set RID="DBSPROCLST"
	set RN="List Procedure Definition"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN2")="|255||[DBTBL25D]PROCID|[DBTBL25D]PROCID:DISTINCT:NOVAL||D EXT^DBSQRY||T|Procedure Name|||||"

	set %READ="IO/REQ,VIN2#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type Boolean VHIT
	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,RID,RN,V,VL,VLOF,VRF(),VSTATS(),vCOL,vHDG,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate

	type RecordCUVAR cuvar=Db.getRecord("CUVAR")

	set CONAM=CUVAR.conam
	set ER=0,RID="DBSPROCLST",RN="List Procedure Definition"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=ACCESS
			type String CHRSET=$$^UCIOENCD("Report","DBSPROCLST","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60											// Non-interactive
	else  do {											// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$CLEARXY^%TRMVT
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$SCR132^%TRMVT											// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DBTBL25D]CODE#2#130"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[DBTBL25D]%LIBS = ""SYSDEV""",SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DBTBL25D]PROCID "_VIN2,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DBTBL25D,DBTBL25") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Print Report Banner Page
	if cuvar.banner,'VRWOPT("NOBANNER").get(),IOTYP'="TRM",'AUXPTR.get() do {
		type String VBNRINFO(,)

		set VBNRINFO("PROMPTS",2)="WC2|"_"Procedure Name"_"|VIN2|"_VIN2.get()


		do {
			type Number SEQ
			type String VALUE,VAR,X
			set X=VWHERE
			set SEQ=""
			for  set SEQ=VBNRINFO("PROMPTS",SEQ).order() quit:SEQ=""  do {
				set VAR=VBNRINFO("PROMPTS",SEQ).piece("|",3))
				set VALUE=VBNRINFO("PROMPTS",SEQ).piece("|",4,99)
				set X=$$replace^DBSRWUTL(X,":"_VAR,"'"_VALUE_"'")
				}
			set VBNRINFO("WHERE")=X
			}

		set VBNRINFO("DESC")="List Procedure Definition"
		set VBNRINFO("PGM")="R00S049"
		set VBNRINFO("RID")="DBSPROCLST"
		set VBNRINFO("TABLES")="DBTBL25D,DBTBL25"

		set VBNRINFO("ORDERBY",1)="[SYSDEV,DBTBL25D]%LIBS"
		set VBNRINFO("ORDERBY",2)="[SYSDEV,DBTBL25D]25"
		set VBNRINFO("ORDERBY",3)="[SYSDEV,DBTBL25D]PROCID"
		set VBNRINFO("ORDERBY",4)="[SYSDEV,DBTBL25D]SEQ"


		do ^DBSRWBNR(IO,.VBNRINFO(,))											// Print banner
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VHIT = 0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:4 do {
			set (vh(I),VD(I))=0,vs(I)=1										// Group break flags
			set VT(I)=0											// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST

	set VSELECT=""
	set VSELECT=VSELECT_"DBTBL25D.%LIBS,DBTBL25D.PROCID,DBTBL25D.SEQ,DBTBL2"
	set VSELECT=VSELECT_"5.DES,DBTBL25.LTD,DBTBL25.TIME,DBTBL25.PGM,DBTBL25"
	set VSELECT=VSELECT_".USER,DBTBL25.PFID,DBTBL25.RPCVAR,DBTBL25D.CODE"

	#ACCEPT DATE=02/24/2010;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DBTBL25D,DBTBL25",VWHERE,"DBTBL25D.%LIBS,DBTBL25D.PROCID,DBTBL25D.SEQ","","DQMODE=1")
	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
	type Boolean VSKIPREC = 0
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VFPOST quit:(VFMQ ! VSKIPREC)  set VHIT = 1
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT('VHIT)

	quit


VINILAST	// Initialize last access key values
	type public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11
	set vc1=V.piece(9.char(),1)											// DBTBL25D.%LIBS
	set vc2=V.piece(9.char(),2)											// DBTBL25D.PROCID
	set vc3=V.piece(9.char(),3)											// DBTBL25D.SEQ
	set vc4=V.piece(9.char(),4)											// DBTBL25.DES
	set vc5=V.piece(9.char(),5)											// DBTBL25.LTD
	set vc6=V.piece(9.char(),6)											// DBTBL25.TIME
	set vc7=V.piece(9.char(),7)											// DBTBL25.PGM
	set vc8=V.piece(9.char(),8)											// DBTBL25.USER
	set vc9=V.piece(9.char(),9)											// DBTBL25.PFID
	set vc10=V.piece(9.char(),10)											// DBTBL25.RPCVAR
	set vc11=V.piece(9.char(),11)											// DBTBL25D.CODE
	quit

	// User-defined pre/post-processor code

VFPOST	// FETCH post-processor

	// Fetch post-processor
	// Patch to deal with tabs in PSL code
	type Public String V,vc11
	set vc11=V.piece($C(9),11,99)
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0,vs(4)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data

	quit

VPRINT	// Print section
	type public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1,vskp(4)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0										// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	if 'vskp(4).get() do VDTL4 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(4)
	type public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3,vb4
	set (vb1,vb2,vb3,vb4)=0
	if vb1!(vovc1'=vc1) set vs(3)=0,vh(3)=0,VD(1)=0,vb2=1,vb3=1,vb4=1,VH0=1
	if vb3!(vovc2'=vc2) set vs(4)=0,vh(4)=0,VD(3)=0,vb4=1,VH0=1
	quit

VSUM	// Report Group Summary
	type public Number VFMQ,vs()
	if 'vs(4) set vs(4)=1 do stat^DBSRWUTL(4)
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type public Number VRWOPT(),VT()
	type public String VSTATS()

	set VT(4)=VT(4)+1
	quit

VDTL4	// Detail
	type public String %TIM,IOSL,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VPN,VRG,VT(),vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vovc1,vovc2,vovc3,vrundate,vsysdate

	if VLC+1>IOSL do VHDG0 quit:VFMQ

	set VL=" "_($E(vc11,1,130))
	do VOM
	quit


VHDG0	// Page Header
	type public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,RID,RN,VL,vc1,vc10,vc11,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vovc1,vovc2,vovc3,vrundate,vsysdate
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit											// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+8,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM.get(),1,45)
	set VL=VL_"".justify(100-VL.length())_("Run Date:")
	set VL=VL_"".justify(110-VL.length())_($E(vrundate,1,10))
	set VL=VL_"".justify(123-VL.length())_($E(%TIM,1,8))
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_"".justify(102-VL.length())_("System:")
	set VL=VL_"".justify(110-VL.length())_($E(vsysdate,1,10))
	set VL=VL_"".justify(122-VL.length())_("Page:")
	set VL=VL_"".justify(128-VL.length())_($J(VPN,3))
	do VOM
	do VOM
	set VL=" "_("Procdure Name: ")
	set VL=VL_"".justify(16-VL.length())_($E(vc2,1,12))
	set VL=VL_"".justify(30-VL.length())_("Description: ")
	set VL=VL_"".justify(43-VL.length())_($E(vc4,1,40))
	set VL=VL_"".justify(97-VL.length())_("Date: ")
	set VL=VL_"".justify(103-VL.length())_($J($$DAT^%ZM(vc5),10))
	set VL=VL_"".justify(115-VL.length())_($J($$TIM^%ZM(vc6),10))
	do VOM
	set VL="                                  "_("Routine: ")
	set VL=VL_"".justify(43-VL.length())_($E(vc7,1,8))
	set VL=VL_"".justify(97-VL.length())_("User: ")
	set VL=VL_"".justify(103-VL.length())_($E(vc8,1,20))
	do VOM
	set VL="                             "_("Access Files:")
	set VL=VL_"".justify(43-VL.length())_($E(vc9,1,50))
	do VOM
	set VL="                           "_("Variable Names:")
	set VL=VL_"".justify(43-VL.length())_($E(vc10,1,80))
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)											// Lock report page heading

	quit


VOM	// Output print line
	type public Number AUXPTR,vcrt,vlc,VLC,VRG
	type public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {											// Non-CRT device (form feed)
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if 'AUXPTR.get() write 12.char(),!
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if vcrt<2 write VL,!											// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)										// Save in BROWSER buffer
	set VLC=VLC+1,VL=""											// Reset line buffer
	quit

	// Pre/post-processors
