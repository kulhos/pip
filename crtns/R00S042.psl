R00S042	// DBSFILLST - Data Dictionary Listing
	// Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:38 - pip

	type public Number ER=0
	type public Number vbatchq
	type public String IO,RM,VRWOPT()
	type public String DOC,FID,SORT,vudwhere
	type Number OLNTB
	type String %READ,RID,RN,%TAB,VFMQ
	type String VIN2="ALL"

	set RID="DBSFILLST"
	set RN="Data Dictionary Listing"
	if IO.get()="" set IO=$I

	do INIT^%ZM()

	do VPREBQ quit:VFMQ.get()											// Pre-processor (before query)

	set %TAB("IO")=$$IO^SCATAB
	set %TAB("VIN2")="|255||[DBTBL1D]FID|[DBTBL1]:NOVAL||D EXT^DBSQRY||T|File Name|||||"

	set %READ="IO/REQ,VIN2#0,"

	// Skip device prompt option
	if VRWOPT("NOOPEN").get() set %READ=%READ.piece(",",2,99)

	set VFMQ=""
	if %READ'="" do { quit:VFMQ.get()="Q"
		set OLNTB=30
		set %READ="@RN/CEN#1,,"_%READ
		do ^UTLREAD
		}

	if 'vbatchq.get() do V0
	quit

V0	// External report entry point

	type public Number AUXPTR,ER,VTBLNAM
	type public String IO,IOPAR,IOSL,IOTYP,%MSKD,RM,VDISTKEY,VRWOPT()
	type public String DOC,FID,SORT,vudwhere
	type public String VIN2
	type Number vcrt,VD(),VFMQ,vh(),vI,vlc,VLC,VNEWHDR,VOFFLG,VPN,VR,VRG,vs(),VSEQ,VT()
	type String VWHERE
	type Literal String VSELECT
	type String %TIM,CONAM,DC,DC2,RID,RN,VL,VLOF,VRF(),VSTATS(),ZEXTRA,ZZLOC,vCOL,vHDG,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,vorder,vovc1,vovc2,vovc3,vrundate,vsysdate

	set CONAM=CUVAR.conam
	set ER=0,RID="DBSFILLST",RN="Data Dictionary Listing"
	set VL=""

	use 0 if 'VRWOPT("NOOPEN").get() do { quit:ER
		if 'VRWOPT("IOPAR").get().isNull() set IOPAR = VRWOPT("IOPAR")
		else  if ((IOTYP.get()="RMS")!(IOTYP.get()="PNTQ")),('IOPAR.get().isLike("%/OCHSET=%")),$$VALID^%ZRTNS("UCIOENCD") do {
			// Accept warning if ^UCIOENCD does not exist
			#ACCEPT Date=07/26/06; Pgm=RussellDS; CR=22121; Group=ACCESS
			type String CHRSET=$$^UCIOENCD("Report","DBSFILLST","V0","*")
			if 'CHRSET.isNull() set IOPAR = IOPAR_"/OCHSET="_CHRSET
		}
		do OPEN^SCAIO
	}
	set vcrt=(IOTYP="TRM")
	if 'vcrt set IOSL=60											// Non-interactive
	else  do {											// Interactive
		do TERM^%ZUSE(IO,"WIDTH=133")
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$CLEARXY^%TRMVT
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		write $$SCR132^%TRMVT											// Switch to 132 col mode
		}

	do INIT^%ZM()

	set vCOL="[DBTBL1D]DI#1#80\[DBTBL1D]NOD#22#10,[DBTBL1D]POS#33#2,[DBTBL1D]DES#36#40,[DBTBL1D]LEN#77#2,[DBTBL1D]TYP#81#3,[DBTBL1D]DEC#86#2,[DBTBL1D]REQ#90#1"

	// Build WHERE clause to use for dynamic query
	do {
		type Number SEQ=1
		type String DQQRY(),FROM
		set DQQRY(SEQ)="[DBTBL1D]%LIBS=""SYSDEV""",SEQ=SEQ+1
		if VIN2.get()="" set VIN2="ALL"
		if VIN2'="ALL" set DQQRY(SEQ)="[DBTBL1D]FID "_VIN2,SEQ=SEQ+1
		set FROM=$$DQJOIN^SQLCONV("DBTBL1D,DBTBL1") quit:ER
		set VWHERE=$$WHERE^SQLCONV(.DQQRY,"")
		}

	// Initialize variables
	set (vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35)=""
	set (VFMQ,vlc,VLC,VOFFLG,VPN,VRG)=0
	set VNEWHDR=1
	set VLOF=""
	set %TIM=$$TIM^%ZM
	set vrundate=%CurrentDate.toString(),vsysdate=%SystemDate.toString()

	do {
		type Number I,J,K
		for I=0:1:3 do {
			set (vh(I),VD(I))=0,vs(I)=1										// Group break flags
			set VT(I)=0											// Group count
			for J=1:1:0 do {
				for K=1:1:3 set VT(I,J,K)=""	// Initialize function stats
				}
			}
		}

	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data
	set vh(0)=0

	// Run report directly
	do VINILAST
	do VOPRE if VFMQ do VEXIT(0) quit

	set VSELECT=""
	set VSELECT=VSELECT_"DBTBL1D.%LIBS,DBTBL1D.FID,DBTBL1D.DI,DBTBL1.DES,DB"
	set VSELECT=VSELECT_"TBL1.GLOBAL,DBTBL1.FILETYP,DBTBL1.RECTYP,DBTBL1.DE"
	set VSELECT=VSELECT_"L,DBTBL1.FSN,DBTBL1.FDOC,DBTBL1.PARFID,DBTBL1.ACCK"
	set VSELECT=VSELECT_"EYS,DBTBL1.DFTDES,DBTBL1.QID1,DBTBL1D.NOD,DBTBL1D."
	set VSELECT=VSELECT_"POS,DBTBL1D.DES,DBTBL1D.LEN,DBTBL1D.TYP,DBTBL1D.DE"
	set VSELECT=VSELECT_"C,DBTBL1D.REQ,DBTBL1.NETLOC,DBTBL1D.CMP,DBTBL1D.TB"
	set VSELECT=VSELECT_"L,DBTBL1D.DFT,DBTBL1D.PTN,DBTBL1D.MIN,DBTBL1D.MAX,"
	set VSELECT=VSELECT_"DBTBL1D.XPR,DBTBL1D.XPO,DBTBL1D.DEPREP,DBTBL1D.DEP"
	set VSELECT=VSELECT_"OSTP,DBTBL1D.MDD,DBTBL1D.DOM,DBTBL1D.SFD"

	set VWHERE=""
	if 'vorder.exists() set vorder="DBTBL1D.%LIBS,DBTBL1D.FID,DBTBL1D.DI"
	if vudwhere.exists() set VWHERE=vudwhere
	#ACCEPT DATE=02/24/2010;PGM=Report Writer Generator;CR=20967
	type ResultSet rwrs=Db.select(VSELECT,"DBTBL1D,DBTBL1",VWHERE,vorder,"","DQMODE=1")
	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if ER.get() use 0 write $$MSG^%TRMVT(RM.get(),"",1)	// Debug Mode
	if rwrs.isEmpty() do VEXIT(1) quit
	while rwrs.next() do { quit:VFMQ
		type String V,VI
		set V=rwrs.getRow().toString()
		set VI=""
		do VGETDATA(V,VI)
		do VPRINT quit:VFMQ
		do VSAVLAST
		}
	do VEXIT(0)

	quit


VINILAST	// Initialize last access key values
	type public String vovc1,vovc2,vovc3
	set vovc1="",vovc2="",vovc3=""
	quit

VSAVLAST	// Save last access keys values
	type public String vovc1,vc1,vovc2,vc2,vovc3,vc3
	set vovc1=vc1,vovc2=vc2,vovc3=vc3
	quit


VGETDATA(String V,String VI)	//
	type public String vc1,vc2,vc3,vc4,vc5,vc6,vc7,vc8,vc9,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35
	set vc1=V.piece(9.char(),1)											// DBTBL1D.%LIBS
	set vc2=V.piece(9.char(),2)											// DBTBL1D.FID
	set vc3=V.piece(9.char(),3)											// DBTBL1D.DI
	set vc4=V.piece(9.char(),4)											// DBTBL1.DES
	set vc5=V.piece(9.char(),5)											// DBTBL1.GLOBAL
	set vc6=V.piece(9.char(),6)											// DBTBL1.FILETYP
	set vc7=V.piece(9.char(),7)											// DBTBL1.RECTYP
	set vc8=V.piece(9.char(),8)											// DBTBL1.DEL
	set vc9=V.piece(9.char(),9)											// DBTBL1.FSN
	set vc10=V.piece(9.char(),10)											// DBTBL1.FDOC
	set vc11=V.piece(9.char(),11)											// DBTBL1.PARFID
	set vc12=V.piece(9.char(),12)											// DBTBL1.ACCKEYS
	set vc13=V.piece(9.char(),13)											// DBTBL1.DFTDES
	set vc14=V.piece(9.char(),14)											// DBTBL1.QID1
	set vc15=V.piece(9.char(),15)											// DBTBL1D.NOD
	set vc16=V.piece(9.char(),16)											// DBTBL1D.POS
	set vc17=V.piece(9.char(),17)											// DBTBL1D.DES
	set vc18=V.piece(9.char(),18)											// DBTBL1D.LEN
	set vc19=V.piece(9.char(),19)											// DBTBL1D.TYP
	set vc20=V.piece(9.char(),20)											// DBTBL1D.DEC
	set vc21=V.piece(9.char(),21)											// DBTBL1D.REQ
	set vc22=V.piece(9.char(),22)											// DBTBL1.NETLOC
	set vc23=V.piece(9.char(),23)											// DBTBL1D.CMP
	set vc24=V.piece(9.char(),24)											// DBTBL1D.TBL
	set vc25=V.piece(9.char(),25)											// DBTBL1D.DFT
	set vc26=V.piece(9.char(),26)											// DBTBL1D.PTN
	set vc27=V.piece(9.char(),27)											// DBTBL1D.MIN
	set vc28=V.piece(9.char(),28)											// DBTBL1D.MAX
	set vc29=V.piece(9.char(),29)											// DBTBL1D.XPR
	set vc30=V.piece(9.char(),30)											// DBTBL1D.XPO
	set vc31=V.piece(9.char(),31)											// DBTBL1D.DEPREP
	set vc32=V.piece(9.char(),32)											// DBTBL1D.DEPOSTP
	set vc33=V.piece(9.char(),33)											// DBTBL1D.MDD
	set vc34=V.piece(9.char(),34)											// DBTBL1D.DOM
	set vc35=V.piece(9.char(),35)											// DBTBL1D.SFD
	quit

	// User-defined pre/post-processor code

VOPRE	// OPEN pre-processor

	type public String SORT,vorder
	if SORT.get()'="" set vorder="DBTBL1D.FID,"_SORT_",DBTBL1D.DI"
	quit

VPREBQ	// Pre-processor (before query)

	//Incoming=DOC,FID,SORT,vudwhere
	type public Number DOC
	type public String SORT,vudwhere
	set DOC=0,SORT=""
	set vudwhere=""
	quit

VBRSAVE(Number LINE,String DATA)	// Save for report browser
	type RecordTMPRPTBR tmprptbr=Class.new("RecordTMPRPTBR")
	set tmprptbr.jobno=%ProcessID
	set tmprptbr.lineno=LINE
	set tmprptbr.pageno=0
	set tmprptbr.seq=0
	set tmprptbr.data=DATA
	do tmprptbr.bypassSave()
	quit

VEXIT(NOINFO)	// Exit from report
	type public Number IOSL,vcrt,VFMQ,vh(),VLC,VPN,VRWOPT,VSTATS()
	type public String IO,VTBLNAM
	type Number I,PN,vs(),z
	type String VL=""
	set vs(1)=0,vs(2)=0,vs(3)=0
	if 'VFMQ do VSUM
	if 'vh(0) do VHDG0
	if 'VFMQ do {
		// No information available to display
		if NOINFO=1 set VL=$$^MSG(4655) do VOM
		if vcrt set VL="" for z=VLC+1:1:IOSL do VOM

		if 'VTBLNAM.exists() do {
			set vs(2)=0
			}
		}

	if 'VFMQ,vcrt set PN=-1 do ^DBSRWBR(2)
	if 'VRWOPT("NOCLOSE").get() do CLOSE^SCAIO
	do Db.delete("TMPRPTBR","JOBNO=:%ProcessID")										// Report browser data

	quit

VPRINT	// Print section
	type public Number VD(),VFMQ,VH0,vh(),VNEWHDR,VR,VRG,VRWOPT,VSEQ
	type Number vskp()

	if VRWOPT("NODTL").get() set vskp(1)=1,vskp(2)=1,vskp(3)=1	// Skip detail
	do VBREAK
	do VSUM quit:VFMQ

	if VH0.get() set vh(0)=0,VNEWHDR=1 kill VH0										// Page Break
	if 'vh(0) do VHDG0 quit:VFMQ
	do VHDG3 quit:VFMQ
	if 'vskp(3).get() do VDTL3 quit:VFMQ
	do VSTAT
	quit

VBREAK	//
	type public Number VD(),vh(),VH0,vs(),VT()
	quit:'VT(3)
	type public String vc1,vovc1,vc2,vovc2,vc3,vovc3
	type Number vb1,vb2,vb3
	set (vb1,vb2,vb3)=0
	if vb1!(vovc1'=vc1) set vs(2)=0,vh(2)=0,VD(1)=0,vb2=1,vb3=1
	if vb2!(vovc2'=vc2) set vs(3)=0,vh(3)=0,VD(2)=0,vb3=1
	quit

VSUM	// Report Group Summary
	type public Number VFMQ,vs()
	if 'vs(3) set vs(3)=1 do stat^DBSRWUTL(3)
	if 'vs(2) set vs(2)=1 do stat^DBSRWUTL(2)
	quit

VSTAT	// Data field statistics
	type public Number VRWOPT(),VT()
	type public String VSTATS()

	set VT(3)=VT(3)+1
	quit

VHDG3	// Group Header
	type public String %MSKD,%TIM,CONAM,DC,DC2,DOC,ER,FID,IOSL,RID,RN,SORT,V,VFMQ,VL,VLC,VNEWHDR,VO,VOFFLG,VPN,VRG,ZEXTRA,ZZLOC,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,vcrt,verror,vh(),vorder,vovc1,vovc2,vovc3,vrundate,vsysdate,vudwhere

	quit:vh(3)  set vh(3)=1											// Print flag
	if VLC+11>IOSL do VHDG0 quit:VFMQ

	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	set VL=$E(vc2,1,70)
	do VOM
	set VL="             "_($E(vc4,1,31))
	set VL=VL_"".justify(45-VL.length())_("Global:")
	set VL=VL_"".justify(53-VL.length())_($E(vc5,1,8))
	set VL=VL_"".justify(63-VL.length())_("File Type:")
	set VL=VL_"".justify(74-VL.length())_($J(vc6,1))
	set VL=VL_"".justify(77-VL.length())_("Record Type:")
	set VL=VL_"".justify(90-VL.length())_($J(vc7,2))
	set VL=VL_"".justify(94-VL.length())_("Delimiter:")
	set VL=VL_"".justify(105-VL.length())_($J(vc8,3))
	set VL=VL_"".justify(110-VL.length())_("Location:")
	do VP1 quit:VFMQ!verror.get()  set V=$E(ZZLOC,1,11)
	set VL=VL_"".justify(120-VL.length())_V
	do VOM
	set VL="                                         "_("Short Name:")
	set VL=VL_"".justify(53-VL.length())_($E(vc9,1,8))
	set VL=VL_"".justify(64-VL.length())_("File Doc:")
	set VL=VL_"".justify(74-VL.length())_($E(vc10,1,11))
	set VL=VL_"".justify(89-VL.length())_("Supertype File Name:")
	set VL=VL_"".justify(110-VL.length())_($E(vc11,1,12))
	do VOM
	set VL="                                       "_("Primary Keys:")
	set VL=VL_"".justify(53-VL.length())_($E(vc12,1,78))
	do VOM
	set VL="                                      "_("Look-up Table:")
	set VL=VL_"".justify(53-VL.length())_($E(vc13,1,78))
	do VOM
	set VL="                                              "_("Query:")
	set VL=VL_"".justify(53-VL.length())_($E(vc14,1,78))
	do VOM
	set VL="------------------------------------------------------------------------------------------------------------------------------------"
	do VOM
	set V="--------------------------------------------------------------------------------" do VP2 quit:VFMQ!verror.get()  set VL="                               "_V
	do VOM
	do VP3 quit:VFMQ!verror.get()  set V=$E(DC2,1,80) set VL="                               "_V
	if 'VL.translate(" ").isNull() do VOM
	set V="--------------------------------------------------------------------------------" do VP4 quit:VFMQ!verror.get()  set VL="                               "_V
	if 'VL.translate(" ").isNull() do VOM
	quit

VDTL3	// Detail
	type public String %TIM,DC,DC2,DOC,FID,IOSL,SORT,V,VD(),VFMQ,VL,VLC,VO,VOFFLG,VRG,VT(),ZEXTRA,ZZLOC,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,verror,vh(),vorder,vovc1,vovc2,vovc3,vrundate,vsysdate,vudwhere

	if VLC+2>IOSL do VHDG0 quit:VFMQ  set vh(3)=0 do VHDG3 quit:VFMQ

	set VL=$E(vc3,1,80)
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	set V=vc15,VO=V do VP5 quit:VFMQ!verror.get()  set V=$E(V,1,10) set VL="                     "_V
	set VL=VL_"".justify(32-VL.length())_($J(vc16,2))
	set VL=VL_"".justify(35-VL.length())_($E(vc17,1,40))
	set VL=VL_"".justify(76-VL.length())_($J(vc18,2))
	set VL=VL_"".justify(80-VL.length())_($E(vc19,1,3))
	set VL=VL_"".justify(85-VL.length())_($J(vc20,2))
	set VL=VL_"".justify(89-VL.length())_($S(vc21:"Y",1:"N"))
	do VP6 quit:VFMQ!verror.get()  set V=$E(ZEXTRA,1,40) do VP7 quit:VFMQ!verror.get()
	set VL=VL_"".justify(91-VL.length())_V
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	do VP8 quit:VFMQ!verror.get()  set V=$E(DC,1,80) set VL="                               "_V
	if VLC+2>IOSL do VHDG0 quit:VFMQ
	if 'VL.translate(" ").isNull() do VOM
	quit


VHDG0	// Page Header
	type public Number ER,IOSL,vcrt,verror,VFMQ,vh(),VLC,VNEWHDR,VPN,VRG,VRWOPT()
	type public String %MSKD,%TIM,CONAM,DC,DC2,DOC,FID,RID,RN,SORT,VL,ZEXTRA,ZZLOC,vc1,vc10,vc11,vc12,vc13,vc14,vc15,vc16,vc17,vc18,vc19,vc2,vc20,vc21,vc22,vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc3,vc30,vc31,vc32,vc33,vc34,vc35,vc4,vc5,vc6,vc7,vc8,vc9,vorder,vovc1,vovc2,vovc3,vrundate,vsysdate,vudwhere
	type Number PN,V,VO
	if VRWOPT("NOHDR").get() quit											// Skip page header
	set vh(0)=1,VRG=0
	if VL'="" do VOM
	if vcrt,VPN>0 do { quit:VFMQ!'VNEWHDR
		type Number PN,X
		set VL=""
		for X=VLC+1:1:IOSL do VOM
		set PN=VPN
		do ^DBSRWBR(2)
		set VLC=0
		quit:VFMQ
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if VNEWHDR write $$CLEARXY^%TRMVT
		else  set VLC=VLC+5,VPN=VPN+1
		}

	set ER=0,VPN=VPN+1,VLC=0

	set VL=$E(CONAM.get(),1,45)
	set VL=VL_"".justify(100-VL.length())_("Run Date:")
	set VL=VL_"".justify(110-VL.length())_($E(vrundate,1,10))
	set VL=VL_"".justify(123-VL.length())_($E(%TIM,1,8))
	do VOM
	set VL=RN_"  ("_RID_")"
	set VL=VL_"".justify(102-VL.length())_("System:")
	set VL=VL_"".justify(110-VL.length())_($E(vsysdate,1,10))
	set VL=VL_"".justify(122-VL.length())_("Page:")
	set VL=VL_"".justify(128-VL.length())_($E($J(VPN,3),1,3))
	do VOM
	do VOM
	set VL="Data Item            Field     Pos Description                             Size Type Dec Req"
	do VOM
	set VL="===================================================================================================================================="
	do VOM

	set VNEWHDR=0
	if vcrt set PN=VPN do ^DBSRWBR(2,1)											// Lock report page heading

	quit


VOM	// Output print line
	type public Number AUXPTR,vcrt,vlc,VLC,VRG
	type public String IO,VL

	use IO

	// Advance to a new page
	if 'VLC,'vcrt do {											// Non-CRT device (form feed)
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		if 'AUXPTR.get() write 12.char(),!
		#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
		else  write $$PRNTFF^%TRMVT,!
		set $Y=1
		}

	#ACCEPT Date=10/13/2008;Pgm=RussellDS;CR=35741;Group=READ
	if vcrt<2 write VL,!											// Output line buffer
	if vcrt set vlc=vlc+1 do VBRSAVE(vlc,VL)										// Save in BROWSER buffer
	set VLC=VLC+1,VL=""											// Reset line buffer
	quit

	// Pre/post-processors

VP1	// Column pre-processor - Variable: ZZLOC

	type public String vc22
	type public String NETLOC,ZZLOC
	// I18N=OFF: Excluded from I18N standards.
	set ZZLOC=""
	if vc22+0=0 set ZZLOC="Server Only" quit 
	if vc22=1 set ZZLOC="Client Only" quit 
	if vc22=2 set ZZLOC="Client and Server" quit 
	// I18N=ON
	quit

VP2	// Column post-processor - @CHR(-,80)

	type public String DOC,V,VL
	if 'DOC set (V,VL)=""
	quit

VP3	// Column pre-processor - Variable: DC2

	type public String vc2
	type public Number DOC,IOSL,verror,VFMQ,VLC
	type public String DC2,VL
	type String FID
	if 'DOC set DC2="" quit
	set verror=0
	set FID=vc2
	// I18N=OFF
	type ResultSet rs=Db.select("DES","DBTBL1TBLDOC","%LIBS='SYSDEV' AND FID=:FID")
	if 'rs.isEmpty() do {
		while rs.next() do { quit:verror
			set DC2=rs.getRow()
			set VL=$J("",32)_DC2
			if VLC+1>IOSL do {
				do VHDG0
				if VFMQ set verror=1
				}
			else  do VOM
			}
		}
	set DC2=""
	quit

VP4	// Column post-processor - @CHR(-,80)

	type public String DOC,V,VL
	if 'DOC set (V,VL)=""
	quit

VP5	// Column pre-processor - [SYSDEV,DBTBL1D]NOD

	type public String V
	if V="" quit 
	if V["*" set V=V.justify(10) quit 
	set V=V.justify(10)
	quit

VP6	// Column pre-processor - Variable: ZEXTRA

	type public String ZEXTRA
	set ZEXTRA=""
	quit

VP7	// Column post-processor - Variable: ZEXTRA

	type public String vc23,vc24,vc25,vc26,vc27,vc28,vc29,vc30,vc31,vc32,vc33,vc34,vc35
	type public Number verror
	type public String VL,ZEXTRA
	type Number ZI
	type String CODE(),TYPE,Z
	set verror=0
	set ZEXTRA=""
	set TYPE="Computed,Table,Default,Pattern,Minimum,Maximum,Scr_pre,Scr_pos,"
	set TYPE=TYPE_"Entry_pre,Entry_pos,MDD,DOMAIN"
	set CODE(1)=vc23
	set CODE(2)=vc24
	set CODE(3)=vc25
	set CODE(4)=vc26
	set CODE(5)=vc27
	set CODE(6)=vc28
	set CODE(7)=vc29
	set CODE(8)=vc30
	set CODE(9)=vc31
	set CODE(10)=vc32
	set CODE(11)=vc33
	set CODE(12)=vc34
	set CODE(13)=""
	//I18N=OFF
	if vc35'="" do {
		set Z=vc35
		set Z=" Sub-field "_Z.piece("~",2).char()_Z.piece("~",4)
		set CODE(13)=Z.translate(0.char(),"")
		}
	//I18N=ON
	for ZI=1:1:13 set Z=CODE(ZI) if Z'="" do { quit:verror
		type String X
		set X="  "_TYPE.piece(",",ZI).justify(9)_": "_Z
		if VL'="",$L(X)>41 do ZPNT quit:verror 	
		if VL="" set VL=$J("",89)
		set VL=VL_X if $L(VL)>132 set VL=$E(VL,$L(VL)-131,999)
		do ZPNT
		}
	quit
ZPNT //
	type public Number IOSL,verror,VFMQ,VLC
	if VLC+1'>IOSL do VOM quit 
	do VHDG0 if VFMQ set verror=1 quit 
	quit 

VP8	// Column pre-processor - Variable: DC

	type public String vc10,vc3
	type public Number DOC,IOSL,verror,VFMQ,VLC
	type public String DC,VL
	type String FID,DI
	if 'DOC set DC="" quit
	set FID=vc10
	set DI=vc3
	set verror=0
	// I18N=OFF
	type ResultSet rs=Db.select("DOC","DBTBL11D","%LIBS='SYSDEV' AND FID=:FID AND DI=:DI")
	if 'rs.isEmpty() do {
		set VL="" do VOM	// Blank line
		while rs.next() do { quit:verror
			set DC=rs.getRow()
			set VL=$J("",32)_DC
			if VLC+1>IOSL do {
				do VHDG0
				if VFMQ set verror=1
				}
			else  do VOM
			}
		set VL=""
		if VLC+2'>IOSL do VOM			// Blank line
		}
	set DC=""
	quit
