	/*
	  Copyright(c)1997 Sanchez Computer Associates, Inc.  All Rights Reserved 
	       ORIG:  CHENARD
	
	   This Public function is used to return information
	   about a directory.  It is primarily used to fetch
	   the value of a global directory file, GDS, to be used
	   in extended globlal references.  It is public to all
	   areas of the system which may be using DDP to access
	   database files.
	
	
	   This extrinsic function will return information used in front-end
	   processing.
	
	   Naming Conventions must be strictly adhered to in order for
	   successful database access.  In order to access remote databases.
	   the GDS file for the remote database must exist on the local node.
	   This utility relies on this file being identified by a logical
	   name that is structured the following way:
	
	   "SCAU$node_dirnam_GBLDIR"
	
	   node   - this is the NODENAME of the remote system, either FEP or HOST
	   dirnam - this is the directory name being accessed.
	
	   LIBRARY:
	   
	   	. $$DIR  - Returns the translation for SCAU$DDPLOG
		
		. $$DDPDIR - Returns the physical name for the [.DDP]
	       	sub-directory
			
		. $$FULNAM - Returns full physical name for directory
		
		. $$GBLDIR - Returns the global directory name
		
		. $$HOSTLOG - Returns the logical name for the host
		
		. $$NODNAM - Returns node name where directory sits
		
		. $$SPOOL - Returns the physical name for the [.SPOOL]
			sub-directory.
			
		. %EXT  - Subroutine call to return values for GBLDIR,
			NODNAM, and FULNAM
	
	  --------Revision History----------------------------------------------
	  
	  01/04/06 - KELLYP - CR 18761
	  	Modified to declare all sections except INIT as public.  Also
	  	removed pre-2003 revision history.
	*/

	quit

public GBLDIR(DIR)	// Return the global directory reference

	/*
	   Extrinsic function returns the value of the global directory file
	   for the passed directory name.
	
	ARGUMENTS:
		. DIR  - PROFILE directory name.  The value of this
		argument is a valid logical name for the directory.
	       							/TYP=T/REQ/MECH=VAL
	
	RETURNS:
		. GBLDIR - Global directory name for the DIR
	       							/TYP=T/MECH=VAL
	
	EXAMPLE:
		S GBLDIR=$$GBLDIR^DDPUTL("IBS")
	
	  
	*/
	new GBLDIR,NODNAM
	
	set NODNAM=$$DEVICE^%TRNLNM(DIR,"NODE")    
	if NODNAM'="" set GBLDIR=$$SCAU^%TRNLNM(NODNAM_"_"_DIR_"_GBLDIR")
	else  set GBLDIR=$$TRNLNM^%ZFUNC(DIR_"_GBLDIR")        
	quit GBLDIR
	
public NODNAM(DIR)	// Return the node name the directory sits on
	
	/*
	
	ARGUMENTS:
		. DIR  - PROFILE directory name.  The value of this
		argument is a valid logical name for the directory.
	       							/TYP=T/REQ/MECH=VAL
	RETURNS:
		. NODNAM - Name of system node that the DIR is on.
	       							/TYP=T/LEN=6/MECH=VAL
	
	EXAMPLE:
		S NOD=$$NODNAM^DDPUTL("IBS")
	
	  
	*/
	new NODNAM
	set NODNAM=$$DEVICE^%TRNLNM(DIR,"NODE")        
	if NODNAM="" set NODNAM=$$NODENAM^%ZFUNC
	quit NODNAM
	
	
public FULNAM(DIR)	// Return the full directory reference of DIR
	
	/*
	ARGUMENTS:
		. DIR  - PROFILE directory name.  The value of this
			argument is a valid logical name for the directory.
	       							/TYP=T/REQ/MECH=VAL
	
	RETURNS:
		. FULNAM - Full physical name of DIR
	       							/TYP=T/MECH=VAL
	
	EXAMPLE:
		S FUL=$$FULNAM^DDPUTL("IBS")
	
	  
	*/

	quit $$TRNLNM^%ZFUNC(DIR)
	
	
INIT(DIR)	// Define all values
	
	/*
	ARGUMENTS:
		. DIR - PROFILE directory name.  The value of this
		argument is a valid logical name for the directory.
	       							/TYP=T/REQ/MECH=VAL
	
	  
	*/
	new STR
	kill DDPDIR,FULNAM,GBLDIR,NODNAM
	
	set FULNAM=$$TRNLNM^%ZFUNC(DIR) quit:FULNAM="" 

	set NODNAM=$$DEVICE^%TRNLNM(DIR,"NODE")        

	set DDPDIR=$$SCAU^%TRNLNM("DDPLOG")    
	if NODNAM'="" set GBLDIR=$$SCAU^%TRNLNM(NODNAM_"_"_DIR_"_GBLDIR")
	else  set GBLDIR=$$TRNLNM^%ZFUNC(DIR_"_GBLDIR")        
	if NODNAM="" set NODNAM=$$NODENAM^%ZFUNC
	quit 
	
	
public DDPDIR(DIR)	// Return the DDP directory name
	
	/*
	   This public function returns the physical location of the
	   [.DDP] sub-directory of the passed directory name,
	
	ARGUMENTS:
		. DIR - PROFILE directory name.  The value of this
			argument is a valid logical name for the directory.
	       							/TYP=T/REQ/MECH=VAL
	
	RETURNS:
		. DDPDIR - DDP sub-directory name
	       							/TYP=T/MECH=VAL
	
	EXAMPLE:
		S DDPDIR=$$DDPDIR^DDPUTL("IBS")
	  
	*/
	quit $$SCAU^%TRNLNM("DDP")       

	
	
public %EXT(DIR,NODNAM,FULNAM,GBLDIR)	// Return all values for DIR
	
	/*
	 ARGUMENTS:
	 	. DIR  - PROFILE directory name.  The value of this
	     		argument is a valid logical name for the directory.
	     								/TYP=T/REQ/MECH=VAL

	 	. NODNAM - Name of the system node that the directory
	      		is on.
									/TYP=T/LEN=6/MECH=REFNAM:W
	
	 	. FULNAM - Full, physical name of the directory.
	 								/TYP=T/MECH=REFNAM:W
	 	. GBLDIR - Global directory name
									/TYP=T/MECH=REFNAM:W
	
	 RETURNS:
	
	EXAMPLE:
		D %EXT^DDPUTL("IBS",.NODE,.FULNM,.GBL)
	
	
	*/
	do INIT(DIR)
	quit 
	
public DIR()	// Return directory logical name used for DDP processing

	/*
	   This function translates the logical SCAU$DDPLOG that is used for
	   front-end processing.
	
	RETURNS:
		. DIR - Directory name, as a logical, used for DDP and
	      		extended global references.
	       								/TYP=T/MECH=VAL
	
	EXAMPLE:
		S DDPLOG=$$DIR^DDPUTL()
	
	*/
	quit $$SCAU^%TRNLNM("DDPLOG")          
	
public HOSTLOG()	// Return Logical name for the host directory

	/*

	   Will return SCAU$DIR since FEPS will no longer exist

	
	   RETURNS:

		. HOSTDIR - Translated Logical name			/TYP=T/MECH=VAL
	
	   EXAMPLE:
		S HOST=$$HOSTLOG^DDPUTL()
	
	*/
	
	quit $$SCAU^%TRNLNM("DIR") 

	
public SPOOL(DIR)	// Return the spool directory

	/*
	   ARGUMENTS:
		. DIR  - PROFILE directory name.  The value of this
	       	argument is a valid logical name for the directory.
	       								/TYP=T/REQ/MECH=VAL
	
	   RETURNS:
		. SPOOL  - Full name of the directory's [.SPOOL] sub-
	       	directory.
	       								/TYP=T/MECH=VAL
	
	   EXAMPLE:
		S SPL=$$SPOOL^DDPUTL("IBS")
	
	*/

	quit $$SUBDIR^%TRNLNM(DIR,"SPOOL")
 #OPTION ResultClass ON
public String vSIG()	quit "60269^49577^kellytp^5843"	// Signature - LTD^TIME^USER^SIZE
