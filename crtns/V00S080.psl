V00S080(Number %ProcessMode,RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1)   // -  - SID= <DBTBL8> Index File Definition
 ;;Copyright(c)2010 Sanchez Computer Associates, Inc.  All Rights Reserved - 02/24/2010 18:33 - pip
  /*
ORIG: CHENARDP - 03/03/2003
DESC: PSL Screen Compiler Template

---- Comments --------------------------------------------------------
	This procedure is used as the base template for the PSL screen compiler.
	It is referenced by the PSL screen compiler - procedure DBS2PSL4
	
	
---- Revision History ------------------------------------------------
	02/18/07 - Pete Chenard - CR23555
		   Corrected compiler warnings.
		   
	02/23/06 - Pete Chenard - CR19551
		   Fixed routine label.
		   
	05/19/05 - Pete Chenard - CR 14146
		   Modified to type variables.
		   
	12/1/03 - Spier -cr7178
	   	     Modifications to correct dead code warnings and
	   	     other issues that occurred during mass compile of screens.

	09/24/03 - Pete Chenard - 45497
		       Created screen template for compiler.
----------------------------------------------------------------------

 */

 #WARN SCOPE OFF
	type Public String %MODS,%PAGE,%PG,%REPEAT,ER,RM
	type String KEYS(),KVAR,VFSN(),VO,VODFT,VPGM,vPSL,VSID,VSNAME

	// %O (0-Create  1-Modify  2-Inquiry  3-Delete  4-Print  5-Blank screen)

	set:'%ProcessMode.exists() %ProcessMode=5
 if (%ProcessMode = 5) do {
  if 'fDBTBL8.exists() set fDBTBL8 = Class.new("RecordDBTBL8")
  if 'fDBTBL1.exists() set fDBTBL1 = Class.new("RecordDBTBL1")
 }
 set KVAR="kill %TAB,VFSN,VO,VPTBL,vtab,ZINDEXNM,DELFLG",VSID="DBTBL8",VPGM=$T(+0),VSNAME="Index File Definition"
 set VFSN("DBTBL1")="zfDBTBL1",VFSN("DBTBL8")="zfDBTBL8"
 set vPSL=1
 set KEYS(1)=fDBTBL1.%LIBS
 set KEYS(2)=fDBTBL1.FID
 //
	// ==================== Display blank screen         (%O=5)

 if %ProcessMode=5 do VPR(.fDBTBL8,.fDBTBL1),VDA1(.fDBTBL8,.fDBTBL1),^DBSPNT() quit

 if '%ProcessMode do VNEW(.fDBTBL8,.fDBTBL1),VPR(.fDBTBL8,.fDBTBL1),VDA1(.fDBTBL8,.fDBTBL1)
 if %ProcessMode do VLOD(.fDBTBL8,.fDBTBL1) quit:$G(ER)  do VPR(.fDBTBL8,.fDBTBL1),VDA1(.fDBTBL8,.fDBTBL1)

	// ====================  Display Form
	do ^DBSPNT()
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=XECUTE
	if %ProcessMode=2!(%ProcessMode=3) do ^DBSCRT8A X:'$D(%PAGE) KVAR quit  // Inquiry/Delete
	// ====================  Set up data entry control table


 if %ProcessMode<2 do VTAB(.fDBTBL8,.fDBTBL1)
	quit


VNEW(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1) // Initialize arrays if %O=0
 
 do VDEF(.fDBTBL8,.fDBTBL1)
 do VLOD(.fDBTBL8,.fDBTBL1)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
VDEF(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
 ;
VLOD(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1) // Load data from disc - %O = (1-5)
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	type Public String %MODS,%REPEAT
	quit
	

VPR(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1) // Display screen prompts
 set VO="36||13|0"
 set VO(0)="|0"
 set VO(1)=$C(2,1,80,0,0,0,0,0,0,0)_"11Tlqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk"
 set VO(2)=$C(3,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(3)=$C(3,4,14,0,0,0,0,0,0,0)_"01T Primary File:"
 set VO(4)=$C(3,44,13,0,0,0,0,0,0,0)_"01TLast Updated:"
 set VO(5)=$C(3,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(6)=$C(4,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(7)=$C(4,49,8,0,0,0,0,0,0,0)_"01TBy User:"
 set VO(8)=$C(4,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(9)=$C(5,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(10)=$C(5,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(11)=$C(6,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(12)=$C(6,4,12,1,0,0,0,0,0,0)_"01T Index Name:"
 set VO(13)=$C(6,46,24,0,0,0,0,0,0,0)_"01TDelete Index Definition:"
 set VO(14)=$C(6,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(15)=$C(7,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(16)=$C(7,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(17)=$C(8,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(18)=$C(8,3,13,1,0,0,0,0,0,0)_"01T Description:"
 set VO(19)=$C(8,50,20,0,0,0,0,0,0,0)_"01TSupertype File Name:"
 set VO(20)=$C(8,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(21)=$C(9,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(22)=$C(9,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(23)=$C(10,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(24)=$C(10,6,10,1,0,0,0,0,0,0)_"01T Order by:"
 set VO(25)=$C(10,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(26)=$C(11,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(27)=$C(11,3,13,1,0,0,0,0,0,0)_"01T Global Name:"
 set VO(28)=$C(11,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(29)=$C(12,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(30)=$C(12,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(31)=$C(13,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(32)=$C(13,32,38,0,0,0,0,0,0,0)_"01TStore Index Value in Uppercase Format:"
 set VO(33)=$C(13,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(34)=$C(14,1,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(35)=$C(14,80,1,0,0,0,0,0,0,0)_"11Tx"
 set VO(36)=$C(15,1,80,0,0,0,0,0,0,0)_"11Tmqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqj"
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VDA1(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1)  // Display screen data
 new V
 if %ProcessMode=5 new DELFLG,ZINDEXNM
 if  set (DELFLG,ZINDEXNM)=""
 else  set DELFLG=$G(DELFLG),ZINDEXNM=$G(ZINDEXNM)
 
 s DELFLG=$G(DELFLG)
 s ZINDEXNM=$G(ZINDEXNM)
 //
 set VO="48|37|13|0"
 set VO(37)=$C(1,1,80,1,0,0,0,0,0,0)_"01T"_$S(%ProcessMode=5:"",1:$$BANNER^DBSGETID(%FN))
 set VO(38)=$C(3,19,12,2,0,0,0,0,0,0)_"01T"_$E(fDBTBL8.FID,1,12)
 set VO(39)=$C(3,58,10,2,0,0,0,0,0,0)_"01D"_$$DAT^%ZM(fDBTBL8.LTD)
 set VO(40)=$C(3,69,10,2,0,0,0,0,0,0)_"01C"_$$TIM^%ZM(fDBTBL8.TIME)
 set VO(41)=$C(4,58,20,2,0,0,0,0,0,0)_"01T"_$E(fDBTBL8.USER,1,20)
 set VO(42)=$C(6,17,16,2,0,0,0,0,0,0)_"00U"_ZINDEXNM.get()
 set VO(43)=$C(6,71,1,2,0,0,0,0,0,0)_"00L"_$S(DELFLG.get():"Y",1:"N")
 set VO(44)=$C(8,17,29,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL8.IDXDESC,1,29)
 set VO(45)=$C(8,71,8,2,0,0,0,0,0,0)_"01T"_$E(fDBTBL8.PARFID,1,8)
 set VO(46)=$C(10,17,60,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL8.ORDERBY,1,60)
 set VO(47)=$C(11,17,8,2,0,0,0,0,0,0)_"00T"_$E(fDBTBL8.GLOBAL,1,8)
 set VO(48)=$C(13,71,1,2,0,0,0,0,0,0)_"00L"_$S(fDBTBL8.UPCASE:"Y",1:"N")
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
	
	
VTAB(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1)
 
 kill VSCRPP,REQ,%TAB,%MOD,%MODOFF,%MODGRP,%REPREQ,vtab
 set %MAX=11,VPT=1,VPB=15,PGM=$T(+0),DLIB="SYSDEV",DFID="DBTBL8,DBTBL1"
 set OLNTB=15001
 
 set VFSN("DBTBL1")="zfDBTBL1",VFSN("DBTBL8")="zfDBTBL8"
 //
 // 
	
	
 set %TAB(1)=$C(2,18,12)_"21U12402|1|[DBTBL8]FID|[DBTBL1]||||||||25"
 set %TAB(2)=$C(2,57,10)_"20D12412|1|[DBTBL8]LTD"
 set %TAB(3)=$C(2,68,10)_"20C12416|1|[DBTBL8]TIME"
 set %TAB(4)=$C(3,57,20)_"20T12413|1|[DBTBL8]USER"
 set %TAB(5)=$C(5,16,16)_"01U|*ZINDEXNM|[*]@ZINDEXNM|^DBTBL(%LIBS,8,FID,#5|if X?1A.AN|do VP1^V00S080(.fDBTBL8,.fDBTBL1)||99"
 set %TAB(6)=$C(5,70,1)_"00L|*DELFLG|[*]@DELFLG|||do VP2^V00S080(.fDBTBL8,.fDBTBL1)"
 set %TAB(7)=$C(7,16,29)_"01T12405|1|[DBTBL8]IDXDESC|||do VP3^V00S080(.fDBTBL8,.fDBTBL1)"
 set %TAB(8)=$C(7,70,8)_"20T12415|1|[DBTBL8]PARFID"
 set %TAB(9)=$C(9,16,60)_"01T12403|1|[DBTBL8]ORDERBY|@SELDI^DBSFUN(FID,.X):LIST:NOVAL||do VP4^V00S080(.fDBTBL8,.fDBTBL1)||||||120"
 set %TAB(10)=$C(10,16,8)_"01T12402|1|[DBTBL8]GLOBAL|||do VP5^V00S080(.fDBTBL8,.fDBTBL1)||||||40"
 set %TAB(11)=$C(12,70,1)_"00L12414|1|[DBTBL8]UPCASE"
 do VTBL(.fDBTBL8,.fDBTBL1)
	do ^DBSCRT8 	// data entry
	quit


VREQ   // Create REQ() array
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


VTBL(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1) //Create %TAB(array)
 	// 1 2 3  4 5   6   7-9 10-11
 	// DY,DX,SZ PT REQ TYPE DEL POS |NODE|ITEM NAME|TBL|FMT|PP|PRE|MIN|MAX|DEC

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit


  //user-defined post procs
 //
VP1(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1) //
 set INDEXNM = X
 set ZINDEXNM = X
 
 type String J, PARFID, OLDX, Z, ZORD, ZDESC, ZHDG, ZLIB, ZFID

 set OLDX=X
 set fDBTBL8.INDEXNM = INDEXNM

 do CHANGE^DBSMACRO("TBL","")

 quit:X.isNull()
 quit:X=V 
 
 // .LOAD. ALL
 do DISPLAY^DBSMACRO("ALL")
 
 // If this points to a parent file, it can only be edited there
 set X=OLDX
 set PARFID=fDBTBL1.parfid

 // Copy supertype index def
 if 'PARFID.isNull(),Db.isDefined("DBTBL8","%LIBS='SYSDEV',FID=:PARFID,INDEXNM=:X") do { quit
	type RecordDBTBL8 DB8=Db.getRecord("DBTBL8","%LIBS='SYSDEV',FID=:PARFID,INDEXNM=:X")
	set fDBTBL8 = DB8.copy()
	set fDBTBL8.parfid = PARFID	// Supertype file name
 	do DISPLAY^DBSMACRO("ALL")
 	do GOTO^DBSMACRO("END")
 }

 set FID = fDBTBL8.fid
 set INDEXNM = OLDX
 set fDBTBL8.INDEXNM = INDEXNM
 
 if Db.isDefined("DBTBL8","%LIBS='SYSDEV',FID=:FID,INDEXNM=:INDEXNM") do { quit
	do OLDINDEX(.fDBTBL8,FID,X)
	do DISPLAY^DBSMACRO("ALL")
 }
 
 if 'Db.isDefined("DBTBL8","%LIBS='SYSDEV',FID=:FID,INDEXNM=:INDEXNM") do ZNEWNM

 // ---------- If a valid data item name, try to default in ORDERBY and IDXDESC
 if '$$VER^DBSDD(FID_"."_INDEXNM) quit
 set Z = $$DI^DBSDD(FID_"."_INDEXNM)
 
 if Z.piece("|",1)="" quit  // Computed
 if Z.piece("|",1)?1N1"*" quit  // Access key

 set ZORD = ""
 set ZDESC = Z.piece("|",10)
 set ZDESC = ZDESC.extract(1,30)

 set Z = "X"_fDBTBL1.global	// Index global name
 
 set ZORD = fDBTBL1.acckeys
 
 if fDBTBL8.IDXDESC.isNull() do DEFAULT^DBSMACRO("DBTBL8.IDXDESC",ZDESC.extract(1,29),"1","0","0")
 if fDBTBL8.ORDERBY.isNull() do DEFAULT^DBSMACRO("DBTBL8.ORDERBY",""""_X_""""_","_X_","_ZORD,"1","0","0")
 if fDBTBL8.GLOBAL.isNull() do DEFAULT^DBSMACRO("DBTBL8.GLOBAL",Z,"1","0","0")
 if fDBTBL8.INDEXNM.isNull() set fDBTBL8.INDEXNM = INDEXNM 

 set X = INDEXNM
 set UX = 1

 do DISPLAY^DBSMACRO("ALL")

 quit


ZNEWNM //
 
 type public Number UX
 type public String INDEXNM, RM

 do GOTO^DBSMACRO("DBTBL8.IDXDESC")

 set RM(99) = $$^MSG(7290,INDEXNM)
 set UX = 1

 quit


OLDINDEX(RecordDBTBL8 fDBTBL8, String FID, String X)  //

 set RM = $$^MSG(1775,INDEXNM)
 set fDBTBL8=Db.getRecord("DBTBL8","%LIBS='SYSDEV',FID=:FID,INDEXNM=:X")

 quit
VP2(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1) //
 if (X = 1) set %ProcessMode = 3 do GOTO^DBSMACRO("END")
 quit
VP3(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1) //
 if 'fDBTBL8.INDEXNM do CHANGE^DBSMACRO("REQ")
 quit
VP4(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1) //
 type Number i, zvar
 type String di, keylist, keys
 
 if X["=" set RM=$$^MSG(1475) set RM=$$^MSG(2974,RM)	// Invalid syntax
 set zvar=0

 do CHANGE^DBSMACRO("TBL","")

 set keylist = X.piece("=",1)

 for i=1:1:keylist.length(",") do { quit:ER
	if keylist.piece(",",i)="" set ER=1 set RM=$$^MSG(2076) quit  	// Invalid syntax
 	do CHKDI(keylist.piece(",",i))				// Validate data item
 }

 
 // Make sure all primary keys are in the index
 
 if 'vfsn(FID).exists() do fsn^DBSDD(.vfsn,FID)

 set keys = vfsn(FID).piece("|",3)			// Access keys
 
 if zvar quit                       // User-defined <<var>> syntax

 for i=1:1:keys.length(",") do {
  	set key = keys.piece(",",i)
 	if ","_keylist_","[(","_key_",") quit
 	set keylist = keylist_","_key
 	if X.piece("=",2)'="" set X = keylist_"="_X.piece("=",2,999) quit
 	set X = keylist
 }

 quit

 
CHKDI(di) // Check that this is a valid DI syntax
 
 if di=+di!("""$"[di.extract()) quit             // Literal or special

 if di?1AN.AN!(di?1"%"1AN.AN)!(di["_") set di = FID_"."_di 	// This file
 if '$$VER^DBSDD(di) set ER=1 set RM=$$^MSG(1298,di) quit  // Invalid data item

 if $$CMP^DBSDD(di)'="" set ER=1 set RM=$$^MSG(597,di) quit  // Reject computed data item
 
 quit
VP5(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1) //
 N GBL,ORD,DELGBL

 if X="DAYEND",fDBTBL8.ORDERBY'[$C(34) do { quit
	set ER=1
	set RM=$$^MSG(1411)
 }  

 if X.extract()="^" set ER=1 set RM=$$^MSG(2567) quit   // syntax error

 set ORD = fDBTBL8.ORDERBY
 
 if 'X.isNull() do {
 	set GBL = "^"_X_"("
	set RM = GBL_ORD.piece("=",1)_")"
	if ORD["=" set RM = RM_"="_ORD.piece("=",2)
	set RM = $$^MSG(1164,RM)
 }

 quit
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit								// User defined post processor's


VRV(V,L) quit V_$J("",L-$L(V))
VREPRNT
 type Public RecordDBTBL8 fDBTBL8
 type Public RecordDBTBL1 fDBTBL1
 do VPR(.fDBTBL8,.fDBTBL1)
 do VDA1(.fDBTBL8,.fDBTBL1)
 do ^DBSPNT()
 quit

VW(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1)
 do VDA1(.fDBTBL8,.fDBTBL1)
 do ^DBSPNT(10)
 quit

VDAPNT(RecordDBTBL8 fDBTBL8,RecordDBTBL1 fDBTBL1)
 do VDA1(.fDBTBL8,.fDBTBL1)
 do ^DBSPNT(0,2)
 quit

VDA
 type Public RecordDBTBL8 fDBTBL8
 type Public RecordDBTBL1 fDBTBL1
 do VDA1(.fDBTBL8,.fDBTBL1)
 quit

	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
 
vSET(sn,di,X)
 type Public RecordDBTBL8 fDBTBL8
 if sn="DBTBL8" do vSET1(.fDBTBL8,di,X)
 type Public RecordDBTBL1 fDBTBL1
 if sn="DBTBL1" do vSET2(.fDBTBL1,di,X)
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET1(RecordDBTBL8 fDBTBL8,di,X)
 do fDBTBL8.setAuditFlag(1)
 set fDBTBL8.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
vSET2(RecordDBTBL1 fDBTBL1,di,X)
 do fDBTBL1.setAuditFlag(1)
 set fDBTBL1.@di=X
 #ACCEPT Date=11/5/03;PGM=Screen Compiler;CR=UNKNOWN;GROUP=SYNTAX
 quit
	
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
vREAD(fid,di)
 type Public RecordDBTBL8 fDBTBL8
 if fid="DBTBL8" quit $$vREAD1(.fDBTBL8,di)
 type Public RecordDBTBL1 fDBTBL1
 if fid="DBTBL1" quit $$vREAD2(.fDBTBL1,di)
 quit ""
vREAD1(RecordDBTBL8 fDBTBL8,di)
 quit fDBTBL8.@di
vREAD2(RecordDBTBL1 fDBTBL1,di)
 quit fDBTBL1.@di
	#ACCEPT DATE=11/05/03; PGM=Screen Compiler;CR=UNKNOWN;GROUP=DEAD
	quit
