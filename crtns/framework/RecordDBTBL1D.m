 ; 
 ; **** Routine compiled from DATA-QWIK Filer RecordDBTBL1D ****
 ; 
 ; 02/24/2010 18:39 - pip
 ; 
 ;
 ; Record Class code for table DBTBL1D
 ;
 ; Generated by PSLRecordBuilder on 02/24/2010 at 18:39 by
 ;
vcdmNew() ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL1D",vobj(vOid,-2)=0,vobj(vOid)=""
 S vobj(vOid,-3)=""
 S vobj(vOid,-4)=""
 S vobj(vOid,-5)=""
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0(v1,v2,v3,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL1D"
 S vobj(vOid)=$G(^DBTBL(v1,1,v2,9,v3))
 I vobj(vOid)="",'($D(^DBTBL(v1,1,v2,9,v3))#2)
 S vobj(vOid,-2)=1
 I $T K vobj(vOid) S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,DBTBL1D",$EC=",U1001,"
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 S vobj(vOid,-5)=v3
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord1(v1,v2,v3,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL1D"
 S vobj(vOid)=$G(^DBTBL(v1,1,v2,9,v3))
 I vobj(vOid)="",'($D(^DBTBL(v1,1,v2,9,v3))#2)
 S vobj(vOid,-2)='$T
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 S vobj(vOid,-5)=v3
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0Opt(v1,v2,v3,vfromDbSet,v2out) ; 
 N dbtbl1d
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S dbtbl1d=$G(^DBTBL(v1,1,v2,9,v3))
 I dbtbl1d="",'($D(^DBTBL(v1,1,v2,9,v3))#2)
 S v2out=1
 I $T S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,DBTBL1D",$EC=",U1001,"
 ;*** End of code by-passed by compiler ***
 Q dbtbl1d
 ;
vRCgetRecord1Opt(v1,v2,v3,vfromDbSet,v2out) ; 
 N dbtbl1d
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S dbtbl1d=$G(^DBTBL(v1,1,v2,9,v3))
 I dbtbl1d="",'($D(^DBTBL(v1,1,v2,9,v3))#2)
 S v2out='$T
 ;*** End of code by-passed by compiler ***
 Q dbtbl1d
 ;
vBypassSave(this) ; 
 D vSave(this,"/NOJOURNAL/NOTRIGAFT/NOTRIGBEF/NOVALDD/NOVALREQ/NOVALRI/NOVALST",0)
 Q 
 ;
vSave(this,vRCparams,vauditLogSeq) ; 
 N vRCaudit N vRCauditIns
 N %O S %O=$G(vobj(this,-2))
 I ($get(vRCparams)="") S vRCparams="/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/"
 I (%O=0) D
 .	D AUDIT^UCUTILN(this,.vRCauditIns,1,"|")
 .	D vRCsetDefaults(this)
 .	I (("/"_vRCparams_"/")["/TRIGBEF/") D vRCbeforeInsTrigs(this,vRCparams)
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	I (("/"_vRCparams_"/")["/TRIGAFT/") D vRCafterInsTrigs(this,vRCparams)
 .	Q 
 E  I (%O=1) D
 .	D AUDIT^UCUTILN(this,.vRCaudit,1,"|")
 .	I ($D(vobj(this,-100,"1*","%LIBS"))&($P($E($G(vobj(this,-100,"1*","%LIBS")),5,9999),$C(124))'=vobj(this,-3)))!($D(vobj(this,-100,"2*","FID"))&($P($E($G(vobj(this,-100,"2*","FID")),5,9999),$C(124))'=vobj(this,-4)))!($D(vobj(this,-100,"3*","DI"))&($P($E($G(vobj(this,-100,"3*","DI")),5,9999),$C(124))'=vobj(this,-5))) D vRCkeyChanged(this,vRCparams,.vRCaudit) Q 
 .	I (("/"_vRCparams_"/")["/TRIGBEF/") D vRCbeforeUpdTrigs(this,vRCparams,.vRCaudit)
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForUpdate(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD1(this)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	I (("/"_vRCparams_"/")["/TRIGAFT/") D vRCafterUpdTrigs(this,vRCparams)
 .	Q 
 E  I (%O=2) D
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,2)
 .	I (("/"_vRCparams_"/")["/INDEX/") D updateIndexes(this,%O,.vRCaudit)
 .	I (("/"_vRCparams_"/")["/TRIGAFT/") D vRCafterInsTrigs(this,vRCparams)
 .	Q 
 E  I (%O=3) D
 .	  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) Q:'($D(^DBTBL(V1,1,V2,9,V3))#2) 
 .	D vRCdelete(this,vRCparams,.vRCaudit,0)
 .	I (("/"_vRCparams_"/")["/TRIGAFT/") D vRCafterDelTrigs(this,vRCparams)
 .	Q 
 Q 
 ;
vcheckAccessRights() ; 
 Q ""
 ;
vinsertAccess(userclass) ; 
 Q 1
 ;
vinsertOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vupdateAccess(userclass) ; 
 Q 1
 ;
vupdateOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vdeleteAccess(userclass) ; 
 Q 1
 ;
vdeleteOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectAccess(userclass,restrict,from) ; 
 S (restrict,from)=""
 Q 1
 ;
vselectOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectOptmOK(userclass,dbtbl1d,vkey1,vkey2,vkey3) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vgetLogging() ; 
 Q "0"
 ;
logUserclass(operation) ; 
 I (operation="INSERT") Q 0
 E  I (operation="UPDATE") Q 0
 E  I (operation="DELETE") Q 0
 E  I (operation="SELECT") Q 0
 Q 0
 ;
vlogSelect(statement,using) ; 
 Q 0
 ;
columnList() ; 
 N columns S columns=""
 S columns=columns_"%LIBS,ALIAS,CMP,CNV,DEC,DEPOSTP,DEPREP,DES,DFT,DI,DOM,FID,ISMASTER,ITP,LEN,LTD,MAX,MDD,MIN,NOD,"
 S columns=columns_"NULLIND,POS,PTN,REQ,RHD,SFD,SFD1,SFD2,SFP,SFT,SIZ,SRL,TBL,TYP,USER,VAL4EXT,XPO,XPR,"
 Q $$vStrRep("%LIBS,ALIAS,CMP,CNV,DEC,DEPOSTP,DEPREP,DES,DFT,DI,DOM,FID,ISMASTER,ITP,LEN,LTD,MAX,MDD,MIN,NOD,NULLIND,POS,PTN,REQ,RHD,SFD,SFD1,SFD2,SFP,SFT,SIZ,SRL,TBL,TYP,USER,VAL4EXT,XPO,XPR",",",$char(9),0,0,"")
 ;
columnListBM() ; 
 Q ""
 ;
columnListCMP() ; 
 Q $$vStrRep("MDDFID,VALIDCMP",",",$char(9),0,0,"")
 ;
getColumnMap(map) ; 
 ;
 S map(-5)="DI:U:"
 S map(-4)="FID:U:"
 S map(-3)="%LIBS:T:"
 S map(-1)="ALIAS:T:32;CMP:T:16;CNV:N:24;DEC:N:14;DEPOSTP:T:30;DEPREP:T:29;DES:T:10;DFT:T:3;DOM:U:4;ISMASTER:L:17;ITP:T:11;LEN:N:2;LTD:D:25;MAX:T:13;MDD:U:27;MIN:T:12;NOD:T:1;NULLIND:L:31;POS:N:21;PTN:T:6;REQ:L:1"
 S map(-1)=map(-1)_"5;RHD:T:22;SFD1:N:18:~126~~2;SFD2:N:18:~126~~3;SFP:N:18:~126~~4;SFT:U:18:~126~~1;SIZ:N:19;SRL:L:23;TBL:T:5;TYP:U:9;USER:T:26;VAL4EXT:L:28;XPO:T:7;XPR:T:8"
 Q 
 ;
vlegacy(processMode,params) ; 
 N vTp
 I (processMode=2) D
 .	N dbtbl1d S dbtbl1d=$$vRCgetRecord0^RecordDBTBL1D(%LIBS,FID,DI,0)
 .	S vobj(dbtbl1d,-2)=2
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1D(dbtbl1d,$$initPar^UCUTILN(params)) K vobj(dbtbl1d,-100) S vobj(dbtbl1d,-2)=1 TC:vTp  
 .	K vobj(+$G(dbtbl1d)) Q 
 Q 
 ;
vhasLiterals() ; 
 Q 0
 ;
vRCmiscValidations(this,vRCparams,processMode) ; 
 I (("/"_vRCparams_"/")["/VALST/")  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) I '(''($D(^DBTBL(V1,1,V2,9,V3))#2)=''processMode) D
 .	N errmsg
 .	I (+processMode'=+0) S errmsg=$$^MSG(7932)
 .	E  S errmsg=$$^MSG(2327)
 .	D throwError(errmsg)
 .	Q 
 I (("/"_vRCparams_"/")["/VALFK/") D vRCcheckForeignKeys(this)
 I (("/"_vRCparams_"/")["/VALRI/") D vRCsetForeignKeys(this)
 Q 
 ;
vRCupdateDB(this,processMode,vRCparams,vRCaudit,vRCauditIns) ; 
 I '(("/"_vRCparams_"/")["/NOUPDATE/") D
 .  S $P(vobj(this),$C(124),25)=$P($H,",",1)
 .	I '(+$P($G(vobj(this,-100,"0*","USER")),$C(124),2)&($P($E($G(vobj(this,-100,"0*","USER")),5,9999),$C(124))'=$P(vobj(this),$C(124),26)))  S $P(vobj(this),$C(124),26)=$E($$USERNAM^%ZFUNC,1,40)
 .	I '(("/"_vRCparams_"/")["/NOLOG/") D
 ..		I (processMode=1) D ^DBSLOGIT(this,1,.vRCaudit) Q 
 ..		D ^DBSLOGIT(this,0,.vRCauditIns)
 ..		Q 
 .	;   #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(vobj(this)) S ^DBTBL(vobj(this,-3),1,vobj(this,-4),9,vobj(this,-5))=vobj(this)
 .	;*** End of code by-passed by compiler ***
 .	Q 
 I (("/"_vRCparams_"/")["/INDEX/"),((processMode=0)!$D(vobj(this,-100))) D updateIndexes(this,processMode,.vRCaudit)
 Q 
 ;
vRCdelete(this,vRCparams,vRCaudit,isKeyChange) ; 
 I (("/"_vRCparams_"/")["/INDEX/") D updateIndexes(this,3,.vRCaudit)
 I '(("/"_vRCparams_"/")["/NOLOG/") D ^DBSLOGIT(this,3)
 ;  #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
 ;*** Start of code by-passed by compiler
 ZWI ^DBTBL(vobj(this,-3),1,vobj(this,-4),9,vobj(this,-5))
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCsetDefaults(this) ; 
 I ($P(vobj(this),$C(124),17)="")  S $P(vobj(this),$C(124),17)=0
 I ($P(vobj(this),$C(124),11)="")  S $P(vobj(this),$C(124),11)="S"
 I ($P(vobj(this),$C(124),31)="")  S $P(vobj(this),$C(124),31)=0
 I ($P(vobj(this),$C(124),15)="")  S $P(vobj(this),$C(124),15)=0
 I ($P(vobj(this),$C(124),23)="")  S $P(vobj(this),$C(124),23)=0
 I ($P(vobj(this),$C(124),9)="")  S $P(vobj(this),$C(124),9)="T"
 I ($P(vobj(this),$C(124),28)="")  S $P(vobj(this),$C(124),28)=0
 Q 
 ;
vRCchkReqForInsert(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("%LIBS")
 I ($P(vobj(this),$C(124),10)="") D vRCrequiredErr("DES")
 I (vobj(this,-5)="") D vRCrequiredErr("DI")
 I (vobj(this,-4)="") D vRCrequiredErr("FID")
 I ($P(vobj(this),$C(124),17)="") D vRCrequiredErr("ISMASTER")
 I ($P(vobj(this),$C(124),31)="") D vRCrequiredErr("NULLIND")
 I ($P(vobj(this),$C(124),15)="") D vRCrequiredErr("REQ")
 I ($P(vobj(this),$C(124),23)="") D vRCrequiredErr("SRL")
 I ($P(vobj(this),$C(124),9)="") D vRCrequiredErr("TYP")
 I ($P(vobj(this),$C(124),28)="") D vRCrequiredErr("VAL4EXT")
 Q 
 ;
vRCchkReqForUpdate(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("%LIBS")
 I (vobj(this,-4)="") D vRCrequiredErr("FID")
 I (vobj(this,-5)="") D vRCrequiredErr("DI")
 I ($D(vobj(this,-100,"0*","DES"))&($P($E($G(vobj(this,-100,"0*","DES")),5,9999),$C(124))'=$P(vobj(this),$C(124),10))),($P(vobj(this),$C(124),10)="") D vRCrequiredErr("DES")
 I ($D(vobj(this,-100,"0*","ISMASTER"))&($P($E($G(vobj(this,-100,"0*","ISMASTER")),5,9999),$C(124))'=$P(vobj(this),$C(124),17))),($P(vobj(this),$C(124),17)="") D vRCrequiredErr("ISMASTER")
 I ($D(vobj(this,-100,"0*","NULLIND"))&($P($E($G(vobj(this,-100,"0*","NULLIND")),5,9999),$C(124))'=$P(vobj(this),$C(124),31))),($P(vobj(this),$C(124),31)="") D vRCrequiredErr("NULLIND")
 I ($D(vobj(this,-100,"0*","REQ"))&($P($E($G(vobj(this,-100,"0*","REQ")),5,9999),$C(124))'=$P(vobj(this),$C(124),15))),($P(vobj(this),$C(124),15)="") D vRCrequiredErr("REQ")
 I ($D(vobj(this,-100,"0*","SRL"))&($P($E($G(vobj(this,-100,"0*","SRL")),5,9999),$C(124))'=$P(vobj(this),$C(124),23))),($P(vobj(this),$C(124),23)="") D vRCrequiredErr("SRL")
 I ($D(vobj(this,-100,"0*","TYP"))&($P($E($G(vobj(this,-100,"0*","TYP")),5,9999),$C(124))'=$P(vobj(this),$C(124),9))),($P(vobj(this),$C(124),9)="") D vRCrequiredErr("TYP")
 I ($D(vobj(this,-100,"0*","VAL4EXT"))&($P($E($G(vobj(this,-100,"0*","VAL4EXT")),5,9999),$C(124))'=$P(vobj(this),$C(124),28))),($P(vobj(this),$C(124),28)="") D vRCrequiredErr("VAL4EXT")
 Q 
 ;
vRCrequiredErr(column) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("DBTBL1D","MSG",1767,"DBTBL1D."_column)
 I ER D throwError($get(RM))
 Q 
 ;
vRCsetForeignKeys(this) ; 
 I '(vobj(this,-4)="") S vfkey("^DBTBL("_""""_vobj(this,-3)_""""_","_1_","_""""_vobj(this,-4)_""""_")")="DBTBL1D(%LIBS,FID) -> DBTBL1"
 Q 
 ;
vRCcheckForeignKeys(this) ; 
  N V1,V2 S V1=vobj(this,-3),V2=vobj(this,-4) I '($D(^DBTBL(V1,1,V2))) D throwError($$^MSG(8563,"DBTBL1D(%LIBS,FID) -> DBTBL1"))
 Q 
 ;
vRCTrig1(this,dbtbl1d,vpar) ; Trigger AFTER_DELETE - After Delete (remove reqd and dft index) - AD
 N vTp
 ;
 ; Delete this data item from its descendants
 ;
 N ZVAL
 ;
 Q:(vobj(this,-5)=" ") 
 ;
 ; Remove entry from required and default list
 N dbtbl1 S dbtbl1=$$vRCgetRecord1^RecordDBTBL1("SYSDEV",vobj(dbtbl1d,-4),0)
  S vobj(dbtbl1,102)=$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),102))
  S vobj(dbtbl1,101)=$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),101))
  S vobj(dbtbl1,10)=$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),10))
 ;
 I $P(vobj(this),$C(124),15)!($P(vobj(this),$C(124),9)="L") D
 .	;
 .	S ZVAL=$P(vobj(dbtbl1,102),$C(124),1)
 .	D REMITEM(this,vobj(this,-5),.ZVAL)
 .  S vobj(dbtbl1,-100,102)="" S $P(vobj(dbtbl1,102),$C(124),1)=ZVAL
 .	Q 
 ;
 I '($P(vobj(this),$C(124),3)="")!($P(vobj(this),$C(124),9)="L") D
 .	;
 .	S ZVAL=$P(vobj(dbtbl1,101),$C(124),1)
 .	D REMITEM(this,vobj(this,-5),.ZVAL)
 .  S vobj(dbtbl1,-100,101)="" S $P(vobj(dbtbl1,101),$C(124),1)=ZVAL
 .	Q 
 ;
  S vobj(dbtbl1,-100,10)="" S $P(vobj(dbtbl1,10),$C(124),10)=$P($H,",",1)
 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1(dbtbl1,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/") K vobj(dbtbl1,-100) S vobj(dbtbl1,-2)=1 TC:vTp  
 ;
 ; Delete this data item from its descendants
 N rs,vos1,vos2,vos3,vos4  N V1 S V1=vobj(this,-4) S rs=$$vOpen1()
 ;
 F  Q:'$$vFetch1()  D
 .	;
 .  N V2,V3 S V2=rs,V3=vobj(dbtbl1d,-5) D vDbDe1()
 .	Q 
 ;
 K vobj(+$G(dbtbl1)) Q 
 ;
vRCTrig2(this,dbtbl1d,vpar) ; Trigger AFTER_INSERT - After Insert - AI
 N vTp,vpc
 ;
 ; If this is a Master Dictionary, distribute changes to everyone
 N ZVAL
 ;
 N rs,vos1,vos2,vos3,vos4,vos5,vos6,vos7  N V1,V2 S V1=vobj(this,-4),V2=vobj(this,-5) S rs=$$vOpen2()
 ;
 I $$vFetch2() D DSTMDD^DBSDF(vobj(this,-4),vobj(this,-5))
 ;
 ; Copy this data item to its descendants
 N rs2,vos8,vos9,vos10,vos11  N V3 S V3=vobj(this,-4) S rs2=$$vOpen3()
 ;
 F  Q:'$$vFetch3()  D
 .	;
 .	N childMode
 . N fid S fid=rs2
 .	;
 .	N child S child=$$vRCgetRecord1^RecordDBTBL1D("SYSDEV",fid,vobj(this,-5),0)
 .	;
 .	S childMode=$G(vobj(child,-2))
 .  K vobj(+$G(child)) S child=$$vReCp1(this)
 .  S vobj(child,-4)=fid
 .	;
 .	S vobj(child,-2)=childMode
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1D(child,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/") K vobj(child,-100) S vobj(child,-2)=1 TC:vTp  
 .	K vobj(+$G(child)) Q 
 ;
 ; Check required indicator (node 102)
 S vpc=(vobj(this,-5)=" ") Q:vpc 
 ;
 I $P(vobj(this),$C(124),15) D
 .	;
 .	; Dummy key
 .	Q:(($E(vobj(this,-5),1)="""")!(vobj(this,-5)?1N.E)) 
 .	;
 .	N dbtbl1 S dbtbl1=$$vRCgetRecord0^RecordDBTBL1("SYSDEV",vobj(this,-4),0)
 .	 S vobj(dbtbl1,102)=$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),102))
 .	;
 .	S ZVAL=$P(vobj(dbtbl1,102),$C(124),1)
 .	;
 .	; Add it to the list
 .	D ADDITEM(this,vobj(this,-5),.ZVAL,dbtbl1d)
 .	;
 .  S vobj(dbtbl1,-100,102)="" S $P(vobj(dbtbl1,102),$C(124),1)=ZVAL
 .	;
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1(dbtbl1,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/") K vobj(dbtbl1,-100) S vobj(dbtbl1,-2)=1 TC:vTp  
 .	K vobj(+$G(dbtbl1)) Q 
 ;
 ; Check items with default value (node 101)
 I '($P(vobj(this),$C(124),3)="") D
 .	;
 .	N dbtbl1 S dbtbl1=$$vRCgetRecord0^RecordDBTBL1("SYSDEV",vobj(this,-4),0)
 .	 S vobj(dbtbl1,101)=$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),101))
 .	;
 .	S ZVAL=$P(vobj(dbtbl1,101),$C(124),1)
 .	;
 .	D ADDITEM(this,vobj(this,-5),.ZVAL,dbtbl1d)
 .	;
 .  S vobj(dbtbl1,-100,101)="" S $P(vobj(dbtbl1,101),$C(124),1)=ZVAL
 .	;
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1(dbtbl1,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/") K vobj(dbtbl1,-100) S vobj(dbtbl1,-2)=1 TC:vTp  
 .	K vobj(+$G(dbtbl1)) Q 
 ;
 Q 
 ;
ADDITEM(this,item,list,dbtbl1d) ; 
 ;
 N i
 N z
 ;
 I (list="") S list=item Q 
 ;
 ; Already in the list
 I ((","_list_",")[(","_item_",")) Q 
 ;
 F i=1:1:$L(list,",") S z($piece(list,",",i))=""
 ;
 ; Add it to the list
 S z(item)=""
 S (i,list)=""
 F  S i=$order(z(i)) Q:(i="")  S list=list_","_i
 S list=$E(list,2,1048575)
 ;
 Q 
 ;
REMITEM(this,item,list,dbtbl1d) ; 
 ;
 ; Not in the list
 I '((","_list_",")[(","_item_",")) Q 
 ;
 S list=","_list_","
 S item=","_item_","
 ;
 ; Remove it from the list
 S list=$piece(list,item,1)_","_$piece(list,item,2,99)
 ;
 ; Remove extra comma
 S list=$E(list,2,$L(list)-1)
 ;
 Q 
 ;
vRCTrig3(this,dbtbl1d,vpar) ; Trigger AFTER_UPDATE - After Update - AU
 N vTp
 ;
 N ZVAL
 ;
 N dbtbl1 S dbtbl1=$$vRCgetRecord0^RecordDBTBL1("SYSDEV",vobj(this,-4),0)
  S vobj(dbtbl1,10)=$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),10))
  S vobj(dbtbl1,102)=$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),102))
  S vobj(dbtbl1,101)=$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),101))
 ;
  S vobj(dbtbl1,-100,10)="" S $P(vobj(dbtbl1,10),$C(124),10)=$P($H,",",1)
 ;
 ; Add or remove from the required data item list
 I (vobj(this,-5)'=" "),($S($D(vobj(this,-100,"0*","REQ")):$P($E(vobj(this,-100,"0*","REQ"),5,9999),$C(124)),1:$P(vobj(this),$C(124),15))'=$P(vobj(this),$C(124),15)) D
 .	;
 .	; Required list
 .	S ZVAL=$P(vobj(dbtbl1,102),$C(124),1)
 .	;
 .	I $P(vobj(this),$C(124),15)!($P(vobj(this),$C(124),9)="L") D
 ..		;
 ..		D ADDITEM(this,vobj(this,-5),.ZVAL)
 ..		Q 
 .	E  D REMITEM(this,vobj(this,-5),.ZVAL)
 .	;
 .  S vobj(dbtbl1,-100,102)="" S $P(vobj(dbtbl1,102),$C(124),1)=ZVAL
 .	Q 
 ;
 ; Add or remove from the default list
 I (vobj(this,-5)'=" "),($S($D(vobj(this,-100,"0*","DFT")):$P($E(vobj(this,-100,"0*","DFT"),5,9999),$C(124)),1:$P(vobj(this),$C(124),3))'=$P(vobj(this),$C(124),3)) D
 .	;
 .	S ZVAL=$P(vobj(dbtbl1,101),$C(124),1)
 .	;
 .	I '($P(vobj(this),$C(124),3)="")!($P(vobj(this),$C(124),9)="L") D
 ..		;
 ..		D ADDITEM(this,vobj(this,-5),.ZVAL)
 ..		Q 
 .	E  D REMITEM(this,vobj(this,-5),.ZVAL)
 .	;
 .  S vobj(dbtbl1,-100,101)="" S $P(vobj(dbtbl1,101),$C(124),1)=ZVAL
 .	Q 
 ;
 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1(dbtbl1,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/") K vobj(dbtbl1,-100) S vobj(dbtbl1,-2)=1 TC:vTp  
 ;
 ; If this is a Master Dictionary, distribute changes to everyone
 N rs,vos1,vos2,vos3,vos4,vos5,vos6,vos7  N V1,V2 S V1=vobj(this,-4),V2=vobj(this,-5) S rs=$$vOpen4()
 ;
 I $$vFetch4() D DSTMDD^DBSDF(vobj(this,-4),vobj(this,-5))
 ;
 ; Copy this data item to its descendants
 N rs2,vos8,vos9,vos10,vos11  N V3 S V3=vobj(this,-4) S rs2=$$vOpen5()
 ;
 F  Q:'$$vFetch5()  D
 .	;
 .	N childMode
 . N fid S fid=rs2
 .	;
 .	N child S child=$$vRCgetRecord1^RecordDBTBL1D("SYSDEV",fid,vobj(this,-5),0)
 .	;
 .	S childMode=$G(vobj(child,-2))
 .  K vobj(+$G(child)) S child=$$vReCp2(this)
 .  S vobj(child,-4)=fid
 .	;
 .	S vobj(child,-2)=childMode
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1D(child,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/") K vobj(child,-100) S vobj(child,-2)=1 TC:vTp  
 .	K vobj(+$G(child)) Q 
 ;
 K vobj(+$G(dbtbl1)) Q 
 ;
vRCTrig4(this,dbtbl1d,vpar) ; Trigger BEFORE_UPDATE - Before Insert/Update - BI BU
 ;
 N td S td=$$getPslTbl^UCXDD(vobj(this,-4),1)
 ;
 I ($S($D(vobj(this,-100,"0*","TYP")):$P($E(vobj(this,-100,"0*","TYP"),5,9999),$C(124)),1:$P(vobj(this),$C(124),9))'=$P(vobj(this),$C(124),9))!($S($D(vobj(this,-100,"0*","LEN")):$P($E(vobj(this,-100,"0*","LEN"),5,9999),$C(124)),1:$P(vobj(this),$C(124),2))'=$P(vobj(this),$C(124),2)) D
 .	;
 .	N FKEYS N TESTDI
 .	;
 .	S TESTDI=","_vobj(this,-5)_","
 .	;
 .	N rs,vos1,vos2,vos3,vos4,vos5,vos6,vos7  N V1,V2 S V1=vobj(this,-4),V2=vobj(this,-4) S rs=$$vOpen6()
 .	;
 .	F  Q:'$$vFetch6()  D
 ..		;
 ..  S FKEYS=rs
 ..		;
 ..		S FKEYS=","_$translate(FKEYS,$char(9),",")_","
 ..		Q:(FKEYS'[TESTDI) 
 ..		;
 ..		; Foreign key to ~p1 table. Cannot modify attributes.
 ..		I ($piece(FKEYS,",",2)'=vobj(this,-4)) D throwError($$^MSG(3963,$piece(FKEYS,",",2)))
 ..		D throwError($$^MSG(3963,$piece(FKEYS,",",3)))
 ..		Q 
 . Q 
 ;
 I ($P(vobj(this),$C(124),9)="L"),((%O=0)!($S($D(vobj(this,-100,"0*","TYP")):$P($E(vobj(this,-100,"0*","TYP"),5,9999),$C(124)),1:$P(vobj(this),$C(124),9))'="L")) D
 .	;
 .  S:'$D(vobj(this,-100,"0*","REQ")) vobj(this,-100,"0*","REQ")="L015"_$P(vobj(this),$C(124),15),vobj(this,-100,"0*")="" S $P(vobj(this),$C(124),15)=1
 .	I ($P(vobj(this),$C(124),3)="")  S:'$D(vobj(this,-100,"0*","DFT")) vobj(this,-100,"0*","DFT")="T003"_$P(vobj(this),$C(124),3),vobj(this,-100,"0*")="" S $P(vobj(this),$C(124),3)=0
 .	Q 
 ;
 ; Prohibit assignment of sub-field to a non-master column
 I '($P($P(vobj(this),$C(124),18),$C(126),4)="")!'($P($P(vobj(this),$C(124),18),$C(126),1)="")!'($P($P(vobj(this),$C(124),18),$C(126),2)="")!'($P($P(vobj(this),$C(124),18),$C(126),3)="") D
 .	;
 .	N rs,vos8,vos9,vos10,vos11,vos12,vos13,vos14  N V1,V2,V3 S V1=vobj(this,-4),V2=$P(vobj(this),$C(124),1),V3=$P(vobj(this),$C(124),21) S rs=$$vOpen7()
 .	;
 . I '$G(vos8) D throwError("Cannot assign a subfield to a non-masterfield column")
 . Q 
 ;
 I ($P(td,"|",4)>1),'($P(vobj(this),$C(124),1)="") D
 .	;
 .	N isError S isError=0
 .	;
 .	I (($P(vobj(this),$C(124),9)="B")!($P(vobj(this),$C(124),9)="M")) D
 ..		;
 ..		N rs,vos15,vos16,vos17,vos18,vos19,vos20,vos21  N V1,V2,V3 S V1=vobj(this,-4),V2=$P(vobj(this),$C(124),1),V3=vobj(this,-5) S rs=$$vOpen8()
 ..		;
 ..		I $$vFetch8() S isError=1
 ..  Q 
 .	E  D
 ..		;
 ..		N rs,vos22,vos23,vos24,vos25,vos26,vos27,vos28  N V1,V2 S V1=vobj(this,-4),V2=$P(vobj(this),$C(124),1) S rs=$$vOpen9()
 ..		;
 ..		I $$vFetch9() S isError=1
 ..  Q 
 .	;
 .	I isError D throwError("Cannot have both memo/blob and data on same node")
 .	Q 
 ;
 I ($P(td,"|",4)=11),(($P(vobj(this),$C(124),9)="M")!($P(vobj(this),$C(124),9)="B")),((","_$P(td,"|",3)_",")[(","_$P(vobj(this),$C(124),1)_",")) D throwError("Record type 11 cannot have memo/blob on key node")
 ;
 Q 
 ;
vRCbeforeInsTrigs(this,vRCparams) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 N DI S DI=vobj(this,-5)
 D vRCTrig4(this,this,vRCparams) I ER D throwError($get(RM))
 Q 
 ;
vRCbeforeUpdTrigs(this,vRCparams,vRCaudit) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 N DI S DI=vobj(this,-5)
 Q:'$D(vobj(this,-100)) 
 D vRCTrig4(this,this,vRCparams) I ER D throwError($get(RM))
 D AUDIT^UCUTILN(this,.vRCaudit,10,"|")
 Q 
 ;
vRCafterInsTrigs(this,vRCparams) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 N DI S DI=vobj(this,-5)
 D vRCTrig2(this,this,vRCparams) I ER D throwError($get(RM))
 Q 
 ;
vRCafterUpdTrigs(this,vRCparams) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 N DI S DI=vobj(this,-5)
 Q:'$D(vobj(this,-100)) 
 D vRCTrig3(this,this,vRCparams) I ER D throwError($get(RM))
 Q 
 ;
vRCafterDelTrigs(this,vRCparams) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 N DI S DI=vobj(this,-5)
 D vRCTrig1(this,this,vRCparams) I ER D throwError($get(RM))
 Q 
 ;
vRCvalidateDD(this,processMode) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($L(vobj(this,-3))>12) D vRCvalidateDDerr("%LIBS",$$^MSG(1076,12))
 S X=vobj(this,-4) I '(X="") S errmsg=$$VAL^DBSVER("U",256,1,,"X?1A.AN!(X?1""%"".AN)!(X?.A.""_"".E)") I '(errmsg="") D vRCvalidateDDerr("FID",$$^MSG(979,"DBTBL1D.FID"_" "_errmsg))
 S X=vobj(this,-5) I '(X="") S errmsg=$$VAL^DBSVER("U",256,1,,"X?1""%"".AN!(X?.A.""_"".E)") I '(errmsg="") D vRCvalidateDDerr("DI",$$^MSG(979,"DBTBL1D.DI"_" "_errmsg))
 I ($L($P(vobj(this),$C(124),32))>40) D vRCvalidateDDerr("ALIAS",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),16))>255) D vRCvalidateDDerr("CMP",$$^MSG(1076,255))
 I '($P(vobj(this),$C(124),24)=""),'(+$P(vobj(this),$C(124),24)=$P(vobj(this),$C(124),24))  S $P(vobj(this),$C(124),24)=$$vRCtrimNumber($P(vobj(this),$C(124),24))
 S X=$P(vobj(this),$C(124),24) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("CNV",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),14)=""),'(+$P(vobj(this),$C(124),14)=$P(vobj(this),$C(124),14))  S $P(vobj(this),$C(124),14)=$$vRCtrimNumber($P(vobj(this),$C(124),14))
 S X=$P(vobj(this),$C(124),14) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("DEC",$$^MSG(742,"N"))
 I ($L($P(vobj(this),$C(124),30))>255) D vRCvalidateDDerr("DEPOSTP",$$^MSG(1076,255))
 I ($L($P(vobj(this),$C(124),29))>255) D vRCvalidateDDerr("DEPREP",$$^MSG(1076,255))
 I ($L($P(vobj(this),$C(124),10))>40) D vRCvalidateDDerr("DES",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),3))>58) D vRCvalidateDDerr("DFT",$$^MSG(1076,58))
 I ($P(vobj(this),$C(124),4)'=$ZCONVERT($P(vobj(this),$C(124),4),"U")) D vRCvalidateDDerr("DOM",$$^MSG(1476))
 I ($L($P(vobj(this),$C(124),4))>20) D vRCvalidateDDerr("DOM",$$^MSG(1076,20))
 I '(($P(vobj(this),$C(124),17)=1)!($P(vobj(this),$C(124),17)=0)) D vRCvalidateDDerr("ISMASTER",$$^MSG(742,"L"))
 S X=$P(vobj(this),$C(124),11) I '(X=""),'((","_"S,N,B1,B2,B3,B4"_",")[(","_X_",")) D vRCvalidateDDerr("ITP",$$^MSG(1485,X))
 I '($P(vobj(this),$C(124),2)=""),'(+$P(vobj(this),$C(124),2)=$P(vobj(this),$C(124),2))  S $P(vobj(this),$C(124),2)=$$vRCtrimNumber($P(vobj(this),$C(124),2))
 S X=$P(vobj(this),$C(124),2) I '(X=""),(X'?1.7N),(X'?1"-"1.6N) D vRCvalidateDDerr("LEN",$$^MSG(742,"N"))
 S X=$P(vobj(this),$C(124),25) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("LTD",$$^MSG(742,"D"))
 I ($L($P(vobj(this),$C(124),13))>25) D vRCvalidateDDerr("MAX",$$^MSG(1076,25))
 I ($P(vobj(this),$C(124),27)'=$ZCONVERT($P(vobj(this),$C(124),27),"U")) D vRCvalidateDDerr("MDD",$$^MSG(1476))
 I ($L($P(vobj(this),$C(124),27))>12) D vRCvalidateDDerr("MDD",$$^MSG(1076,12))
 I ($L($P(vobj(this),$C(124),12))>25) D vRCvalidateDDerr("MIN",$$^MSG(1076,25))
 I ($L($P(vobj(this),$C(124),1))>26) D vRCvalidateDDerr("NOD",$$^MSG(1076,26))
 I '(($P(vobj(this),$C(124),31)=1)!($P(vobj(this),$C(124),31)=0)) D vRCvalidateDDerr("NULLIND",$$^MSG(742,"L"))
 I '($P(vobj(this),$C(124),21)=""),'(+$P(vobj(this),$C(124),21)=$P(vobj(this),$C(124),21))  S:'$D(vobj(this,-100,"0*","POS")) vobj(this,-100,"0*","POS")="N021"_$P(vobj(this),$C(124),21),vobj(this,-100,"0*")="" S $P(vobj(this),$C(124),21)=$$vRCtrimNumber($P(vobj(this),$C(124),21))
 S X=$P(vobj(this),$C(124),21) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("POS",$$^MSG(742,"N"))
 I ($L($P(vobj(this),$C(124),6))>60) D vRCvalidateDDerr("PTN",$$^MSG(1076,60))
 I '(($P(vobj(this),$C(124),15)=1)!($P(vobj(this),$C(124),15)=0)) D vRCvalidateDDerr("REQ",$$^MSG(742,"L"))
 I ($L($P(vobj(this),$C(124),22))>40) D vRCvalidateDDerr("RHD",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),18))>20) D vRCvalidateDDerr("SFD",$$^MSG(1076,20))
 S X=$P($P(vobj(this),$C(124),18),$C(126),2) I '(X=""),'($D(^DBCTL("SYS","DELIM",X))#2) D vRCvalidateDDerr("SFD1",$$^MSG(1485,X))
 S X=$P($P(vobj(this),$C(124),18),$C(126),3) I '(X=""),'($D(^DBCTL("SYS","DELIM",X))#2) D vRCvalidateDDerr("SFD2",$$^MSG(1485,X))
 I '($P($P(vobj(this),$C(124),18),$C(126),4)=""),'(+$P($P(vobj(this),$C(124),18),$C(126),4)=$P($P(vobj(this),$C(124),18),$C(126),4))  S $P(vobj(this),$C(124),18)=$$setSf^UCCOLSF($P(vobj(this),$C(124),18),$$vRCtrimNumber($P($P(vobj(this),$C(124),18),$C(126),4)),"",126,"",4)
 S X=$P($P(vobj(this),$C(124),18),$C(126),4) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("SFP",$$^MSG(742,"N"))
 I ($P($P(vobj(this),$C(124),18),$C(126),1)'=$ZCONVERT($P($P(vobj(this),$C(124),18),$C(126),1),"U")) D vRCvalidateDDerr("SFT",$$^MSG(1476))
 I ($L($P($P(vobj(this),$C(124),18),$C(126),1))>12) D vRCvalidateDDerr("SFT",$$^MSG(1076,12))
 I '($P(vobj(this),$C(124),19)=""),'(+$P(vobj(this),$C(124),19)=$P(vobj(this),$C(124),19))  S $P(vobj(this),$C(124),19)=$$vRCtrimNumber($P(vobj(this),$C(124),19))
 S X=$P(vobj(this),$C(124),19) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("SIZ",$$^MSG(742,"N"))
 I '(($P(vobj(this),$C(124),23)=1)!($P(vobj(this),$C(124),23)=0)) D vRCvalidateDDerr("SRL",$$^MSG(742,"L"))
 I ($L($P(vobj(this),$C(124),5))>255) D vRCvalidateDDerr("TBL",$$^MSG(1076,255))
 S X=$P(vobj(this),$C(124),9) I '(X=""),'($D(^DBCTL("SYS","DVFM",X))#2) D vRCvalidateDDerr("TYP",$$^MSG(1485,X))
 I ($L($P(vobj(this),$C(124),26))>40) D vRCvalidateDDerr("USER",$$^MSG(1076,40))
 I '(($P(vobj(this),$C(124),28)=1)!($P(vobj(this),$C(124),28)=0)) D vRCvalidateDDerr("VAL4EXT",$$^MSG(742,"L"))
 I ($L($P(vobj(this),$C(124),7))>58) D vRCvalidateDDerr("XPO",$$^MSG(1076,58))
 I ($L($P(vobj(this),$C(124),8))>58) D vRCvalidateDDerr("XPR",$$^MSG(1076,58))
 Q 
 ;
vRCvalidateDD1(this) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($D(vobj(this,-100,"1*","%LIBS"))&($P($E($G(vobj(this,-100,"1*","%LIBS")),5,9999),$C(124))'=vobj(this,-3))) I ($L(vobj(this,-3))>12) D vRCvalidateDDerr("%LIBS",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"2*","FID"))&($P($E($G(vobj(this,-100,"2*","FID")),5,9999),$C(124))'=vobj(this,-4))) S X=vobj(this,-4) I '(X="") S errmsg=$$VAL^DBSVER("U",256,1,,"X?1A.AN!(X?1""%"".AN)!(X?.A.""_"".E)") I '(errmsg="") D vRCvalidateDDerr("FID",$$^MSG(979,"DBTBL1D.FID"_" "_errmsg))
 I ($D(vobj(this,-100,"3*","DI"))&($P($E($G(vobj(this,-100,"3*","DI")),5,9999),$C(124))'=vobj(this,-5))) S X=vobj(this,-5) I '(X="") S errmsg=$$VAL^DBSVER("U",256,1,,"X?1""%"".AN!(X?.A.""_"".E)") I '(errmsg="") D vRCvalidateDDerr("DI",$$^MSG(979,"DBTBL1D.DI"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","ALIAS"))&($P($E($G(vobj(this,-100,"0*","ALIAS")),5,9999),$C(124))'=$P(vobj(this),$C(124),32))) I ($L($P(vobj(this),$C(124),32))>40) D vRCvalidateDDerr("ALIAS",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","CMP"))&($P($E($G(vobj(this,-100,"0*","CMP")),5,9999),$C(124))'=$P(vobj(this),$C(124),16))) I ($L($P(vobj(this),$C(124),16))>255) D vRCvalidateDDerr("CMP",$$^MSG(1076,255))
 I ($D(vobj(this,-100,"0*","CNV"))&($P($E($G(vobj(this,-100,"0*","CNV")),5,9999),$C(124))'=$P(vobj(this),$C(124),24))),'($P(vobj(this),$C(124),24)=""),'(+$P(vobj(this),$C(124),24)=$P(vobj(this),$C(124),24))  S $P(vobj(this),$C(124),24)=$$vRCtrimNumber($P(vobj(this),$C(124),24))
 I ($D(vobj(this,-100,"0*","CNV"))&($P($E($G(vobj(this,-100,"0*","CNV")),5,9999),$C(124))'=$P(vobj(this),$C(124),24))) S X=$P(vobj(this),$C(124),24) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("CNV",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","DEC"))&($P($E($G(vobj(this,-100,"0*","DEC")),5,9999),$C(124))'=$P(vobj(this),$C(124),14))),'($P(vobj(this),$C(124),14)=""),'(+$P(vobj(this),$C(124),14)=$P(vobj(this),$C(124),14))  S $P(vobj(this),$C(124),14)=$$vRCtrimNumber($P(vobj(this),$C(124),14))
 I ($D(vobj(this,-100,"0*","DEC"))&($P($E($G(vobj(this,-100,"0*","DEC")),5,9999),$C(124))'=$P(vobj(this),$C(124),14))) S X=$P(vobj(this),$C(124),14) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("DEC",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","DEPOSTP"))&($P($E($G(vobj(this,-100,"0*","DEPOSTP")),5,9999),$C(124))'=$P(vobj(this),$C(124),30))) I ($L($P(vobj(this),$C(124),30))>255) D vRCvalidateDDerr("DEPOSTP",$$^MSG(1076,255))
 I ($D(vobj(this,-100,"0*","DEPREP"))&($P($E($G(vobj(this,-100,"0*","DEPREP")),5,9999),$C(124))'=$P(vobj(this),$C(124),29))) I ($L($P(vobj(this),$C(124),29))>255) D vRCvalidateDDerr("DEPREP",$$^MSG(1076,255))
 I ($D(vobj(this,-100,"0*","DES"))&($P($E($G(vobj(this,-100,"0*","DES")),5,9999),$C(124))'=$P(vobj(this),$C(124),10))) I ($L($P(vobj(this),$C(124),10))>40) D vRCvalidateDDerr("DES",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","DFT"))&($P($E($G(vobj(this,-100,"0*","DFT")),5,9999),$C(124))'=$P(vobj(this),$C(124),3))) I ($L($P(vobj(this),$C(124),3))>58) D vRCvalidateDDerr("DFT",$$^MSG(1076,58))
 I ($P(vobj(this),$C(124),4)'=$ZCONVERT($P(vobj(this),$C(124),4),"U")) D vRCvalidateDDerr("DOM",$$^MSG(1476))
 I ($D(vobj(this,-100,"0*","DOM"))&($P($E($G(vobj(this,-100,"0*","DOM")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))) I ($L($P(vobj(this),$C(124),4))>20) D vRCvalidateDDerr("DOM",$$^MSG(1076,20))
 I ($D(vobj(this,-100,"0*","ISMASTER"))&($P($E($G(vobj(this,-100,"0*","ISMASTER")),5,9999),$C(124))'=$P(vobj(this),$C(124),17))) I '(($P(vobj(this),$C(124),17)=1)!($P(vobj(this),$C(124),17)=0)) D vRCvalidateDDerr("ISMASTER",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","ITP"))&($P($E($G(vobj(this,-100,"0*","ITP")),5,9999),$C(124))'=$P(vobj(this),$C(124),11))) S X=$P(vobj(this),$C(124),11) I '(X=""),'((","_"S,N,B1,B2,B3,B4"_",")[(","_X_",")) D vRCvalidateDDerr("ITP",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","LEN"))&($P($E($G(vobj(this,-100,"0*","LEN")),5,9999),$C(124))'=$P(vobj(this),$C(124),2))),'($P(vobj(this),$C(124),2)=""),'(+$P(vobj(this),$C(124),2)=$P(vobj(this),$C(124),2))  S $P(vobj(this),$C(124),2)=$$vRCtrimNumber($P(vobj(this),$C(124),2))
 I ($D(vobj(this,-100,"0*","LEN"))&($P($E($G(vobj(this,-100,"0*","LEN")),5,9999),$C(124))'=$P(vobj(this),$C(124),2))) S X=$P(vobj(this),$C(124),2) I '(X=""),(X'?1.7N),(X'?1"-"1.6N) D vRCvalidateDDerr("LEN",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","LTD"))&($P($E($G(vobj(this,-100,"0*","LTD")),5,9999),$C(124))'=$P(vobj(this),$C(124),25))) S X=$P(vobj(this),$C(124),25) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("LTD",$$^MSG(742,"D"))
 I ($D(vobj(this,-100,"0*","MAX"))&($P($E($G(vobj(this,-100,"0*","MAX")),5,9999),$C(124))'=$P(vobj(this),$C(124),13))) I ($L($P(vobj(this),$C(124),13))>25) D vRCvalidateDDerr("MAX",$$^MSG(1076,25))
 I ($P(vobj(this),$C(124),27)'=$ZCONVERT($P(vobj(this),$C(124),27),"U")) D vRCvalidateDDerr("MDD",$$^MSG(1476))
 I ($D(vobj(this,-100,"0*","MDD"))&($P($E($G(vobj(this,-100,"0*","MDD")),5,9999),$C(124))'=$P(vobj(this),$C(124),27))) I ($L($P(vobj(this),$C(124),27))>12) D vRCvalidateDDerr("MDD",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","MIN"))&($P($E($G(vobj(this,-100,"0*","MIN")),5,9999),$C(124))'=$P(vobj(this),$C(124),12))) I ($L($P(vobj(this),$C(124),12))>25) D vRCvalidateDDerr("MIN",$$^MSG(1076,25))
 I ($D(vobj(this,-100,"0*","NOD"))&($P($E($G(vobj(this,-100,"0*","NOD")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))) I ($L($P(vobj(this),$C(124),1))>26) D vRCvalidateDDerr("NOD",$$^MSG(1076,26))
 I ($D(vobj(this,-100,"0*","NULLIND"))&($P($E($G(vobj(this,-100,"0*","NULLIND")),5,9999),$C(124))'=$P(vobj(this),$C(124),31))) I '(($P(vobj(this),$C(124),31)=1)!($P(vobj(this),$C(124),31)=0)) D vRCvalidateDDerr("NULLIND",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","POS"))&($P($E($G(vobj(this,-100,"0*","POS")),5,9999),$C(124))'=$P(vobj(this),$C(124),21))),'($P(vobj(this),$C(124),21)=""),'(+$P(vobj(this),$C(124),21)=$P(vobj(this),$C(124),21))  S:'$D(vobj(this,-100,"0*","POS")) vobj(this,-100,"0*","POS")="N021"_$P(vobj(this),$C(124),21),vobj(this,-100,"0*")="" S $P(vobj(this),$C(124),21)=$$vRCtrimNumber($P(vobj(this),$C(124),21))
 I ($D(vobj(this,-100,"0*","POS"))&($P($E($G(vobj(this,-100,"0*","POS")),5,9999),$C(124))'=$P(vobj(this),$C(124),21))) S X=$P(vobj(this),$C(124),21) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("POS",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","PTN"))&($P($E($G(vobj(this,-100,"0*","PTN")),5,9999),$C(124))'=$P(vobj(this),$C(124),6))) I ($L($P(vobj(this),$C(124),6))>60) D vRCvalidateDDerr("PTN",$$^MSG(1076,60))
 I ($D(vobj(this,-100,"0*","REQ"))&($P($E($G(vobj(this,-100,"0*","REQ")),5,9999),$C(124))'=$P(vobj(this),$C(124),15))) I '(($P(vobj(this),$C(124),15)=1)!($P(vobj(this),$C(124),15)=0)) D vRCvalidateDDerr("REQ",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","RHD"))&($P($E($G(vobj(this,-100,"0*","RHD")),5,9999),$C(124))'=$P(vobj(this),$C(124),22))) I ($L($P(vobj(this),$C(124),22))>40) D vRCvalidateDDerr("RHD",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","SFD"))&($P($E($G(vobj(this,-100,"0*","SFD")),5,9999),$C(124))'=$P(vobj(this),$C(124),18))) I ($L($P(vobj(this),$C(124),18))>20) D vRCvalidateDDerr("SFD",$$^MSG(1076,20))
 I ($D(vobj(this,-100,"0*","SFD1"))&($P($E($G(vobj(this,-100,"0*","SFD1")),5,9999),$C(124))'=$P($P(vobj(this),$C(124),18),$C(126),2))) S X=$P($P(vobj(this),$C(124),18),$C(126),2) I '(X=""),'($D(^DBCTL("SYS","DELIM",X))#2) D vRCvalidateDDerr("SFD1",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","SFD2"))&($P($E($G(vobj(this,-100,"0*","SFD2")),5,9999),$C(124))'=$P($P(vobj(this),$C(124),18),$C(126),3))) S X=$P($P(vobj(this),$C(124),18),$C(126),3) I '(X=""),'($D(^DBCTL("SYS","DELIM",X))#2) D vRCvalidateDDerr("SFD2",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","SFP"))&($P($E($G(vobj(this,-100,"0*","SFP")),5,9999),$C(124))'=$P($P(vobj(this),$C(124),18),$C(126),4))),'($P($P(vobj(this),$C(124),18),$C(126),4)=""),'(+$P($P(vobj(this),$C(124),18),$C(126),4)=$P($P(vobj(this),$C(124),18),$C(126),4))  S $P(vobj(this),$C(124),18)=$$setSf^UCCOLSF($P(vobj(this),$C(124),18),$$vRCtrimNumber($P($P(vobj(this),$C(124),18),$C(126),4)),"",126,"",4)
 I ($D(vobj(this,-100,"0*","SFP"))&($P($E($G(vobj(this,-100,"0*","SFP")),5,9999),$C(124))'=$P($P(vobj(this),$C(124),18),$C(126),4))) S X=$P($P(vobj(this),$C(124),18),$C(126),4) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("SFP",$$^MSG(742,"N"))
 I ($P($P(vobj(this),$C(124),18),$C(126),1)'=$ZCONVERT($P($P(vobj(this),$C(124),18),$C(126),1),"U")) D vRCvalidateDDerr("SFT",$$^MSG(1476))
 I ($D(vobj(this,-100,"0*","SFT"))&($P($E($G(vobj(this,-100,"0*","SFT")),5,9999),$C(124))'=$P($P(vobj(this),$C(124),18),$C(126),1))) I ($L($P($P(vobj(this),$C(124),18),$C(126),1))>12) D vRCvalidateDDerr("SFT",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","SIZ"))&($P($E($G(vobj(this,-100,"0*","SIZ")),5,9999),$C(124))'=$P(vobj(this),$C(124),19))),'($P(vobj(this),$C(124),19)=""),'(+$P(vobj(this),$C(124),19)=$P(vobj(this),$C(124),19))  S $P(vobj(this),$C(124),19)=$$vRCtrimNumber($P(vobj(this),$C(124),19))
 I ($D(vobj(this,-100,"0*","SIZ"))&($P($E($G(vobj(this,-100,"0*","SIZ")),5,9999),$C(124))'=$P(vobj(this),$C(124),19))) S X=$P(vobj(this),$C(124),19) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("SIZ",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","SRL"))&($P($E($G(vobj(this,-100,"0*","SRL")),5,9999),$C(124))'=$P(vobj(this),$C(124),23))) I '(($P(vobj(this),$C(124),23)=1)!($P(vobj(this),$C(124),23)=0)) D vRCvalidateDDerr("SRL",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","TBL"))&($P($E($G(vobj(this,-100,"0*","TBL")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))) I ($L($P(vobj(this),$C(124),5))>255) D vRCvalidateDDerr("TBL",$$^MSG(1076,255))
 I ($D(vobj(this,-100,"0*","TYP"))&($P($E($G(vobj(this,-100,"0*","TYP")),5,9999),$C(124))'=$P(vobj(this),$C(124),9))) S X=$P(vobj(this),$C(124),9) I '(X=""),'($D(^DBCTL("SYS","DVFM",X))#2) D vRCvalidateDDerr("TYP",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","USER"))&($P($E($G(vobj(this,-100,"0*","USER")),5,9999),$C(124))'=$P(vobj(this),$C(124),26))) I ($L($P(vobj(this),$C(124),26))>40) D vRCvalidateDDerr("USER",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","VAL4EXT"))&($P($E($G(vobj(this,-100,"0*","VAL4EXT")),5,9999),$C(124))'=$P(vobj(this),$C(124),28))) I '(($P(vobj(this),$C(124),28)=1)!($P(vobj(this),$C(124),28)=0)) D vRCvalidateDDerr("VAL4EXT",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","XPO"))&($P($E($G(vobj(this,-100,"0*","XPO")),5,9999),$C(124))'=$P(vobj(this),$C(124),7))) I ($L($P(vobj(this),$C(124),7))>58) D vRCvalidateDDerr("XPO",$$^MSG(1076,58))
 I ($D(vobj(this,-100,"0*","XPR"))&($P($E($G(vobj(this,-100,"0*","XPR")),5,9999),$C(124))'=$P(vobj(this),$C(124),8))) I ($L($P(vobj(this),$C(124),8))>58) D vRCvalidateDDerr("XPR",$$^MSG(1076,58))
 Q 
 ;
vRCvalidateDDerr(column,errmsg) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("DBTBL1D","MSG",979,"DBTBL1D."_column_" "_errmsg)
 I ER D throwError($get(RM))
 Q 
 ;
vRCtrimNumber(str) ; 
 I ($E(str,1)="0") S str=$$vStrTrim(str,-1,"0") I (str="") S str="0"
 I (str["."),($E(str,$L(str))="0") S str=$$RTCHR^%ZFUNC(str,"0") I ($E(str,$L(str))=".") S str=$E(str,1,$L(str)-1) I (str="") S str="0"
 Q str
 ;
vRCIdx1(this,processMode) ; DOMAIN (Domain Name)
 N ikey1 S ikey1=vobj(this,-3)
 N ikey4 S ikey4=$P(vobj(this),$C(124),4)
 I (ikey4="") S ikey4=$ZCHAR(254)
 N ikey5 S ikey5=vobj(this,-4)
 N ikey6 S ikey6=vobj(this,-5)
 I (processMode=2) D  Q 
 .	;   #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(^DBTBL(vobj(this,-3),1,vobj(this,-4),9,vobj(this,-5)))#2,'$D(^DBINDX(ikey1,"DOM","PBS",ikey4,ikey5,ikey6)) do SETERR^DBSEXECU("DBTBL1D","MSG",1225,"DBTBL1D.DOMAIN")
 .	;*** End of code by-passed by compiler ***
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 if (processMode<2) set ^DBINDX(ikey1,"DOM","PBS",ikey4,ikey5,ikey6)="" 
 ;*** End of code by-passed by compiler ***
 Q:(processMode=0) 
 I ($D(vobj(this,-100,"0*","DOM"))&($P($E($G(vobj(this,-100,"0*","DOM")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))) D
 .	S ikey4=$S($D(vobj(this,-100,"0*","DOM")):$P($E(vobj(this,-100,"0*","DOM"),5,9999),$C(124)),1:$P(vobj(this),$C(124),4))
 .	I (ikey4="") S ikey4=$ZCHAR(254)
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 kill ^DBINDX(ikey1,"DOM","PBS",ikey4,ikey5,ikey6)
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCIdx2(this,processMode) ; MDD (Master Dictionary Pointer)
 N ikey1 S ikey1=vobj(this,-3)
 N ikey3 S ikey3=$P(vobj(this),$C(124),27)
 I (ikey3="") S ikey3=$ZCHAR(254)
 N ikey4 S ikey4=vobj(this,-4)
 N ikey5 S ikey5=vobj(this,-5)
 I (processMode=2) D  Q 
 .	;   #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(^DBTBL(vobj(this,-3),1,vobj(this,-4),9,vobj(this,-5)))#2,'$D(^DBINDX(ikey1,"MDD",ikey3,ikey4,ikey5)) do SETERR^DBSEXECU("DBTBL1D","MSG",1225,"DBTBL1D.MDD")
 .	;*** End of code by-passed by compiler ***
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 if (processMode<2) set ^DBINDX(ikey1,"MDD",ikey3,ikey4,ikey5)="" 
 ;*** End of code by-passed by compiler ***
 Q:(processMode=0) 
 I ($D(vobj(this,-100,"0*","MDD"))&($P($E($G(vobj(this,-100,"0*","MDD")),5,9999),$C(124))'=$P(vobj(this),$C(124),27))) D
 .	S ikey3=$S($D(vobj(this,-100,"0*","MDD")):$P($E(vobj(this,-100,"0*","MDD"),5,9999),$C(124)),1:$P(vobj(this),$C(124),27))
 .	I (ikey3="") S ikey3=$ZCHAR(254)
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 kill ^DBINDX(ikey1,"MDD",ikey3,ikey4,ikey5)
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCIdx3(this,processMode) ; NODEPOS (Node/Position )
 N ikey1 S ikey1=vobj(this,-3)
 N ikey3 S ikey3=vobj(this,-4)
 N ikey4 S ikey4=$P(vobj(this),$C(124),1)
 I (ikey4="") S ikey4=$ZCHAR(254)
 N ikey5 S ikey5=$P(vobj(this),$C(124),21)
 I (ikey5="") S ikey5=$ZCHAR(254)
 N ikey6 S ikey6=vobj(this,-5)
 I (processMode=2) D  Q 
 .	;   #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(^DBTBL(vobj(this,-3),1,vobj(this,-4),9,vobj(this,-5)))#2,'$D(^DBINDX(ikey1,"STR",ikey3,ikey4,ikey5,ikey6)) do SETERR^DBSEXECU("DBTBL1D","MSG",1225,"DBTBL1D.NODEPOS")
 .	;*** End of code by-passed by compiler ***
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 if (processMode<2) set ^DBINDX(ikey1,"STR",ikey3,ikey4,ikey5,ikey6)="" 
 ;*** End of code by-passed by compiler ***
 Q:(processMode=0) 
 I ($D(vobj(this,-100,"0*","NOD"))&($P($E($G(vobj(this,-100,"0*","NOD")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))) D
 .	S ikey4=$S($D(vobj(this,-100,"0*","NOD")):$P($E(vobj(this,-100,"0*","NOD"),5,9999),$C(124)),1:$P(vobj(this),$C(124),1))
 .	I (ikey4="") S ikey4=$ZCHAR(254)
 .	Q 
 I ($D(vobj(this,-100,"0*","POS"))&($P($E($G(vobj(this,-100,"0*","POS")),5,9999),$C(124))'=$P(vobj(this),$C(124),21))) D
 .	S ikey5=$S($D(vobj(this,-100,"0*","POS")):$P($E(vobj(this,-100,"0*","POS"),5,9999),$C(124)),1:$P(vobj(this),$C(124),21))
 .	I (ikey5="") S ikey5=$ZCHAR(254)
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 kill ^DBINDX(ikey1,"STR",ikey3,ikey4,ikey5,ikey6)
 ;*** End of code by-passed by compiler ***
 Q 
 ;
rebuildIndexesAllRecs(indexList) ; 
 N audit
 I (indexList="") S indexList="*"
 N ds,vos1,vos2,vos3,vos4,vos5 S ds=$$vOpen10()
 F  Q:'$$vFetch10()  D
 . N dbtbl1d S dbtbl1d=$$vRCgetRecord1^RecordDBTBL1D($P(ds,$C(9),1),$P(ds,$C(9),2),$P(ds,$C(9),3),1)
 .	I ((","_indexList_",")[",*,") D updateIndexes(dbtbl1d,0,.audit) K vobj(+$G(dbtbl1d)) Q 
 .	I ((","_indexList_",")[",DOMAIN,") D vRCIdx1(dbtbl1d,0)
 .	I ((","_indexList_",")[",MDD,") D vRCIdx2(dbtbl1d,0)
 .	I ((","_indexList_",")[",NODEPOS,") D vRCIdx3(dbtbl1d,0)
 .	K vobj(+$G(dbtbl1d)) Q 
 Q 
 ;
rebuildIndexes(this,indexList) ; 
 N audit
 I ((","_indexList_",")[",*,") D updateIndexes(this,0,.audit) Q 
 I ((","_indexList_",")[",DOMAIN,") D vRCIdx1(this,0)
 I ((","_indexList_",")[",MDD,") D vRCIdx2(this,0)
 I ((","_indexList_",")[",NODEPOS,") D vRCIdx3(this,0)
 Q 
 ;
updateIndexes(this,processMode,audit) ; 
 I (processMode=1) D
 .	I ($D(vobj(this,-100,"0*","DOM"))&($P($E($G(vobj(this,-100,"0*","DOM")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))) D vRCIdx1(this,1)
 .	I ($D(vobj(this,-100,"0*","MDD"))&($P($E($G(vobj(this,-100,"0*","MDD")),5,9999),$C(124))'=$P(vobj(this),$C(124),27))) D vRCIdx2(this,1)
 .	I ($D(vobj(this,-100,"0*","NOD"))&($P($E($G(vobj(this,-100,"0*","NOD")),5,9999),$C(124))'=$P(vobj(this),$C(124),1)))!($D(vobj(this,-100,"0*","POS"))&($P($E($G(vobj(this,-100,"0*","POS")),5,9999),$C(124))'=$P(vobj(this),$C(124),21))) D vRCIdx3(this,1)
 .	Q 
 E  D
 .	D vRCIdx1(this,processMode)
 .	D vRCIdx2(this,processMode)
 .	D vRCIdx3(this,processMode)
 .	Q 
 Q 
 ;
vRCkeyChanged(this,vRCparams,vRCaudit) ; 
 N vTp
 N newkeys N oldkeys N vRCauditIns
 N oldparams S oldparams=vRCparams
 N newKey1 S newKey1=vobj(this,-3)
 N oldKey1 S oldKey1=$S($D(vobj(this,-100,"1*","%LIBS")):$P($E(vobj(this,-100,"1*","%LIBS"),5,9999),$C(124)),1:vobj(this,-3))
 N newKey2 S newKey2=vobj(this,-4)
 N oldKey2 S oldKey2=$S($D(vobj(this,-100,"2*","FID")):$P($E(vobj(this,-100,"2*","FID"),5,9999),$C(124)),1:vobj(this,-4))
 N newKey3 S newKey3=vobj(this,-5)
 N oldKey3 S oldKey3=$S($D(vobj(this,-100,"3*","DI")):$P($E(vobj(this,-100,"3*","DI"),5,9999),$C(124)),1:vobj(this,-5))
  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) I ($D(^DBTBL(V1,1,V2,9,V3))#2) D throwError($$^MSG(2327))
 S newkeys=newKey1_","_newKey2_","_newKey3
 S oldkeys=oldKey1_","_oldKey2_","_oldKey3
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
  S vobj(this,-5)=oldKey3
 S vRCparams=$$setPar^UCUTILN(vRCparams,"NOINDEX")
 I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 I (("/"_vRCparams_"/")["/TRIGBEF/") D vRCbeforeUpdTrigs(this,vRCparams,.vRCaudit)
 I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,1)
 D vRCmiscValidations(this,vRCparams,1)
 D vRCupdateDB(this,1,vRCparams,.vRCaudit,.vRCauditIns)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
  S vobj(this,-5)=newKey3
 N newrec S newrec=$$vReCp3(this)
 S vobj(newrec,-2)=0
 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1D(newrec,$$initPar^UCUTILN($$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/"))) K vobj(newrec,-100) S vobj(newrec,-2)=1 TC:vTp  
 D
 .	N %O S %O=1
 .	N ER S ER=0
 .	N RM S RM=""
 .	;   #ACCEPT Date=10/24/2008; Pgm=RussellDS; CR=30801; Group=ACCESS
 .	D CASUPD^DBSEXECU("DBTBL1D",oldkeys,newkeys)
 .	I ER D throwError($get(RM))
 .	Q 
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
  S vobj(this,-5)=oldKey3
 S vRCparams=$$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
 D vRCdelete(this,vRCparams,.vRCaudit,1)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
  S vobj(this,-5)=newKey3
 S vRCparams=oldparams
 I (("/"_vRCparams_"/")["/TRIGAFT/") D vRCafterUpdTrigs(this,vRCparams)
 K vobj(+$G(newrec)) Q 
 ;
throwError(MSG) ; 
 S $ZE="0,"_$ZPOS_","_"%PSL-E-DBFILER,"_$translate(MSG,",","~"),$EC=",U1001,"
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrRep(object,p1,p2,p3,p4,qt) ; String.replace
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I p3<0 Q object
 I $L(p1)=1,$L(p2)<2,'p3,'p4,(qt="") Q $translate(object,p1,p2)
 ;
 N y S y=0
 F  S y=$$vStrFnd(object,p1,y,p4,qt) Q:y=0  D
 .	S object=$E(object,1,y-$L(p1)-1)_p2_$E(object,y,1048575)
 .	S y=y+$L(p2)-$L(p1)
 .	I p3 S p3=p3-1 I p3=0 S y=$L(object)+1
 .	Q 
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vDbDe1() ; DELETE FROM DBTBL1D WHERE %LIBS='SYSDEV' AND FID=:V2 AND DI=:V3
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 TS (vobj):transactionid="CS"
 N vRec S vRec=$$vRCgetRecord1^RecordDBTBL1D("SYSDEV",V2,V3,0)
 I $G(vobj(vRec,-2))=1 S vobj(vRec,-2)=3 D
 .	;     #ACCEPT Date=07/09/2008; Pgm=RussellDS; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	D vSave^RecordDBTBL1D(vRec,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/",0)
 .	;*** End of code by-passed by compiler ***
 .	Q 
  TC:$TL 
 K vobj(+$G(vRec)) Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrTrim(object,p1,p2) ; String.trim
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 I p1'<0 S object=$$RTCHR^%ZFUNC(object,p2)
 I p1'>0 F  Q:$E(object,1)'=p2  S object=$E(object,2,1048575)
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vStrFnd(object,p1,p2,p3,qt) ; String.find
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I (p1="") Q $S(p2<1:1,1:+p2)
 I p3 S object=$ZCONVERT(object,"U") S p1=$ZCONVERT(p1,"U")
 S p2=$F(object,p1,p2)
 I '(qt=""),$L($E(object,1,p2-1),qt)#2=0 D
 .	F  S p2=$F(object,p1,p2) Q:p2=0!($L($E(object,1,p2-1),qt)#2) 
 .	Q 
 Q p2
 ;
vOpen1() ; FID FROM DBTBL1 WHERE %LIBS='SYSDEV' AND PARFID=:V1
 ;
 ;
 S vos1=2
 D vL1a1
 Q ""
 ;
vL1a0 S vos1=0 Q
vL1a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=$G(V1) I vos3="",'$D(V1) G vL1a0
 S vos4=""
vL1a4 S vos4=$O(^DBINDX("SYSDEV","PARFID",vos3,vos4),1) I vos4="" G vL1a0
 Q
 ;
vFetch1() ;
 ;
 ;
 I vos1=1 D vL1a4
 I vos1=2 S vos1=1
 ;
 I vos1=0 S rs="" Q 0
 ;
 S rs=$S(vos4=vos2:"",1:vos4)
 ;
 Q 1
 ;
vOpen10() ; %LIBS,FID,DI FROM DBTBL1D
 ;
 ;
 S vos1=2
 D vL10a1
 Q ""
 ;
vL10a0 S vos1=0 Q
vL10a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=""
vL10a3 S vos3=$O(^DBTBL(vos3),1) I vos3="" G vL10a0
 S vos4=""
vL10a5 S vos4=$O(^DBTBL(vos3,1,vos4),1) I vos4="" G vL10a3
 S vos5=""
vL10a7 S vos5=$O(^DBTBL(vos3,1,vos4,9,vos5),1) I vos5="" G vL10a5
 Q
 ;
vFetch10() ;
 ;
 ;
 I vos1=1 D vL10a7
 I vos1=2 S vos1=1
 ;
 I vos1=0 S ds="" Q 0
 ;
 S ds=$S(vos3=vos2:"",1:vos3)_$C(9)_$S(vos4=vos2:"",1:vos4)_$C(9)_$S(vos5=vos2:"",1:vos5)
 ;
 Q 1
 ;
vOpen2() ; MDD FROM DBTBL1D WHERE %LIBS='SYSDEV' AND MDDFID=:V1 AND MDD=:V2
 ;
 ;
 S vos1=2
 D vL2a1
 Q ""
 ;
vL2a0 S vos1=0 Q
vL2a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=$G(V1) I vos3="",'$D(V1) G vL2a0
 S vos4=$G(V2) I vos4="",'$D(V2) G vL2a0
 S vos5=""
vL2a5 S vos5=$O(^DBINDX("SYSDEV","MDD",vos4,vos5),1) I vos5="" G vL2a0
 S vos6=""
vL2a7 S vos6=$O(^DBINDX("SYSDEV","MDD",vos4,vos5,vos6),1) I vos6="" G vL2a5
 S vos7=$$MDD^DBSDF(vos5)
 I '(vos7=vos3) G vL2a7
 Q
 ;
vFetch2() ;
 ;
 ;
 I vos1=1 D vL2a7
 I vos1=2 S vos1=1
 ;
 I vos1=0 S rs="" Q 0
 ;
 S rs=vos4
 ;
 Q 1
 ;
vOpen3() ; FID FROM DBTBL1 WHERE %LIBS='SYSDEV' AND PARFID=:V3
 ;
 ;
 S vos8=2
 D vL3a1
 Q ""
 ;
vL3a0 S vos8=0 Q
vL3a1 S vos9=$$BYTECHAR^SQLUTL(254)
 S vos10=$G(V3) I vos10="",'$D(V3) G vL3a0
 S vos11=""
vL3a4 S vos11=$O(^DBINDX("SYSDEV","PARFID",vos10,vos11),1) I vos11="" G vL3a0
 Q
 ;
vFetch3() ;
 ;
 ;
 I vos8=1 D vL3a4
 I vos8=2 S vos8=1
 ;
 I vos8=0 S rs2="" Q 0
 ;
 S rs2=$S(vos11=vos9:"",1:vos11)
 ;
 Q 1
 ;
vOpen4() ; MDD FROM DBTBL1D WHERE %LIBS='SYSDEV' AND MDDFID=:V1 AND MDD=:V2
 ;
 ;
 S vos1=2
 D vL4a1
 Q ""
 ;
vL4a0 S vos1=0 Q
vL4a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=$G(V1) I vos3="",'$D(V1) G vL4a0
 S vos4=$G(V2) I vos4="",'$D(V2) G vL4a0
 S vos5=""
vL4a5 S vos5=$O(^DBINDX("SYSDEV","MDD",vos4,vos5),1) I vos5="" G vL4a0
 S vos6=""
vL4a7 S vos6=$O(^DBINDX("SYSDEV","MDD",vos4,vos5,vos6),1) I vos6="" G vL4a5
 S vos7=$$MDD^DBSDF(vos5)
 I '(vos7=vos3) G vL4a7
 Q
 ;
vFetch4() ;
 ;
 ;
 I vos1=1 D vL4a7
 I vos1=2 S vos1=1
 ;
 I vos1=0 S rs="" Q 0
 ;
 S rs=vos4
 ;
 Q 1
 ;
vOpen5() ; FID FROM DBTBL1 WHERE %LIBS='SYSDEV' AND PARFID=:V3
 ;
 ;
 S vos8=2
 D vL5a1
 Q ""
 ;
vL5a0 S vos8=0 Q
vL5a1 S vos9=$$BYTECHAR^SQLUTL(254)
 S vos10=$G(V3) I vos10="",'$D(V3) G vL5a0
 S vos11=""
vL5a4 S vos11=$O(^DBINDX("SYSDEV","PARFID",vos10,vos11),1) I vos11="" G vL5a0
 Q
 ;
vFetch5() ;
 ;
 ;
 I vos8=1 D vL5a4
 I vos8=2 S vos8=1
 ;
 I vos8=0 S rs2="" Q 0
 ;
 S rs2=$S(vos11=vos9:"",1:vos11)
 ;
 Q 1
 ;
vOpen6() ; FID,TBLREF,FKEYS FROM DBTBL1F WHERE ( TBLREF=:V1 OR FID=:V2 ) AND %LIBS='SYSDEV'
 ;
 ;
 S vos1=2
 D vL6a1
 Q ""
 ;
vL6a0 S vos1=0 Q
vL6a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=$G(V1) I vos3="",'$D(V1) G vL6a0
 S vos4=$G(V2) I vos4="" G vL6a0
 S vos5=""
vL6a5 S vos5=$O(^DBTBL("SYSDEV",19,vos5),1) I vos5="" G vL6a0
 S vos6=""
vL6a7 S vos6=$O(^DBTBL("SYSDEV",19,vos5,vos6),1) I vos6="" G vL6a5
 S vos7=$G(^DBTBL("SYSDEV",19,vos5,vos6))
 I '(($P(vos7,"|",5)=vos3!(vos5=vos4))) G vL6a7
 Q
 ;
vFetch6() ;
 ;
 ;
 I vos1=1 D vL6a7
 I vos1=2 S vos1=1
 ;
 I vos1=0 S rs="" Q 0
 ;
 S vos7=$G(^DBTBL("SYSDEV",19,vos5,vos6))
 S rs=$S(vos5=vos2:"",1:vos5)_$C(9)_$P(vos7,"|",5)_$C(9)_$S(vos6=vos2:"",1:vos6)
 ;
 Q 1
 ;
vOpen7() ; DI FROM DBTBL1D WHERE %LIBS='SYSDEV' AND FID=:V1 AND NOD=:V2 AND POS=:V3 AND ISMASTER=1
 ;
 ;
 S vos8=2
 D vL7a1
 Q ""
 ;
vL7a0 S vos8=0 Q
vL7a1 S vos9=$$BYTECHAR^SQLUTL(254)
 S vos10=$G(V1) I vos10="" G vL7a0
 S vos11=$G(V2) I vos11="",'$D(V2) G vL7a0
 S vos12=$G(V3)
 S vos13=""
vL7a6 S vos13=$O(^DBINDX("SYSDEV","STR",vos10,vos11,vos12,vos13),1) I vos13="" G vL7a0
 S vos14=$G(^DBTBL("SYSDEV",1,vos10,9,vos13))
 I '(+$P(vos14,"|",17)=1) G vL7a6
 Q
 ;
vFetch7() ;
 ;
 ;
 I vos8=1 D vL7a6
 I vos8=2 S vos8=1
 ;
 I vos8=0 S rs="" Q 0
 ;
 S vos14=$G(^DBTBL("SYSDEV",1,vos10,9,vos13))
 S rs=$S(vos13=vos9:"",1:vos13)
 ;
 Q 1
 ;
vOpen8() ; DI FROM DBTBL1D WHERE %LIBS='SYSDEV' AND FID=:V1 AND NOD=:V2 AND DI<>:V3
 ;
 ;
 S vos15=2
 D vL8a1
 Q ""
 ;
vL8a0 S vos15=0 Q
vL8a1 S vos16=$$BYTECHAR^SQLUTL(254)
 S vos17=$G(V1) I vos17="" G vL8a0
 S vos18=$G(V2) I vos18="",'$D(V2) G vL8a0
 S vos19=$G(V3) I vos19="",'$D(V3) G vL8a0
 S vos20=""
vL8a6 S vos20=$O(^DBINDX("SYSDEV","STR",vos17,vos18,vos20),1) I vos20="" G vL8a0
 S vos21=""
vL8a8 S vos21=$O(^DBINDX("SYSDEV","STR",vos17,vos18,vos20,vos21),1) I vos21="" G vL8a6
 I '(vos21'=vos19) G vL8a8
 Q
 ;
vFetch8() ;
 ;
 ;
 I vos15=1 D vL8a8
 I vos15=2 S vos15=1
 ;
 I vos15=0 S rs="" Q 0
 ;
 S rs=$S(vos21=vos16:"",1:vos21)
 ;
 Q 1
 ;
vOpen9() ; DI FROM DBTBL1D WHERE %LIBS='SYSDEV' AND FID=:V1 AND NOD=:V2 AND (TYP='M' OR TYP='B')
 ;
 ;
 S vos22=2
 D vL9a1
 Q ""
 ;
vL9a0 S vos22=0 Q
vL9a1 S vos23=$$BYTECHAR^SQLUTL(254)
 S vos24=$G(V1) I vos24="" G vL9a0
 S vos25=$G(V2) I vos25="",'$D(V2) G vL9a0
 S vos26=""
vL9a5 S vos26=$O(^DBINDX("SYSDEV","STR",vos24,vos25,vos26),1) I vos26="" G vL9a0
 S vos27=""
vL9a7 S vos27=$O(^DBINDX("SYSDEV","STR",vos24,vos25,vos26,vos27),1) I vos27="" G vL9a5
 S vos28=$G(^DBTBL("SYSDEV",1,vos24,9,vos27))
 I '($P(vos28,"|",9)="M"!($P(vos28,"|",9)="B")) G vL9a7
 Q
 ;
vFetch9() ;
 ;
 ;
 I vos22=1 D vL9a7
 I vos22=2 S vos22=1
 ;
 I vos22=0 S rs="" Q 0
 ;
 S vos28=$G(^DBTBL("SYSDEV",1,vos24,9,vos27))
 S rs=$S(vos27=vos23:"",1:vos27)
 ;
 Q 1
 ;
vReCp1(v1) ; RecordDBTBL1D.copy: DBTBL1D
 ;
 Q $$copy^UCGMR(this)
 ;
vReCp2(v1) ; RecordDBTBL1D.copy: DBTBL1D
 ;
 Q $$copy^UCGMR(this)
 ;
vReCp3(v1) ; RecordDBTBL1D.copy: DBTBL1D
 ;
 Q $$copy^UCGMR(this)
