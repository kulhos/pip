	#PACKAGE framework.psl.upgrade
	#OPTION  ResultClass ON

public Primitive UCXCUVAR( String COL)	// Return Institution Variable Run-time Value
	/*
	ORIG: Frans S.C. Witte
	DESC: PSL compiler data loading, Data group, Upgradeable

	*************************************************************************
	* IMPORTANT NOTE:							*
	*	According to the rules that apply to PSL compiler upgrades,	*
	*	this DQ procedure shall only access the database using		*
	*	Db.select(,,,,,"/PSLBOOT") and the ResultSet methods.		*
	*	Furthermore if this unit is included in an upgrade, the		*
	*	associated .DAT files must be included as well.			*
	*************************************************************************

	---- Environment Sensitive Elements ------------------------------------
	CUVAR
		Function UCXCUVAR() uses Db.select(,"CUVAR") to retrieve the
		value of the requested column of CUVAR
		Subroutine tbl2dat calls $$^UCXCUVAR() for each column of CUVAR
		to create the CUVAR.DAT file based on the current contents of
		the CUVAR table.

	---- Comments ----------------------------------------------------------
	Although this unit is treated as an Upgradable unit, the associated
	.DAT file will only be present in an initial environment creation. To
	deal with that problem subroutine tbl2dat() can be used to create a
	CUVAR.DAT file that corresponds to the "current settings" in CUVAR.

	Subroutine tbl2dat() shall be called if and only if an upgrade includes
	UCXCUVAR (i.e. this unit). If that is the case, the subroutine shall be
	called BEFORE any element of the fixpack is "loaded".

	Calling the subroutine BEFORE the new version of the M routine is loaded
	ensures that CUVAR.DAT will be created using the storage model in the
	target environment.
	The CUVAR.DAT file is needed until the end of phase 1 of the upgrade:
	Even though UCXCUVAR.m will be included in the same upgrade, the storage
	model of the originating environment may differ from the storage model
	in the target environment. In that case calls to $$^UCXCUVAR before the
	completion of phase 1 will use the wrong storage model and data from
	CUVAR.DAT must be used to prevent access using this incorrect model.
		
	Lib

	UCXCUVAR - return value of specified column of CUVAR
	tbl2dat	 - create CUVAR.DAT based on the current values in CUVAR

	---- Revision History --------------------------------------------------
	11/14/05 - Frans S.C. Witte - 18247 / 15593
		Derived from CUVAR.proc
	*/
	// I18N=QUIT
	// *******************************************************************
	// * IMPORTANT NOTE:                                                 *
	// * According to the rules that apply to PSL compiler upgrades,     *
	// * the generated M routine associated with this procedure must be  *
	// * checked into StarTeam and released with the procedure whenever  *
	// * changes are made to this procedure.                             *
	// *                                                                 *
	// * The M routine will be loaded to the mrtns directory during      *
	// * upgrades and will then be removed from that directory as part   *
	// * of the upgrade process.  Therefore, other than during an        *
	// * upgrade an mrtns version of this routine should not exist.      *
	// *                                                                 *
	// * Keep these comments as single line to ensure they exist in the  *
	// * generated M code.                                               *
	// *******************************************************************

	/* ---------------------------------------------------------------------
	Return value of specified data item from CUVAR file.

	ARGUMENTS:
	. COL = column name
		Shall be an existing column name

	OUTPUTS:
	. $$  = Value of data item
	*/
	if COL="%LIBS" quit "SYSDEV"		// Library Name

	#ACCEPT CR=18247;DATE=2005-11-14;PGM=FSCW;REASON=Dynamic Select
	type ResultSet rs = Db.select( COL, "CUVAR",,,,"/PSLBOOT")

	// call rs.next() twice to ensure ResultSet will be closed by API
	type String val
	type Boolean ignore
	if rs.next() set val = rs.getCol(1), ignore=rs.next() quit val
	quit ""

	// ---------------------------------------------------------------------
public void tbl2dat( String dir)	// create CUVAR.DAT based on current values
	/* ---------------------------------------------------------------------
	This subroutine creates CUVAR.DAT in the specified or implied directory.

	ARGUMENTS:
	. dir = name of target directory
		If absent or "", the value of the environment variable SCAU_DIR
		will be used.

	OUTPUTS:
	. CUVAR.DAT will be created in the specified directory. This file
		conforms to the conventions of .DAT files used in upgrades.

	NOTES:
	. Call this subroutine BEFORE an upgrade that includes this unit is
		loaded. Even though the M routine will be included in the same
		upgrade, the internal storage model of the originating
		environment may differ from the storage model at the target
		environment. In that case calls to $$^UCXCUVAR before the
		completion of phase 1 will use the wrong storage model and
		the 
	*/
	type literal String TAB = 9.char()

	type String hdr = ""
	type String dat = ""
	type String col

	type ResultSet rs = Db.select( "DI", "DBTBL1D", "%LIBS='SYSDEV' and FID='CUVAR' and DI<>'""*""' and CMP is null")
	while rs.next() set col = rs.getCol(1), hdr = hdr_TAB_col, dat=dat_TAB_$$UCXCUVAR(col) 

	#ACCEPT GROUP=ACCESS;CR=27800;DATE=2008-02-27;PGM=Frans S.C. Witte
	if dir.get().isNull() set dir = $$SCAU^%TRNLNM("DIR")

	type IO io = Class.new("IO")
	set io.directory = dir
	set io.fileName = "CUVAR.DAT"
	set io.openParams = "NEWV"

	catch xIo {
		if 'xIo.ident.contains( "OPEN") do io.close()
		if 'xIo.ident.beginsWith("IO") throw xIo
	}
	do io.write( hdr.extract( 2, hdr.length()))
	do io.write( dat.extract( 2, dat.length()))
	do io.close()
	quit
 #OPTION ResultClass ON
public String vSIG()	quit "61058^29766^Frans S.C. Witte^5746"	// Signature - LTD^TIME^USER^SIZE
