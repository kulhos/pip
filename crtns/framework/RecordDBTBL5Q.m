 ; 
 ; **** Routine compiled from DATA-QWIK Filer RecordDBTBL5Q ****
 ; 
 ; 02/24/2010 18:40 - pip
 ; 
 ;
 ; Record Class code for table DBTBL5Q
 ;
 ; Generated by PSLRecordBuilder on 02/24/2010 at 18:40 by
 ;
vcdmNew() ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL5Q",vobj(vOid,-2)=0,vobj(vOid)=""
 S vobj(vOid,-3)=""
 S vobj(vOid,-4)=""
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0(v1,v2,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL5Q"
 S vobj(vOid)=$G(^DBTBL(v1,6,v2))
 I vobj(vOid)="",'$D(^DBTBL(v1,6,v2))
 S vobj(vOid,-2)=1
 I $T K vobj(vOid) S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,DBTBL5Q",$EC=",U1001,"
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord1(v1,v2,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL5Q"
 S vobj(vOid)=$G(^DBTBL(v1,6,v2))
 I vobj(vOid)="",'$D(^DBTBL(v1,6,v2))
 S vobj(vOid,-2)='$T
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0Opt(v1,v2,vfromDbSet,v2out) ; 
 N dbtbl5q
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S dbtbl5q=$G(^DBTBL(v1,6,v2))
 I dbtbl5q="",'$D(^DBTBL(v1,6,v2))
 S v2out=1
 I $T S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,DBTBL5Q",$EC=",U1001,"
 ;*** End of code by-passed by compiler ***
 Q dbtbl5q
 ;
vRCgetRecord1Opt(v1,v2,vfromDbSet,v2out) ; 
 N dbtbl5q
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S dbtbl5q=$G(^DBTBL(v1,6,v2))
 I dbtbl5q="",'$D(^DBTBL(v1,6,v2))
 S v2out='$T
 ;*** End of code by-passed by compiler ***
 Q dbtbl5q
 ;
vBypassSave(this) ; 
 D vSave(this,"/NOJOURNAL/NOTRIGAFT/NOTRIGBEF/NOVALDD/NOVALREQ/NOVALRI/NOVALST",0)
 Q 
 ;
vSave(this,vRCparams,vauditLogSeq) ; 
 N vRCaudit N vRCauditIns
 N %O S %O=$G(vobj(this,-2))
 I ($get(vRCparams)="") S vRCparams="/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/"
 I (%O=0) D
 .	D AUDIT^UCUTILN(this,.vRCauditIns,11,"|")
 .	D vRCsetDefaults(this)
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=1) D
 .	Q:'$D(vobj(this,-100)) 
 .	D AUDIT^UCUTILN(this,.vRCaudit,11,"|")
 .	I ($D(vobj(this,-100,"1*","LIBS"))&($P($E($G(vobj(this,-100,"1*","LIBS")),5,9999),$C(124))'=vobj(this,-3)))!($D(vobj(this,-100,"2*","QRID"))&($P($E($G(vobj(this,-100,"2*","QRID")),5,9999),$C(124))'=vobj(this,-4))) D vRCkeyChanged(this,vRCparams,.vRCaudit) Q 
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForUpdate(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD1(this)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=2) D
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,2)
 .	Q 
 E  I (%O=3) D
 .	  N V1,V2 S V1=vobj(this,-3),V2=vobj(this,-4) Q:'($D(^DBTBL(V1,6,V2))) 
 .	D vRCdelete(this,vRCparams,.vRCaudit,0)
 .	Q 
 Q 
 ;
vcheckAccessRights() ; 
 Q ""
 ;
vinsertAccess(userclass) ; 
 Q 1
 ;
vinsertOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vupdateAccess(userclass) ; 
 Q 1
 ;
vupdateOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vdeleteAccess(userclass) ; 
 Q 1
 ;
vdeleteOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectAccess(userclass,restrict,from) ; 
 S (restrict,from)=""
 Q 1
 ;
vselectOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectOptmOK(userclass,dbtbl5q,vkey1,vkey2) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vgetLogging() ; 
 Q "0"
 ;
logUserclass(operation) ; 
 I (operation="INSERT") Q 0
 E  I (operation="UPDATE") Q 0
 E  I (operation="DELETE") Q 0
 E  I (operation="SELECT") Q 0
 Q 0
 ;
vlogSelect(statement,using) ; 
 Q 0
 ;
columnList() ; 
 N columns S columns=""
 S columns=columns_"BANNER,BREAKON,CNTMATCH,CNTREC,CSCMP,DESC,DTL,FLD1,FLD2,FLD3,FLD4,FLD5,FLD6,LABOPT,LIBS,LTD,MSQL,ORDERBY,PFID,PGM,"
 S columns=columns_"QID1,QID10,QID2,QID3,QID4,QID5,QID6,QID7,QID8,QID9,QRID,REPTYPE,RSIZE,STAT,TRANS,UID,"
 Q $$vStrRep("BANNER,BREAKON,CNTMATCH,CNTREC,CSCMP,DESC,DTL,FLD1,FLD2,FLD3,FLD4,FLD5,FLD6,LABOPT,LIBS,LTD,MSQL,ORDERBY,PFID,PGM,QID1,QID10,QID2,QID3,QID4,QID5,QID6,QID7,QID8,QID9,QRID,REPTYPE,RSIZE,STAT,TRANS,UID",",",$char(9),0,0,"")
 ;
columnListBM() ; 
 Q ""
 ;
columnListCMP() ; 
 Q $$vStrRep("",",",$char(9),0,0,"")
 ;
getColumnMap(map) ; 
 ;
 S map(-4)="QRID:U:"
 S map(-3)="LIBS:T:"
 S map(-1)="DESC:T:1"
 S map(0)="BANNER:L:12;BREAKON:T:11;CNTMATCH:N:7;CNTREC:N:6;CSCMP:L:14;DTL:L:4;LABOPT:N:9;LTD:D:3;MSQL:L:13;ORDERBY:T:10;PFID:U:1;PGM:U:2;REPTYPE:U:20;RSIZE:N:5;STAT:L:8;UID:T:15"
 S map(1)="QID1:T:1"
 S map(2)="QID2:T:1"
 S map(3)="QID3:T:1"
 S map(4)="QID4:T:1"
 S map(5)="QID5:T:1"
 S map(6)="QID6:T:1"
 S map(7)="QID7:T:1"
 S map(8)="QID8:T:1"
 S map(9)="QID9:T:1"
 S map(10)="QID10:T:1"
 S map(11)="TRANS:T:1"
 S map(12)="FLD1:T:1"
 S map(13)="FLD2:T:1"
 S map(14)="FLD3:T:1"
 S map(15)="FLD4:T:1"
 S map(16)="FLD5:T:1"
 S map(17)="FLD6:T:1"
 Q 
 ;
vlegacy(processMode,params) ; 
 N vTp
 I (processMode=2) D
 .	N dbtbl5q S dbtbl5q=$$vRCgetRecord0^RecordDBTBL5Q(LIBS,QRID,0)
 .	S vobj(dbtbl5q,-2)=2
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL5Q(dbtbl5q,$$initPar^UCUTILN(params)) K vobj(dbtbl5q,-100) S vobj(dbtbl5q,-2)=1 TC:vTp  
 .	K vobj(+$G(dbtbl5q)) Q 
 Q 
 ;
vhasLiterals() ; 
 Q 0
 ;
vRCmiscValidations(this,vRCparams,processMode) ; 
 I (("/"_vRCparams_"/")["/VALST/")  N V1,V2 S V1=vobj(this,-3),V2=vobj(this,-4) I '(''($D(^DBTBL(V1,6,V2)))=''processMode) D
 .	N errmsg
 .	I (+processMode'=+0) S errmsg=$$^MSG(7932)
 .	E  S errmsg=$$^MSG(2327)
 .	D throwError(errmsg)
 .	Q 
 Q 
 ;
vRCupdateDB(this,processMode,vRCparams,vRCaudit,vRCauditIns) ; 
 I '(("/"_vRCparams_"/")["/NOUPDATE/") D
 .	N n
 .	S n=-1
 .	F  S n=$order(vobj(this,n)) Q:(n="")  D
 ..		Q:'($D(vobj(this,n))#2) 
 ..		;    #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
 ..		;*** Start of code by-passed by compiler
 ..		S ^DBTBL(vobj(this,-3),6,vobj(this,-4),n)=vobj(this,n)
 ..		;*** End of code by-passed by compiler ***
 ..		Q 
 .	;   #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(vobj(this)) S ^DBTBL(vobj(this,-3),6,vobj(this,-4))=vobj(this)
 .	;*** End of code by-passed by compiler ***
 .	Q 
 Q 
 ;
vRCdelete(this,vRCparams,vRCaudit,isKeyChange) ; 
 I '$get(isKeyChange),$D(vobj(this,-100)) D throwError("Deleted object cannot be modified")
 ;  #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
 ;*** Start of code by-passed by compiler
 kill ^DBTBL(vobj(this,-3),6,vobj(this,-4))
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCsetDefaults(this) ; 
  S:'$D(vobj(this,0)) vobj(this,0)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),0)),1:"")
 I ($P(vobj(this,0),$C(124),12)="")  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),12)=1
 I ($P(vobj(this,0),$C(124),14)="")  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),14)=1
 I ($P(vobj(this,0),$C(124),4)="")  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),4)=1
 I ($P(vobj(this,0),$C(124),3)="")  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),3)=$P($H,",",1)
 I ($P(vobj(this,0),$C(124),13)="")  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),13)=0
 I ($P(vobj(this,0),$C(124),5)="")  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),5)=80
 I ($P(vobj(this,0),$C(124),8)="")  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),8)=0
 I ($P(vobj(this,0),$C(124),15)="")  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),15)=$$USERNAM^%ZFUNC
 Q 
 ;
vRCchkReqForInsert(this) ; 
  S:'$D(vobj(this,0)) vobj(this,0)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),0)),1:"")
 I ($P(vobj(this,0),$C(124),12)="") D vRCrequiredErr("BANNER")
 I ($P(vobj(this,0),$C(124),14)="") D vRCrequiredErr("CSCMP")
 I ($P(vobj(this,0),$C(124),4)="") D vRCrequiredErr("DTL")
 I (vobj(this,-3)="") D vRCrequiredErr("LIBS")
 I ($P(vobj(this,0),$C(124),13)="") D vRCrequiredErr("MSQL")
 I (vobj(this,-4)="") D vRCrequiredErr("QRID")
 I ($P(vobj(this,0),$C(124),8)="") D vRCrequiredErr("STAT")
 Q 
 ;
vRCchkReqForUpdate(this) ; 
  S:'$D(vobj(this,0)) vobj(this,0)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),0)),1:"")
 I (vobj(this,-3)="") D vRCrequiredErr("LIBS")
 I (vobj(this,-4)="") D vRCrequiredErr("QRID")
 I ($D(vobj(this,-100,0))>9) D
 .	I ($D(vobj(this,-100,0,"DTL"))&($P($E($G(vobj(this,-100,0,"DTL")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),4))),($P(vobj(this,0),$C(124),4)="") D vRCrequiredErr("DTL")
 .	I ($D(vobj(this,-100,0,"STAT"))&($P($E($G(vobj(this,-100,0,"STAT")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),8))),($P(vobj(this,0),$C(124),8)="") D vRCrequiredErr("STAT")
 .	I ($D(vobj(this,-100,0,"BANNER"))&($P($E($G(vobj(this,-100,0,"BANNER")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),12))),($P(vobj(this,0),$C(124),12)="") D vRCrequiredErr("BANNER")
 .	I ($D(vobj(this,-100,0,"MSQL"))&($P($E($G(vobj(this,-100,0,"MSQL")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),13))),($P(vobj(this,0),$C(124),13)="") D vRCrequiredErr("MSQL")
 .	I ($D(vobj(this,-100,0,"CSCMP"))&($P($E($G(vobj(this,-100,0,"CSCMP")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),14))),($P(vobj(this,0),$C(124),14)="") D vRCrequiredErr("CSCMP")
 .	Q 
 ; Node "1*" - only one required column
 I ($D(vobj(this,-100,"1*","LIBS"))&($P($E($G(vobj(this,-100,"1*","LIBS")),5,9999),$C(124))'=vobj(this,-3))),(vobj(this,-3)="") D vRCrequiredErr("LIBS")
 ; Node "2*" - only one required column
 I ($D(vobj(this,-100,"2*","QRID"))&($P($E($G(vobj(this,-100,"2*","QRID")),5,9999),$C(124))'=vobj(this,-4))),(vobj(this,-4)="") D vRCrequiredErr("QRID")
 Q 
 ;
vRCrequiredErr(column) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("DBTBL5Q","MSG",1767,"DBTBL5Q."_column)
 I ER D throwError($get(RM))
 Q 
 ;
vRCforceLoad(this) ; 
 N n S n=""
 ;  #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
 ;*** Start of code by-passed by compiler
 for  set n=$order(^DBTBL(vobj(this,-3),6,vobj(this,-4),n)) quit:n=""  if '$D(vobj(this,n)),$D(^DBTBL(vobj(this,-3),6,vobj(this,-4),n))#2 set vobj(this,n)=^(n)
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCvalidateDD(this,processMode) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I (processMode=2) D vRCforceLoad(this)
 I ($D(vobj(this,0))#2) D
 .	 S:'$D(vobj(this,0)) vobj(this,0)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),0)),1:"")
 .	I '(($P(vobj(this,0),$C(124),12)=1)!($P(vobj(this,0),$C(124),12)=0)) D vRCvalidateDDerr("BANNER",$$^MSG(742,"L"))
 .	I ($L($P(vobj(this,0),$C(124),11))>60) D vRCvalidateDDerr("BREAKON",$$^MSG(1076,60))
 .	I '($P(vobj(this,0),$C(124),7)=""),'(+$P(vobj(this,0),$C(124),7)=$P(vobj(this,0),$C(124),7))  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),7)=$$vRCtrimNumber($P(vobj(this,0),$C(124),7))
 .	S X=$P(vobj(this,0),$C(124),7) I '(X=""),(X'?1.8N),(X'?1"-"1.7N) D vRCvalidateDDerr("CNTMATCH",$$^MSG(742,"N"))
 .	I '($P(vobj(this,0),$C(124),6)=""),'(+$P(vobj(this,0),$C(124),6)=$P(vobj(this,0),$C(124),6))  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),6)=$$vRCtrimNumber($P(vobj(this,0),$C(124),6))
 .	S X=$P(vobj(this,0),$C(124),6) I '(X=""),(X'?1.8N),(X'?1"-"1.7N) D vRCvalidateDDerr("CNTREC",$$^MSG(742,"N"))
 .	I '(($P(vobj(this,0),$C(124),14)=1)!($P(vobj(this,0),$C(124),14)=0)) D vRCvalidateDDerr("CSCMP",$$^MSG(742,"L"))
 .	I '(($P(vobj(this,0),$C(124),4)=1)!($P(vobj(this,0),$C(124),4)=0)) D vRCvalidateDDerr("DTL",$$^MSG(742,"L"))
 .	I '($P(vobj(this,0),$C(124),9)=""),'(+$P(vobj(this,0),$C(124),9)=$P(vobj(this,0),$C(124),9))  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),9)=$$vRCtrimNumber($P(vobj(this,0),$C(124),9))
 .	S X=$P(vobj(this,0),$C(124),9) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("LABOPT",$$^MSG(742,"N"))
 .	S X=$P(vobj(this,0),$C(124),3) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("LTD",$$^MSG(742,"D"))
 .	I '(($P(vobj(this,0),$C(124),13)=1)!($P(vobj(this,0),$C(124),13)=0)) D vRCvalidateDDerr("MSQL",$$^MSG(742,"L"))
 .	I ($L($P(vobj(this,0),$C(124),10))>100) D vRCvalidateDDerr("ORDERBY",$$^MSG(1076,100))
 .	I ($P(vobj(this,0),$C(124),1)'=$ZCONVERT($P(vobj(this,0),$C(124),1),"U")) D vRCvalidateDDerr("PFID",$$^MSG(1476))
 .	I ($L($P(vobj(this,0),$C(124),1))>60) D vRCvalidateDDerr("PFID",$$^MSG(1076,60))
 .	I ($P(vobj(this,0),$C(124),2)'=$ZCONVERT($P(vobj(this,0),$C(124),2),"U")) D vRCvalidateDDerr("PGM",$$^MSG(1476))
 .	I ($L($P(vobj(this,0),$C(124),2))>8) D vRCvalidateDDerr("PGM",$$^MSG(1076,8))
 .	I ($P(vobj(this,0),$C(124),20)'=$ZCONVERT($P(vobj(this,0),$C(124),20),"U")) D vRCvalidateDDerr("REPTYPE",$$^MSG(1476))
 .	I ($L($P(vobj(this,0),$C(124),20))>6) D vRCvalidateDDerr("REPTYPE",$$^MSG(1076,6))
 .	I '($P(vobj(this,0),$C(124),5)=""),'(+$P(vobj(this,0),$C(124),5)=$P(vobj(this,0),$C(124),5))  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),5)=$$vRCtrimNumber($P(vobj(this,0),$C(124),5))
 .	S X=$P(vobj(this,0),$C(124),5) I '(X=""),(X'?1.4N),(X'?1"-"1.3N) D vRCvalidateDDerr("RSIZE",$$^MSG(742,"N"))
 .	I '(($P(vobj(this,0),$C(124),8)=1)!($P(vobj(this,0),$C(124),8)=0)) D vRCvalidateDDerr("STAT",$$^MSG(742,"L"))
 .	I ($L($P(vobj(this,0),$C(124),15))>20) D vRCvalidateDDerr("UID",$$^MSG(1076,20))
 .	Q 
 I ($D(vobj(this,1))#2) D
 .	 S:'$D(vobj(this,1)) vobj(this,1)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),1)),1:"")
 .	I ($L($P(vobj(this,1),$C(124),1))>78) D vRCvalidateDDerr("QID1",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,2))#2) D
 .	 S:'$D(vobj(this,2)) vobj(this,2)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),2)),1:"")
 .	I ($L($P(vobj(this,2),$C(124),1))>78) D vRCvalidateDDerr("QID2",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,3))#2) D
 .	 S:'$D(vobj(this,3)) vobj(this,3)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),3)),1:"")
 .	I ($L($P(vobj(this,3),$C(124),1))>78) D vRCvalidateDDerr("QID3",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,4))#2) D
 .	 S:'$D(vobj(this,4)) vobj(this,4)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),4)),1:"")
 .	I ($L($P(vobj(this,4),$C(124),1))>78) D vRCvalidateDDerr("QID4",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,5))#2) D
 .	 S:'$D(vobj(this,5)) vobj(this,5)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),5)),1:"")
 .	I ($L($P(vobj(this,5),$C(124),1))>78) D vRCvalidateDDerr("QID5",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,6))#2) D
 .	 S:'$D(vobj(this,6)) vobj(this,6)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),6)),1:"")
 .	I ($L($P(vobj(this,6),$C(124),1))>78) D vRCvalidateDDerr("QID6",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,7))#2) D
 .	 S:'$D(vobj(this,7)) vobj(this,7)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),7)),1:"")
 .	I ($L($P(vobj(this,7),$C(124),1))>78) D vRCvalidateDDerr("QID7",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,8))#2) D
 .	 S:'$D(vobj(this,8)) vobj(this,8)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),8)),1:"")
 .	I ($L($P(vobj(this,8),$C(124),1))>78) D vRCvalidateDDerr("QID8",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,9))#2) D
 .	 S:'$D(vobj(this,9)) vobj(this,9)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),9)),1:"")
 .	I ($L($P(vobj(this,9),$C(124),1))>78) D vRCvalidateDDerr("QID9",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,10))#2) D
 .	 S:'$D(vobj(this,10)) vobj(this,10)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),10)),1:"")
 .	I ($L($P(vobj(this,10),$C(124),1))>78) D vRCvalidateDDerr("QID10",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,11))#2) D
 .	 S:'$D(vobj(this,11)) vobj(this,11)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),11)),1:"")
 .	S X=$P(vobj(this,11),$C(124),1) I '(X=""),'$$vCaEx1() D vRCvalidateDDerr("TRANS",$$^MSG(1485,X))
 .	Q 
 I ($D(vobj(this,12))#2) D
 .	 S:'$D(vobj(this,12)) vobj(this,12)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),12)),1:"")
 .	I ($L($P(vobj(this,12),$C(124),1))>78) D vRCvalidateDDerr("FLD1",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,13))#2) D
 .	 S:'$D(vobj(this,13)) vobj(this,13)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),13)),1:"")
 .	I ($L($P(vobj(this,13),$C(124),1))>78) D vRCvalidateDDerr("FLD2",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,14))#2) D
 .	 S:'$D(vobj(this,14)) vobj(this,14)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),14)),1:"")
 .	I ($L($P(vobj(this,14),$C(124),1))>78) D vRCvalidateDDerr("FLD3",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,15))#2) D
 .	 S:'$D(vobj(this,15)) vobj(this,15)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),15)),1:"")
 .	I ($L($P(vobj(this,15),$C(124),1))>78) D vRCvalidateDDerr("FLD4",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,16))#2) D
 .	 S:'$D(vobj(this,16)) vobj(this,16)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),16)),1:"")
 .	I ($L($P(vobj(this,16),$C(124),1))>78) D vRCvalidateDDerr("FLD5",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,17))#2) D
 .	 S:'$D(vobj(this,17)) vobj(this,17)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),17)),1:"")
 .	I ($L($P(vobj(this,17),$C(124),1))>78) D vRCvalidateDDerr("FLD6",$$^MSG(1076,78))
 .	Q 
 I ($L(vobj(this,-3))>10) D vRCvalidateDDerr("LIBS",$$^MSG(1076,10))
 I (vobj(this,-4)'=$ZCONVERT(vobj(this,-4),"U")) D vRCvalidateDDerr("QRID",$$^MSG(1476))
 I ($L(vobj(this,-4))>12) D vRCvalidateDDerr("QRID",$$^MSG(1076,12))
 I ($D(vobj(this))#2)!'($order(vobj(this,""))="") D
 .	I ($L($P(vobj(this),$C(124),1))>40) D vRCvalidateDDerr("DESC",$$^MSG(1076,40))
 .	Q 
 Q 
 ;
vRCvalidateDD1(this) ; 
  S:'$D(vobj(this,0)) vobj(this,0)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),0)),1:"")
  S:'$D(vobj(this,1)) vobj(this,1)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),1)),1:"")
  S:'$D(vobj(this,2)) vobj(this,2)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),2)),1:"")
  S:'$D(vobj(this,3)) vobj(this,3)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),3)),1:"")
  S:'$D(vobj(this,4)) vobj(this,4)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),4)),1:"")
  S:'$D(vobj(this,5)) vobj(this,5)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),5)),1:"")
  S:'$D(vobj(this,6)) vobj(this,6)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),6)),1:"")
  S:'$D(vobj(this,7)) vobj(this,7)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),7)),1:"")
  S:'$D(vobj(this,8)) vobj(this,8)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),8)),1:"")
  S:'$D(vobj(this,9)) vobj(this,9)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),9)),1:"")
  S:'$D(vobj(this,10)) vobj(this,10)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),10)),1:"")
  S:'$D(vobj(this,11)) vobj(this,11)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),11)),1:"")
  S:'$D(vobj(this,12)) vobj(this,12)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),12)),1:"")
  S:'$D(vobj(this,13)) vobj(this,13)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),13)),1:"")
  S:'$D(vobj(this,14)) vobj(this,14)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),14)),1:"")
  S:'$D(vobj(this,15)) vobj(this,15)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),15)),1:"")
  S:'$D(vobj(this,16)) vobj(this,16)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),16)),1:"")
  S:'$D(vobj(this,17)) vobj(this,17)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),6,vobj(this,-4),17)),1:"")
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($D(vobj(this,0))#2) D
 .	I ($D(vobj(this,-100,0,"BANNER"))&($P($E($G(vobj(this,-100,0,"BANNER")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),12))) I '(($P(vobj(this,0),$C(124),12)=1)!($P(vobj(this,0),$C(124),12)=0)) D vRCvalidateDDerr("BANNER",$$^MSG(742,"L"))
 .	I ($D(vobj(this,-100,0,"BREAKON"))&($P($E($G(vobj(this,-100,0,"BREAKON")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),11))) I ($L($P(vobj(this,0),$C(124),11))>60) D vRCvalidateDDerr("BREAKON",$$^MSG(1076,60))
 .	I ($D(vobj(this,-100,0,"CNTMATCH"))&($P($E($G(vobj(this,-100,0,"CNTMATCH")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),7))),'($P(vobj(this,0),$C(124),7)=""),'(+$P(vobj(this,0),$C(124),7)=$P(vobj(this,0),$C(124),7))  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),7)=$$vRCtrimNumber($P(vobj(this,0),$C(124),7))
 .	I ($D(vobj(this,-100,0,"CNTMATCH"))&($P($E($G(vobj(this,-100,0,"CNTMATCH")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),7))) S X=$P(vobj(this,0),$C(124),7) I '(X=""),(X'?1.8N),(X'?1"-"1.7N) D vRCvalidateDDerr("CNTMATCH",$$^MSG(742,"N"))
 .	I ($D(vobj(this,-100,0,"CNTREC"))&($P($E($G(vobj(this,-100,0,"CNTREC")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),6))),'($P(vobj(this,0),$C(124),6)=""),'(+$P(vobj(this,0),$C(124),6)=$P(vobj(this,0),$C(124),6))  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),6)=$$vRCtrimNumber($P(vobj(this,0),$C(124),6))
 .	I ($D(vobj(this,-100,0,"CNTREC"))&($P($E($G(vobj(this,-100,0,"CNTREC")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),6))) S X=$P(vobj(this,0),$C(124),6) I '(X=""),(X'?1.8N),(X'?1"-"1.7N) D vRCvalidateDDerr("CNTREC",$$^MSG(742,"N"))
 .	I ($D(vobj(this,-100,0,"CSCMP"))&($P($E($G(vobj(this,-100,0,"CSCMP")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),14))) I '(($P(vobj(this,0),$C(124),14)=1)!($P(vobj(this,0),$C(124),14)=0)) D vRCvalidateDDerr("CSCMP",$$^MSG(742,"L"))
 .	I ($D(vobj(this,-100,0,"DTL"))&($P($E($G(vobj(this,-100,0,"DTL")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),4))) I '(($P(vobj(this,0),$C(124),4)=1)!($P(vobj(this,0),$C(124),4)=0)) D vRCvalidateDDerr("DTL",$$^MSG(742,"L"))
 .	I ($D(vobj(this,-100,0,"LABOPT"))&($P($E($G(vobj(this,-100,0,"LABOPT")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),9))),'($P(vobj(this,0),$C(124),9)=""),'(+$P(vobj(this,0),$C(124),9)=$P(vobj(this,0),$C(124),9))  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),9)=$$vRCtrimNumber($P(vobj(this,0),$C(124),9))
 .	I ($D(vobj(this,-100,0,"LABOPT"))&($P($E($G(vobj(this,-100,0,"LABOPT")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),9))) S X=$P(vobj(this,0),$C(124),9) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("LABOPT",$$^MSG(742,"N"))
 .	I ($D(vobj(this,-100,0,"LTD"))&($P($E($G(vobj(this,-100,0,"LTD")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),3))) S X=$P(vobj(this,0),$C(124),3) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("LTD",$$^MSG(742,"D"))
 .	I ($D(vobj(this,-100,0,"MSQL"))&($P($E($G(vobj(this,-100,0,"MSQL")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),13))) I '(($P(vobj(this,0),$C(124),13)=1)!($P(vobj(this,0),$C(124),13)=0)) D vRCvalidateDDerr("MSQL",$$^MSG(742,"L"))
 .	I ($D(vobj(this,-100,0,"ORDERBY"))&($P($E($G(vobj(this,-100,0,"ORDERBY")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),10))) I ($L($P(vobj(this,0),$C(124),10))>100) D vRCvalidateDDerr("ORDERBY",$$^MSG(1076,100))
 .	I ($P(vobj(this,0),$C(124),1)'=$ZCONVERT($P(vobj(this,0),$C(124),1),"U")) D vRCvalidateDDerr("PFID",$$^MSG(1476))
 .	I ($D(vobj(this,-100,0,"PFID"))&($P($E($G(vobj(this,-100,0,"PFID")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),1))) I ($L($P(vobj(this,0),$C(124),1))>60) D vRCvalidateDDerr("PFID",$$^MSG(1076,60))
 .	I ($P(vobj(this,0),$C(124),2)'=$ZCONVERT($P(vobj(this,0),$C(124),2),"U")) D vRCvalidateDDerr("PGM",$$^MSG(1476))
 .	I ($D(vobj(this,-100,0,"PGM"))&($P($E($G(vobj(this,-100,0,"PGM")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),2))) I ($L($P(vobj(this,0),$C(124),2))>8) D vRCvalidateDDerr("PGM",$$^MSG(1076,8))
 .	I ($P(vobj(this,0),$C(124),20)'=$ZCONVERT($P(vobj(this,0),$C(124),20),"U")) D vRCvalidateDDerr("REPTYPE",$$^MSG(1476))
 .	I ($D(vobj(this,-100,0,"REPTYPE"))&($P($E($G(vobj(this,-100,0,"REPTYPE")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),20))) I ($L($P(vobj(this,0),$C(124),20))>6) D vRCvalidateDDerr("REPTYPE",$$^MSG(1076,6))
 .	I ($D(vobj(this,-100,0,"RSIZE"))&($P($E($G(vobj(this,-100,0,"RSIZE")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),5))),'($P(vobj(this,0),$C(124),5)=""),'(+$P(vobj(this,0),$C(124),5)=$P(vobj(this,0),$C(124),5))  S vobj(this,-100,0)="" S $P(vobj(this,0),$C(124),5)=$$vRCtrimNumber($P(vobj(this,0),$C(124),5))
 .	I ($D(vobj(this,-100,0,"RSIZE"))&($P($E($G(vobj(this,-100,0,"RSIZE")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),5))) S X=$P(vobj(this,0),$C(124),5) I '(X=""),(X'?1.4N),(X'?1"-"1.3N) D vRCvalidateDDerr("RSIZE",$$^MSG(742,"N"))
 .	I ($D(vobj(this,-100,0,"STAT"))&($P($E($G(vobj(this,-100,0,"STAT")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),8))) I '(($P(vobj(this,0),$C(124),8)=1)!($P(vobj(this,0),$C(124),8)=0)) D vRCvalidateDDerr("STAT",$$^MSG(742,"L"))
 .	I ($D(vobj(this,-100,0,"UID"))&($P($E($G(vobj(this,-100,0,"UID")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),15))) I ($L($P(vobj(this,0),$C(124),15))>20) D vRCvalidateDDerr("UID",$$^MSG(1076,20))
 .	Q 
 I ($D(vobj(this,1))#2) D
 .	I ($D(vobj(this,-100,1,"QID1"))&($P($E($G(vobj(this,-100,1,"QID1")),5,9999),$C(124))'=$P(vobj(this,1),$C(124),1))) I ($L($P(vobj(this,1),$C(124),1))>78) D vRCvalidateDDerr("QID1",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,2))#2) D
 .	I ($D(vobj(this,-100,2,"QID2"))&($P($E($G(vobj(this,-100,2,"QID2")),5,9999),$C(124))'=$P(vobj(this,2),$C(124),1))) I ($L($P(vobj(this,2),$C(124),1))>78) D vRCvalidateDDerr("QID2",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,3))#2) D
 .	I ($D(vobj(this,-100,3,"QID3"))&($P($E($G(vobj(this,-100,3,"QID3")),5,9999),$C(124))'=$P(vobj(this,3),$C(124),1))) I ($L($P(vobj(this,3),$C(124),1))>78) D vRCvalidateDDerr("QID3",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,4))#2) D
 .	I ($D(vobj(this,-100,4,"QID4"))&($P($E($G(vobj(this,-100,4,"QID4")),5,9999),$C(124))'=$P(vobj(this,4),$C(124),1))) I ($L($P(vobj(this,4),$C(124),1))>78) D vRCvalidateDDerr("QID4",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,5))#2) D
 .	I ($D(vobj(this,-100,5,"QID5"))&($P($E($G(vobj(this,-100,5,"QID5")),5,9999),$C(124))'=$P(vobj(this,5),$C(124),1))) I ($L($P(vobj(this,5),$C(124),1))>78) D vRCvalidateDDerr("QID5",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,6))#2) D
 .	I ($D(vobj(this,-100,6,"QID6"))&($P($E($G(vobj(this,-100,6,"QID6")),5,9999),$C(124))'=$P(vobj(this,6),$C(124),1))) I ($L($P(vobj(this,6),$C(124),1))>78) D vRCvalidateDDerr("QID6",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,7))#2) D
 .	I ($D(vobj(this,-100,7,"QID7"))&($P($E($G(vobj(this,-100,7,"QID7")),5,9999),$C(124))'=$P(vobj(this,7),$C(124),1))) I ($L($P(vobj(this,7),$C(124),1))>78) D vRCvalidateDDerr("QID7",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,8))#2) D
 .	I ($D(vobj(this,-100,8,"QID8"))&($P($E($G(vobj(this,-100,8,"QID8")),5,9999),$C(124))'=$P(vobj(this,8),$C(124),1))) I ($L($P(vobj(this,8),$C(124),1))>78) D vRCvalidateDDerr("QID8",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,9))#2) D
 .	I ($D(vobj(this,-100,9,"QID9"))&($P($E($G(vobj(this,-100,9,"QID9")),5,9999),$C(124))'=$P(vobj(this,9),$C(124),1))) I ($L($P(vobj(this,9),$C(124),1))>78) D vRCvalidateDDerr("QID9",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,10))#2) D
 .	I ($D(vobj(this,-100,10,"QID10"))&($P($E($G(vobj(this,-100,10,"QID10")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),1))) I ($L($P(vobj(this,10),$C(124),1))>78) D vRCvalidateDDerr("QID10",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,11))#2) D
 .	I ($D(vobj(this,-100,11,"TRANS"))&($P($E($G(vobj(this,-100,11,"TRANS")),5,9999),$C(124))'=$P(vobj(this,11),$C(124),1))) S X=$P(vobj(this,11),$C(124),1) I '(X=""),'$$vCaEx2() D vRCvalidateDDerr("TRANS",$$^MSG(1485,X))
 .	Q 
 I ($D(vobj(this,12))#2) D
 .	I ($D(vobj(this,-100,12,"FLD1"))&($P($E($G(vobj(this,-100,12,"FLD1")),5,9999),$C(124))'=$P(vobj(this,12),$C(124),1))) I ($L($P(vobj(this,12),$C(124),1))>78) D vRCvalidateDDerr("FLD1",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,13))#2) D
 .	I ($D(vobj(this,-100,13,"FLD2"))&($P($E($G(vobj(this,-100,13,"FLD2")),5,9999),$C(124))'=$P(vobj(this,13),$C(124),1))) I ($L($P(vobj(this,13),$C(124),1))>78) D vRCvalidateDDerr("FLD2",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,14))#2) D
 .	I ($D(vobj(this,-100,14,"FLD3"))&($P($E($G(vobj(this,-100,14,"FLD3")),5,9999),$C(124))'=$P(vobj(this,14),$C(124),1))) I ($L($P(vobj(this,14),$C(124),1))>78) D vRCvalidateDDerr("FLD3",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,15))#2) D
 .	I ($D(vobj(this,-100,15,"FLD4"))&($P($E($G(vobj(this,-100,15,"FLD4")),5,9999),$C(124))'=$P(vobj(this,15),$C(124),1))) I ($L($P(vobj(this,15),$C(124),1))>78) D vRCvalidateDDerr("FLD4",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,16))#2) D
 .	I ($D(vobj(this,-100,16,"FLD5"))&($P($E($G(vobj(this,-100,16,"FLD5")),5,9999),$C(124))'=$P(vobj(this,16),$C(124),1))) I ($L($P(vobj(this,16),$C(124),1))>78) D vRCvalidateDDerr("FLD5",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,17))#2) D
 .	I ($D(vobj(this,-100,17,"FLD6"))&($P($E($G(vobj(this,-100,17,"FLD6")),5,9999),$C(124))'=$P(vobj(this,17),$C(124),1))) I ($L($P(vobj(this,17),$C(124),1))>78) D vRCvalidateDDerr("FLD6",$$^MSG(1076,78))
 .	Q 
 I ($D(vobj(this,-100,"1*","LIBS"))&($P($E($G(vobj(this,-100,"1*","LIBS")),5,9999),$C(124))'=vobj(this,-3))) I ($L(vobj(this,-3))>10) D vRCvalidateDDerr("LIBS",$$^MSG(1076,10))
 I (vobj(this,-4)'=$ZCONVERT(vobj(this,-4),"U")) D vRCvalidateDDerr("QRID",$$^MSG(1476))
 I ($D(vobj(this,-100,"2*","QRID"))&($P($E($G(vobj(this,-100,"2*","QRID")),5,9999),$C(124))'=vobj(this,-4))) I ($L(vobj(this,-4))>12) D vRCvalidateDDerr("QRID",$$^MSG(1076,12))
 I ($D(vobj(this))#2)!'($order(vobj(this,""))="") D
 .	I ($D(vobj(this,-100,"0*","DESC"))&($P($E($G(vobj(this,-100,"0*","DESC")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))) I ($L($P(vobj(this),$C(124),1))>40) D vRCvalidateDDerr("DESC",$$^MSG(1076,40))
 .	Q 
 Q 
 ;
vRCvalidateDDerr(column,errmsg) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("DBTBL5Q","MSG",979,"DBTBL5Q."_column_" "_errmsg)
 I ER D throwError($get(RM))
 Q 
 ;
vRCtrimNumber(str) ; 
 I ($E(str,1)="0") S str=$$vStrTrim(str,-1,"0") I (str="") S str="0"
 I (str["."),($E(str,$L(str))="0") S str=$$RTCHR^%ZFUNC(str,"0") I ($E(str,$L(str))=".") S str=$E(str,1,$L(str)-1) I (str="") S str="0"
 Q str
 ;
vRCkeyChanged(this,vRCparams,vRCaudit) ; 
 N vTp
 N newkeys N oldkeys N vRCauditIns
 N newKey1 S newKey1=vobj(this,-3)
 N oldKey1 S oldKey1=$S($D(vobj(this,-100,"1*","LIBS")):$P($E(vobj(this,-100,"1*","LIBS"),5,9999),$C(124)),1:vobj(this,-3))
 N newKey2 S newKey2=vobj(this,-4)
 N oldKey2 S oldKey2=$S($D(vobj(this,-100,"2*","QRID")):$P($E(vobj(this,-100,"2*","QRID"),5,9999),$C(124)),1:vobj(this,-4))
  N V1,V2 S V1=vobj(this,-3),V2=vobj(this,-4) I ($D(^DBTBL(V1,6,V2))) D throwError($$^MSG(2327))
 S newkeys=newKey1_","_newKey2
 S oldkeys=oldKey1_","_oldKey2
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
 S vRCparams=$$setPar^UCUTILN(vRCparams,"NOINDEX")
 D vRCforceLoad(this)
 I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,1)
 D vRCmiscValidations(this,vRCparams,1)
 D vRCupdateDB(this,1,vRCparams,.vRCaudit,.vRCauditIns)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
 N newrec S newrec=$$vReCp1(this)
 S vobj(newrec,-2)=0
 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL5Q(newrec,$$initPar^UCUTILN($$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/"))) K vobj(newrec,-100) S vobj(newrec,-2)=1 TC:vTp  
 D
 .	N %O S %O=1
 .	N ER S ER=0
 .	N RM S RM=""
 .	;   #ACCEPT Date=10/24/2008; Pgm=RussellDS; CR=30801; Group=ACCESS
 .	D CASUPD^DBSEXECU("DBTBL5Q",oldkeys,newkeys)
 .	I ER D throwError($get(RM))
 .	Q 
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
 S vRCparams=$$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
 D vRCdelete(this,vRCparams,.vRCaudit,1)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
 K vobj(+$G(newrec)) Q 
 ;
throwError(MSG) ; 
 S $ZE="0,"_$ZPOS_","_"%PSL-E-DBFILER,"_$translate(MSG,",","~"),$EC=",U1001,"
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrRep(object,p1,p2,p3,p4,qt) ; String.replace
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I p3<0 Q object
 I $L(p1)=1,$L(p2)<2,'p3,'p4,(qt="") Q $translate(object,p1,p2)
 ;
 N y S y=0
 F  S y=$$vStrFnd(object,p1,y,p4,qt) Q:y=0  D
 .	S object=$E(object,1,y-$L(p1)-1)_p2_$E(object,y,1048575)
 .	S y=y+$L(p2)-$L(p1)
 .	I p3 S p3=p3-1 I p3=0 S y=$L(object)+1
 .	Q 
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx1() ; {Cache}%CACHE("STBLTFMT").isDefined("STBLTFMT","TFMT=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa2(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx2() ; {Cache}%CACHE("STBLTFMT").isDefined("STBLTFMT","TFMT=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa2(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vStrTrim(object,p1,p2) ; String.trim
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 I p1'<0 S object=$$RTCHR^%ZFUNC(object,p2)
 I p1'>0 F  Q:$E(object,1)'=p2  S object=$E(object,2,1048575)
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vStrFnd(object,p1,p2,p3,qt) ; String.find
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I (p1="") Q $S(p2<1:1,1:+p2)
 I p3 S object=$ZCONVERT(object,"U") S p1=$ZCONVERT(p1,"U")
 S p2=$F(object,p1,p2)
 I '(qt=""),$L($E(object,1,p2-1),qt)#2=0 D
 .	F  S p2=$F(object,p1,p2) Q:p2=0!($L($E(object,1,p2-1),qt)#2) 
 .	Q 
 Q p2
 ;
vCa2(v1,v2out) ; voXN = ({Cache}%CACHE("STBLTFMT").getRecord(STBLTFMT,1)
 ;
 I '$D(%CACHE("STBLTFMT",v1)) D
 .  I $G(%CACHE("STBLTFMT"))>100 KILL %CACHE("STBLTFMT")
 .  S %CACHE("STBLTFMT")=$G(%CACHE("STBLTFMT"))+1
 .  S %CACHE("STBLTFMT",v1)=$$vRCgetRecord1Opt^RecordSTBLTFMT(v1,0,.v2out),%CACHE("STBLTFMT",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("STBLTFMT",v1,-2)
 Q %CACHE("STBLTFMT",v1)
 ;
vReCp1(v1) ; RecordDBTBL5Q.copy: DBTBL5Q
 ;
 N vNod,vOid
 I $G(vobj(v1,-2)) D
 .	F vNod=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17 S:'$D(vobj(v1,vNod)) vobj(v1,vNod)=$G(^DBTBL(vobj(v1,-3),6,vobj(v1,-4),vNod))
 S vOid=$$copy^UCGMR(v1)
 Q vOid
