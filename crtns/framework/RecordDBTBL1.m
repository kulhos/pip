 ; 
 ; **** Routine compiled from DATA-QWIK Filer RecordDBTBL1 ****
 ; 
 ; 02/24/2010 18:39 - pip
 ; 
 ;
 ; Record Class code for table DBTBL1
 ;
 ; Generated by PSLRecordBuilder on 02/24/2010 at 18:39 by
 ;
vcdmNew() ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL1",vobj(vOid,-2)=0,vobj(vOid)=""
 S vobj(vOid,-3)=""
 S vobj(vOid,-4)=""
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0(v1,v2,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL1"
 S vobj(vOid)=$G(^DBTBL(v1,1,v2))
 I vobj(vOid)="",'$D(^DBTBL(v1,1,v2))
 S vobj(vOid,-2)=1
 I $T K vobj(vOid) S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,DBTBL1",$EC=",U1001,"
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord1(v1,v2,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL1"
 S vobj(vOid)=$G(^DBTBL(v1,1,v2))
 I vobj(vOid)="",'$D(^DBTBL(v1,1,v2))
 S vobj(vOid,-2)='$T
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0Opt(v1,v2,vfromDbSet,v2out) ; 
 N dbtbl1
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S dbtbl1=$G(^DBTBL(v1,1,v2))
 I dbtbl1="",'$D(^DBTBL(v1,1,v2))
 S v2out=1
 I $T S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,DBTBL1",$EC=",U1001,"
 ;*** End of code by-passed by compiler ***
 Q dbtbl1
 ;
vRCgetRecord1Opt(v1,v2,vfromDbSet,v2out) ; 
 N dbtbl1
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S dbtbl1=$G(^DBTBL(v1,1,v2))
 I dbtbl1="",'$D(^DBTBL(v1,1,v2))
 S v2out='$T
 ;*** End of code by-passed by compiler ***
 Q dbtbl1
 ;
vBypassSave(this) ; 
 D vSave(this,"/NOJOURNAL/NOTRIGAFT/NOTRIGBEF/NOVALDD/NOVALREQ/NOVALRI/NOVALST",0)
 Q 
 ;
vSave(this,vRCparams,vauditLogSeq) ; 
 N vRCaudit N vRCauditIns
 N %O S %O=$G(vobj(this,-2))
 I ($get(vRCparams)="") S vRCparams="/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/"
 I (%O=0) D
 .	D AUDIT^UCUTILN(this,.vRCauditIns,11,"|")
 .	D vRCsetDefaults(this)
 .	I (("/"_vRCparams_"/")["/TRIGBEF/") D vRCbeforeInsTrigs(this,vRCparams)
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	I (("/"_vRCparams_"/")["/TRIGAFT/") D vRCafterInsTrigs(this,vRCparams)
 .	Q 
 E  I (%O=1) D
 .	Q:'$D(vobj(this,-100)) 
 .	D AUDIT^UCUTILN(this,.vRCaudit,11,"|")
 .	I ($D(vobj(this,-100,"1*","%LIBS"))&($P($E($G(vobj(this,-100,"1*","%LIBS")),5,9999),$C(124))'=vobj(this,-3)))!($D(vobj(this,-100,"2*","FID"))&($P($E($G(vobj(this,-100,"2*","FID")),5,9999),$C(124))'=vobj(this,-4))) D vRCkeyChanged(this,vRCparams,.vRCaudit) Q 
 .	I (("/"_vRCparams_"/")["/TRIGBEF/") D vRCbeforeUpdTrigs(this,vRCparams,.vRCaudit)
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForUpdate(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD1(this)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	I (("/"_vRCparams_"/")["/TRIGAFT/") D vRCafterUpdTrigs(this,vRCparams)
 .	Q 
 E  I (%O=2) D
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,2)
 .	I (("/"_vRCparams_"/")["/INDEX/") D updateIndexes(this,%O,.vRCaudit)
 .	I (("/"_vRCparams_"/")["/TRIGAFT/") D vRCafterInsTrigs(this,vRCparams)
 .	Q 
 E  I (%O=3) D
 .	  N V1,V2 S V1=vobj(this,-3),V2=vobj(this,-4) Q:'($D(^DBTBL(V1,1,V2))) 
 .	I (("/"_vRCparams_"/")["/TRIGBEF/") D vRCbeforeDelTrigs(this,vRCparams)
 .	D vRCdelete(this,vRCparams,.vRCaudit,0)
 .	Q 
 Q 
 ;
vcheckAccessRights() ; 
 Q ""
 ;
vinsertAccess(userclass) ; 
 Q 1
 ;
vinsertOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vupdateAccess(userclass) ; 
 Q 1
 ;
vupdateOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vdeleteAccess(userclass) ; 
 Q 1
 ;
vdeleteOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectAccess(userclass,restrict,from) ; 
 S (restrict,from)=""
 Q 1
 ;
vselectOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectOptmOK(userclass,dbtbl1,vkey1,vkey2) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vgetLogging() ; 
 Q "0"
 ;
logUserclass(operation) ; 
 I (operation="INSERT") Q 0
 E  I (operation="UPDATE") Q 0
 E  I (operation="DELETE") Q 0
 E  I (operation="SELECT") Q 0
 Q 0
 ;
vlogSelect(statement,using) ; 
 Q 0
 ;
columnList() ; 
 N columns S columns=""
 S columns=columns_"%LIBS,ACCKEYS,AKEY1,AKEY2,AKEY3,AKEY4,AKEY5,AKEY6,AKEY7,DBASE,DEL,DES,DFLAG,DFTDES,DFTDES1,DFTHDR,DFTORD,EXIST,EXTENDLENGTH,FDOC,"
 S columns=columns_"FID,FILETYP,FPN,FSN,GLOBAL,GLREF,LISTDFT,LISTREQ,LOG,LTD,MPLCTDD,NETLOC,PARFID,PREDAEN,PSLPACKAGE,PTRTIM,PTRTIMU,PTRTLD,PTRTLDU,PTRUSER,"
 S columns=columns_"PTRUSERU,PUBLISH,QID1,RECTYP,RFLAG,SCREEN,SYSSN,UDPOST,UDPRE,USER,VAL4EXT,"
 Q $$vStrRep("%LIBS,ACCKEYS,AKEY1,AKEY2,AKEY3,AKEY4,AKEY5,AKEY6,AKEY7,DBASE,DEL,DES,DFLAG,DFTDES,DFTDES1,DFTHDR,DFTORD,EXIST,EXTENDLENGTH,FDOC,FID,FILETYP,FPN,FSN,GLOBAL,GLREF,LISTDFT,LISTREQ,LOG,LTD,MPLCTDD,NETLOC,PARFID,PREDAEN,PSLPACKAGE,PTRTIM,PTRTIMU,PTRTLD,PTRTLDU,PTRUSER,PTRUSERU,PUBLISH,QID1,RECTYP,RFLAG,SCREEN,SYSSN,UDPOST,UDPRE,USER,VAL4EXT",",",$char(9),0,0,"")
 ;
columnListBM() ; 
 Q ""
 ;
columnListCMP() ; 
 Q $$vStrRep("",",",$char(9),0,0,"")
 ;
getColumnMap(map) ; 
 ;
 S map(-4)="FID:U:"
 S map(-3)="%LIBS:T:"
 S map(-1)="DES:T:1"
 S map(0)="GLOBAL:T:1"
 S map(1)="AKEY1:T:1"
 S map(2)="AKEY2:T:1"
 S map(3)="AKEY3:T:1"
 S map(4)="AKEY4:T:1"
 S map(5)="AKEY5:T:1"
 S map(6)="AKEY6:T:1"
 S map(7)="AKEY7:T:1"
 S map(10)="DBASE:T:15;DEL:N:1;DFTDES:T:6;DFTDES1:T:9;DFTHDR:T:8;DFTORD:L:7;EXIST:N:13;EXTENDLENGTH:L:14;FILETYP:N:12;LTD:D:10;MPLCTDD:T:5;NETLOC:N:3;PARFID:U:4;SYSSN:U:2;USER:T:11"
 S map(12)="FSN:T:1"
 S map(13)="FDOC:U:1"
 S map(14)="QID1:T:1"
 S map(16)="ACCKEYS:U:1"
 S map(22)="DFLAG:L:10;PREDAEN:T:5;PSLPACKAGE:T:11;RFLAG:L:9;SCREEN:U:8;VAL4EXT:L:1"
 S map(99)="FPN:U:3;PUBLISH:T:6;UDPOST:U:5;UDPRE:U:4"
 S map(100)="GLREF:T:1;LOG:L:5;PTRTIM:U:8;PTRTIMU:U:11;PTRTLD:U:4;PTRTLDU:U:10;PTRUSER:U:3;PTRUSERU:U:9;RECTYP:N:2"
 S map(101)="LISTDFT:T:1"
 S map(102)="LISTREQ:T:1"
 Q 
 ;
vlegacy(processMode,params) ; 
 N vTp
 I (processMode=2) D
 .	N dbtbl1 S dbtbl1=$$vRCgetRecord0^RecordDBTBL1(%LIBS,FID,0)
 .	S vobj(dbtbl1,-2)=2
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1(dbtbl1,$$initPar^UCUTILN(params)) K vobj(dbtbl1,-100) S vobj(dbtbl1,-2)=1 TC:vTp  
 .	K vobj(+$G(dbtbl1)) Q 
 Q 
 ;
vhasLiterals() ; 
 Q 0
 ;
vRCmiscValidations(this,vRCparams,processMode) ; 
 I (("/"_vRCparams_"/")["/VALST/")  N V1,V2 S V1=vobj(this,-3),V2=vobj(this,-4) I '(''($D(^DBTBL(V1,1,V2)))=''processMode) D
 .	N errmsg
 .	I (+processMode'=+0) S errmsg=$$^MSG(7932)
 .	E  S errmsg=$$^MSG(2327)
 .	D throwError(errmsg)
 .	Q 
 Q 
 ;
vRCupdateDB(this,processMode,vRCparams,vRCaudit,vRCauditIns) ; 
  S:'$D(vobj(this,10)) vobj(this,10)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),10)),1:"")
 I '(("/"_vRCparams_"/")["/NOUPDATE/") D
 .  S vobj(this,-100,10)="" S $P(vobj(this,10),$C(124),10)=$P($H,",",1)
 .	I '(+$P($G(vobj(this,-100,10,"USER")),$C(124),2)&($P($E($G(vobj(this,-100,10,"USER")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),11)))  S vobj(this,-100,10)="" S $P(vobj(this,10),$C(124),11)=$E($$USERNAM^%ZFUNC,1,40)
 .	I '(("/"_vRCparams_"/")["/NOLOG/") D
 ..		I (processMode=1) D ^DBSLOGIT(this,1,.vRCaudit) Q 
 ..		D ^DBSLOGIT(this,0,.vRCauditIns)
 ..		Q 
 .	N n
 .	S n=-1
 .	F  S n=$order(vobj(this,n)) Q:(n="")  D
 ..		Q:'($D(vobj(this,n))#2) 
 ..		;    #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
 ..		;*** Start of code by-passed by compiler
 ..		S ^DBTBL(vobj(this,-3),1,vobj(this,-4),n)=vobj(this,n)
 ..		;*** End of code by-passed by compiler ***
 ..		Q 
 .	;   #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(vobj(this)) S ^DBTBL(vobj(this,-3),1,vobj(this,-4))=vobj(this)
 .	;*** End of code by-passed by compiler ***
 .	Q 
 I (("/"_vRCparams_"/")["/INDEX/"),((processMode=0)!$D(vobj(this,-100))) D updateIndexes(this,processMode,.vRCaudit)
 Q 
 ;
vRCdelete(this,vRCparams,vRCaudit,isKeyChange) ; 
 I '$get(isKeyChange),$D(vobj(this,-100)) D throwError("Deleted object cannot be modified")
 I (("/"_vRCparams_"/")["/CASDEL/") D vRCcascadeDelete(this,vRCparams)
 I (("/"_vRCparams_"/")["/INDEX/") D updateIndexes(this,3,.vRCaudit)
 I '(("/"_vRCparams_"/")["/NOLOG/") D ^DBSLOGIT(this,3)
 ;  #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
 ;*** Start of code by-passed by compiler
 kill ^DBTBL(vobj(this,-3),1,vobj(this,-4))
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCsetDefaults(this) ; 
  S:'$D(vobj(this,10)) vobj(this,10)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),10)),1:"")
  S:'$D(vobj(this,22)) vobj(this,22)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),22)),1:"")
  S:'$D(vobj(this,100)) vobj(this,100)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),100)),1:"")
 I ($P(vobj(this,10),$C(124),1)="")  S vobj(this,-100,10)="" S $P(vobj(this,10),$C(124),1)=124
 I ($P(vobj(this,22),$C(124),10)="")  S vobj(this,-100,22)="" S $P(vobj(this,22),$C(124),10)=0
 I ($P(vobj(this,10),$C(124),7)="")  S vobj(this,-100,10)="" S $P(vobj(this,10),$C(124),7)=0
 I ($P(vobj(this,10),$C(124),14)="")  S vobj(this,-100,10)="" S $P(vobj(this,10),$C(124),14)=0
 I ($P(vobj(this,100),$C(124),5)="")  S vobj(this,-100,100)="" S $P(vobj(this,100),$C(124),5)=0
 I ($P(vobj(this,10),$C(124),3)="")  S vobj(this,-100,10)="" S $P(vobj(this,10),$C(124),3)=0
 I ($P(vobj(this,100),$C(124),2)="")  S vobj(this,-100,100)="" S $P(vobj(this,100),$C(124),2)=1
 I ($P(vobj(this,22),$C(124),9)="")  S vobj(this,-100,22)="" S $P(vobj(this,22),$C(124),9)=0
 I ($P(vobj(this,10),$C(124),2)="")  S vobj(this,-100,10)="" S $P(vobj(this,10),$C(124),2)="PBS"
 I ($P(vobj(this,22),$C(124),1)="")  S vobj(this,-100,22)="" S $P(vobj(this,22),$C(124),1)=0
 Q 
 ;
vRCchkReqForInsert(this) ; 
  S:'$D(vobj(this,16)) vobj(this,16)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),16)),1:"")
  S:'$D(vobj(this,22)) vobj(this,22)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),22)),1:"")
  S:'$D(vobj(this,10)) vobj(this,10)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),10)),1:"")
  S:'$D(vobj(this,13)) vobj(this,13)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),13)),1:"")
  S:'$D(vobj(this,100)) vobj(this,100)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),100)),1:"")
 I (vobj(this,-3)="") D vRCrequiredErr("%LIBS")
 I ($P(vobj(this,16),$C(124),1)="") D vRCrequiredErr("ACCKEYS")
 I ($P(vobj(this),$C(124),1)="") D vRCrequiredErr("DES")
 I ($P(vobj(this,22),$C(124),10)="") D vRCrequiredErr("DFLAG")
 I ($P(vobj(this,10),$C(124),7)="") D vRCrequiredErr("DFTORD")
 I ($P(vobj(this,10),$C(124),14)="") D vRCrequiredErr("EXTENDLENGTH")
 I ($P(vobj(this,13),$C(124),1)="") D vRCrequiredErr("FDOC")
 I (vobj(this,-4)="") D vRCrequiredErr("FID")
 I ($P(vobj(this,100),$C(124),5)="") D vRCrequiredErr("LOG")
 I ($P(vobj(this,22),$C(124),9)="") D vRCrequiredErr("RFLAG")
 I ($P(vobj(this,22),$C(124),1)="") D vRCrequiredErr("VAL4EXT")
 Q 
 ;
vRCchkReqForUpdate(this) ; 
  S:'$D(vobj(this,10)) vobj(this,10)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),10)),1:"")
  S:'$D(vobj(this,13)) vobj(this,13)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),13)),1:"")
  S:'$D(vobj(this,16)) vobj(this,16)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),16)),1:"")
  S:'$D(vobj(this,22)) vobj(this,22)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),22)),1:"")
  S:'$D(vobj(this,100)) vobj(this,100)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),100)),1:"")
 I (vobj(this,-3)="") D vRCrequiredErr("%LIBS")
 I (vobj(this,-4)="") D vRCrequiredErr("FID")
 I ($D(vobj(this,-100,10))>9) D
 .	I ($D(vobj(this,-100,10,"DFTORD"))&($P($E($G(vobj(this,-100,10,"DFTORD")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),7))),($P(vobj(this,10),$C(124),7)="") D vRCrequiredErr("DFTORD")
 .	I ($D(vobj(this,-100,10,"EXTENDLENGTH"))&($P($E($G(vobj(this,-100,10,"EXTENDLENGTH")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),14))),($P(vobj(this,10),$C(124),14)="") D vRCrequiredErr("EXTENDLENGTH")
 .	Q 
 ; Node 13 - only one required column
 I ($D(vobj(this,-100,13,"FDOC"))&($P($E($G(vobj(this,-100,13,"FDOC")),5,9999),$C(124))'=$P(vobj(this,13),$C(124),1))),($P(vobj(this,13),$C(124),1)="") D vRCrequiredErr("FDOC")
 ; Node 16 - only one required column
 I ($D(vobj(this,-100,16,"ACCKEYS"))&($P($E($G(vobj(this,-100,16,"ACCKEYS")),5,9999),$C(124))'=$P(vobj(this,16),$C(124),1))),($P(vobj(this,16),$C(124),1)="") D vRCrequiredErr("ACCKEYS")
 I ($D(vobj(this,-100,22))>9) D
 .	I ($D(vobj(this,-100,22,"VAL4EXT"))&($P($E($G(vobj(this,-100,22,"VAL4EXT")),5,9999),$C(124))'=$P(vobj(this,22),$C(124),1))),($P(vobj(this,22),$C(124),1)="") D vRCrequiredErr("VAL4EXT")
 .	I ($D(vobj(this,-100,22,"RFLAG"))&($P($E($G(vobj(this,-100,22,"RFLAG")),5,9999),$C(124))'=$P(vobj(this,22),$C(124),9))),($P(vobj(this,22),$C(124),9)="") D vRCrequiredErr("RFLAG")
 .	I ($D(vobj(this,-100,22,"DFLAG"))&($P($E($G(vobj(this,-100,22,"DFLAG")),5,9999),$C(124))'=$P(vobj(this,22),$C(124),10))),($P(vobj(this,22),$C(124),10)="") D vRCrequiredErr("DFLAG")
 .	Q 
 ; Node 100 - only one required column
 I ($D(vobj(this,-100,100,"LOG"))&($P($E($G(vobj(this,-100,100,"LOG")),5,9999),$C(124))'=$P(vobj(this,100),$C(124),5))),($P(vobj(this,100),$C(124),5)="") D vRCrequiredErr("LOG")
 ; Node "0*" - only one required column
 I ($D(vobj(this,-100,"0*","DES"))&($P($E($G(vobj(this,-100,"0*","DES")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))),($P(vobj(this),$C(124),1)="") D vRCrequiredErr("DES")
 ; Node "1*" - only one required column
 I ($D(vobj(this,-100,"1*","%LIBS"))&($P($E($G(vobj(this,-100,"1*","%LIBS")),5,9999),$C(124))'=vobj(this,-3))),(vobj(this,-3)="") D vRCrequiredErr("%LIBS")
 ; Node "2*" - only one required column
 I ($D(vobj(this,-100,"2*","FID"))&($P($E($G(vobj(this,-100,"2*","FID")),5,9999),$C(124))'=vobj(this,-4))),(vobj(this,-4)="") D vRCrequiredErr("FID")
 Q 
 ;
vRCrequiredErr(column) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("DBTBL1","MSG",1767,"DBTBL1."_column)
 I ER D throwError($get(RM))
 Q 
 ;
vRCTrig1(this,dbtbl1,vpar) ; Trigger AFTER_INSERT - After Insert - AI
 N vTp
  S:'$D(vobj(dbtbl1,16)) vobj(dbtbl1,16)=$S(vobj(dbtbl1,-2):$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),16)),1:"")
 ;
 N i
 N ACCKEYS N FID N KEY
 ;
 S ACCKEYS=$P(vobj(dbtbl1,16),$C(124),1)
 S FID=vobj(dbtbl1,-4)
 ;
 ; Create missing access keys in DBTBL1D
 ;
 F i=1:1:$L(ACCKEYS,",") D
 .	;
 .	S KEY=$piece(ACCKEYS,",",i)
 .	;
 .	N dbtbl1d S dbtbl1d=$$vcdmNew^RecordDBTBL1D() S vobj(dbtbl1d,-3)="SYSDEV" S vobj(dbtbl1d,-4)=FID S vobj(dbtbl1d,-5)=KEY
 .	;
 .  S:'$D(vobj(dbtbl1d,-100,"0*","NOD")) vobj(dbtbl1d,-100,"0*","NOD")="T001"_$P(vobj(dbtbl1d),$C(124),1),vobj(dbtbl1d,-100,"0*")="" S $P(vobj(dbtbl1d),$C(124),1)=i_"*"
 .  S $P(vobj(dbtbl1d),$C(124),10)=KEY
 .  S $P(vobj(dbtbl1d),$C(124),22)=KEY
 .  S $P(vobj(dbtbl1d),$C(124),2)=12
 .  S $P(vobj(dbtbl1d),$C(124),9)="N"
 .  S $P(vobj(dbtbl1d),$C(124),15)=1
 .	;
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1D(dbtbl1d,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/") K vobj(dbtbl1d,-100) S vobj(dbtbl1d,-2)=1 TC:vTp  
 .	K vobj(+$G(dbtbl1d)) Q 
 ;
 Q 
 ;
vRCTrig2(this,dbtbl1,vpar) ; Trigger AU_ACCKEYS - After update accecc keys - AU
 N vTp
  S:'$D(vobj(dbtbl1,16)) vobj(dbtbl1,16)=$S(vobj(dbtbl1,-2):$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),16)),1:"")
  S:'$D(vobj(dbtbl1,0)) vobj(dbtbl1,0)=$S(vobj(dbtbl1,-2):$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),0)),1:"")
 ;
 N KEYNUM
 N GBLREF N KEYNAME N NEWKEYS N OLDKEYS
 ;
 S OLDKEYS=$S($D(vobj(dbtbl1,-100,16,"ACCKEYS")):$P($E(vobj(dbtbl1,-100,16,"ACCKEYS"),5,9999),$C(124)),1:$P(vobj(dbtbl1,16),$C(124),1)) ; Old access keys
 S NEWKEYS=$P(vobj(dbtbl1,16),$C(124),1) ; New access keys
 ;
 ; Reset global reference
 S GBLREF="^"_$P(vobj(dbtbl1,0),$C(124),1)_"("_NEWKEYS
 D vDbUpd1()
 ;
 F KEYNUM=1:1:$L(NEWKEYS,",") S NEWKEYS($piece(NEWKEYS,",",KEYNUM))=KEYNUM
 ;
 ; If old key is no longer new key, delete it
 F KEYNUM=1:1:$L(OLDKEYS,",") D
 .	S KEYNAME=$piece(OLDKEYS,",",KEYNUM)
 .	I '($D(NEWKEYS(KEYNAME))#2) D vDbDe1()
 .	Q 
 ;
 ; For new keys, if already existed, update key number, otherwise add key
 S KEYNAME=""
 F  S KEYNAME=$order(NEWKEYS(KEYNAME)) Q:(KEYNAME="")  D
 .	S KEYNUM=NEWKEYS(KEYNAME)
 .	;
 .	N dbtbl1d S dbtbl1d=$$vRCgetRecord1^RecordDBTBL1D("SYSDEV",FID,KEYNAME,0)
 .	;
 .	I $P(vobj(dbtbl1d),$C(124),1)'=(KEYNUM_"*") D
 ..		;
 ..	  S:'$D(vobj(dbtbl1d,-100,"0*","NOD")) vobj(dbtbl1d,-100,"0*","NOD")="T001"_$P(vobj(dbtbl1d),$C(124),1),vobj(dbtbl1d,-100,"0*")="" S $P(vobj(dbtbl1d),$C(124),1)=KEYNUM_"*"
 ..		;
 ..		I '$G(vobj(dbtbl1d,-2)) D  ; New key
 ...		  S $P(vobj(dbtbl1d),$C(124),9)="N"
 ...		  S $P(vobj(dbtbl1d),$C(124),2)=12
 ...		  S $P(vobj(dbtbl1d),$C(124),10)=KEYNAME
 ...		  S $P(vobj(dbtbl1d),$C(124),22)=KEYNAME
 ...		  S $P(vobj(dbtbl1d),$C(124),15)=1
 ...			Q 
 ..		;
 ..	 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1D(dbtbl1d,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/") K vobj(dbtbl1d,-100) S vobj(dbtbl1d,-2)=1 TC:vTp  
 ..		Q 
 .	K vobj(+$G(dbtbl1d)) Q 
 ;
 Q 
 ;
vRCTrig3(this,dbtbl1,vpar) ; Trigger AU_PARFID - After update supertype information - AU
  S:'$D(vobj(dbtbl1,10)) vobj(dbtbl1,10)=$S(vobj(dbtbl1,-2):$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),10)),1:"")
 ;----------------------------------------------------------------------
 ; Copy data item info from supertype file to descendant files
 ;----------------------------------------------------------------------
 ;
 N nparfid N oparfid
 ;
 S nparfid=$P(vobj(dbtbl1,10),$C(124),4) ; Supertype file name
 S oparfid=$S($D(vobj(dbtbl1,-100,10,"PARFID")):$P($E(vobj(dbtbl1,-100,10,"PARFID"),5,9999),$C(124)),1:$P(vobj(dbtbl1,10),$C(124),4)) ; Original name
 I oparfid'="" D PARDEL^DBSDF(oparfid,FID) ; Delete old data
 I nparfid'="" D PARCOPY^DBSDF(nparfid,FID) ; Create new data
 ;
 Q 
 ;
vRCTrig4(this,dbtbl1,vpar) ; Trigger BEFORE_DELETE - Before Delete - BD
 ; Delete data items
 ;
 D vDbDe2()
 ;
 Q 
 ;
vRCTrig5(this,dbtbl1,vpar) ; Trigger BEFORE_INSERT - Before Insert - BI
  S:'$D(vobj(dbtbl1,0)) vobj(dbtbl1,0)=$S(vobj(dbtbl1,-2):$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),0)),1:"")
  S:'$D(vobj(dbtbl1,100)) vobj(dbtbl1,100)=$S(vobj(dbtbl1,-2):$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),100)),1:"")
  S:'$D(vobj(dbtbl1,16)) vobj(dbtbl1,16)=$S(vobj(dbtbl1,-2):$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),16)),1:"")
 ;
 ; Default global name
 ;
 I ($P(vobj(dbtbl1,0),$C(124),1)="") D
 .	;
 .	I ($E(vobj(dbtbl1,-4),1,4)="UTBL")!($E(vobj(dbtbl1,-4),1,5)="ZUTBL")  S:'$D(vobj(dbtbl1,-100,0,"GLOBAL")) vobj(dbtbl1,-100,0,"GLOBAL")="T001"_$P(vobj(dbtbl1,0),$C(124),1),vobj(dbtbl1,-100,0)="" S $P(vobj(dbtbl1,0),$C(124),1)="UTBL"
 .	E  I ($E(vobj(dbtbl1,-4),1,4)="STBL")!($E(vobj(dbtbl1,-4),1,5)="ZSTBL")  S:'$D(vobj(dbtbl1,-100,0,"GLOBAL")) vobj(dbtbl1,-100,0,"GLOBAL")="T001"_$P(vobj(dbtbl1,0),$C(124),1),vobj(dbtbl1,-100,0)="" S $P(vobj(dbtbl1,0),$C(124),1)="STBL"
 .	E  I ($E(vobj(dbtbl1,-4),1,4)="CTBL")!($E(vobj(dbtbl1,-4),1,5)="ZCTBL")  S:'$D(vobj(dbtbl1,-100,0,"GLOBAL")) vobj(dbtbl1,-100,0,"GLOBAL")="T001"_$P(vobj(dbtbl1,0),$C(124),1),vobj(dbtbl1,-100,0)="" S $P(vobj(dbtbl1,0),$C(124),1)="CTBL"
 .	Q 
 ;
 ; Reset full global reference
 ;
  S vobj(dbtbl1,-100,100)="" S $P(vobj(dbtbl1,100),$C(124),1)="^"_$P(vobj(dbtbl1,0),$C(124),1)_"("_$P(vobj(dbtbl1,16),$C(124),1)
 ;
 Q 
 ;
vRCTrig6(this,dbtbl1,vpar) ; Trigger BEFORE_UPDATE - Before  Update - BU
 ;
 Q 
 ;
vRCTrig7(this,dbtbl1,vpar) ; Trigger BU_GLOBAL - Change GLREF field - BU
  S:'$D(vobj(dbtbl1,100)) vobj(dbtbl1,100)=$S(vobj(dbtbl1,-2):$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),100)),1:"")
  S:'$D(vobj(dbtbl1,0)) vobj(dbtbl1,0)=$S(vobj(dbtbl1,-2):$G(^DBTBL(vobj(dbtbl1,-3),1,vobj(dbtbl1,-4),0)),1:"")
 ;
 N gbl S gbl=$P(vobj(dbtbl1,100),$C(124),1) ; Old reference
  S:'$D(vobj(dbtbl1,-100,100,"GLREF")) vobj(dbtbl1,-100,100,"GLREF")="T001"_$P(vobj(dbtbl1,100),$C(124),1),vobj(dbtbl1,-100,100)="" S $P(vobj(dbtbl1,100),$C(124),1)=$char(94)_$P(vobj(dbtbl1,0),$C(124),1)_"("_$piece(gbl,"(",2) ; New reference
 Q 
 ;
vRCbeforeInsTrigs(this,vRCparams) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 D vRCTrig5(this,this,vRCparams) I ER D throwError($get(RM))
 Q 
 ;
vRCbeforeUpdTrigs(this,vRCparams,vRCaudit) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 Q:'$D(vobj(this,-100)) 
 D vRCTrig6(this,this,vRCparams) I ER D throwError($get(RM))
 S vRCfire=0
 I ($D(vobj(this,-100,0,"GLOBAL"))&($P($E($G(vobj(this,-100,0,"GLOBAL")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),1))) S vRCfire=1
 I vRCfire D vRCTrig7(this,this,vRCparams) I ER D throwError($get(RM))
 D AUDIT^UCUTILN(this,.vRCaudit,10,"|")
 Q 
 ;
vRCbeforeDelTrigs(this,vRCparams) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 D vRCTrig4(this,this,vRCparams) I ER D throwError($get(RM))
 Q 
 ;
vRCafterInsTrigs(this,vRCparams) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 D vRCTrig1(this,this,vRCparams) I ER D throwError($get(RM))
 Q 
 ;
vRCafterUpdTrigs(this,vRCparams) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 Q:'$D(vobj(this,-100)) 
 S vRCfire=0
 I ($D(vobj(this,-100,16,"ACCKEYS"))&($P($E($G(vobj(this,-100,16,"ACCKEYS")),5,9999),$C(124))'=$P(vobj(this,16),$C(124),1))) S vRCfire=1
 I vRCfire D vRCTrig2(this,this,vRCparams) I ER D throwError($get(RM))
 S vRCfire=0
 I ($D(vobj(this,-100,10,"PARFID"))&($P($E($G(vobj(this,-100,10,"PARFID")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),4))) S vRCfire=1
 I vRCfire D vRCTrig3(this,this,vRCparams) I ER D throwError($get(RM))
 Q 
 ;
vRCforceLoad(this) ; 
 N n S n=""
 ;  #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
 ;*** Start of code by-passed by compiler
 for  set n=$order(^DBTBL(vobj(this,-3),1,vobj(this,-4),n)) quit:n=""  if '$D(vobj(this,n)),$D(^DBTBL(vobj(this,-3),1,vobj(this,-4),n))#2 set vobj(this,n)=^(n)
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCvalidateDD(this,processMode) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I (processMode=2) D vRCforceLoad(this)
 I ($D(vobj(this,0))#2) D
 .	 S:'$D(vobj(this,0)) vobj(this,0)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),0)),1:"")
 .	S X=$P(vobj(this,0),$C(124),1) I '(X="") S errmsg=$$VAL^DBSVER("T",31,0,,"((X?1A.AN)!(X?1""%"".AN)!(X?1""[""1E.E1""]""1E.E))") I '(errmsg="") D vRCvalidateDDerr("GLOBAL",$$^MSG(979,"DBTBL1.GLOBAL"_" "_errmsg))
 .	Q 
 I ($D(vobj(this,1))#2) D
 .	 S:'$D(vobj(this,1)) vobj(this,1)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),1)),1:"")
 .	I ($L($P(vobj(this,1),$C(124),1))>12) D vRCvalidateDDerr("AKEY1",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,2))#2) D
 .	 S:'$D(vobj(this,2)) vobj(this,2)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),2)),1:"")
 .	I ($L($P(vobj(this,2),$C(124),1))>12) D vRCvalidateDDerr("AKEY2",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,3))#2) D
 .	 S:'$D(vobj(this,3)) vobj(this,3)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),3)),1:"")
 .	I ($L($P(vobj(this,3),$C(124),1))>12) D vRCvalidateDDerr("AKEY3",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,4))#2) D
 .	 S:'$D(vobj(this,4)) vobj(this,4)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),4)),1:"")
 .	I ($L($P(vobj(this,4),$C(124),1))>12) D vRCvalidateDDerr("AKEY4",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,5))#2) D
 .	 S:'$D(vobj(this,5)) vobj(this,5)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),5)),1:"")
 .	I ($L($P(vobj(this,5),$C(124),1))>12) D vRCvalidateDDerr("AKEY5",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,6))#2) D
 .	 S:'$D(vobj(this,6)) vobj(this,6)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),6)),1:"")
 .	I ($L($P(vobj(this,6),$C(124),1))>12) D vRCvalidateDDerr("AKEY6",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,7))#2) D
 .	 S:'$D(vobj(this,7)) vobj(this,7)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),7)),1:"")
 .	I ($L($P(vobj(this,7),$C(124),1))>12) D vRCvalidateDDerr("AKEY7",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,10))#2) D
 .	 S:'$D(vobj(this,10)) vobj(this,10)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),10)),1:"")
 .	S X=$P(vobj(this,10),$C(124),15) I '(X=""),'((","_"GTM,ORACLE"_",")[(","_X_",")) D vRCvalidateDDerr("DBASE",$$^MSG(1485,X))
 .	S X=$P(vobj(this,10),$C(124),1) I '(X=""),'($D(^DBCTL("SYS","DELIM",X))#2) D vRCvalidateDDerr("DEL",$$^MSG(1485,X))
 .	I ($L($P(vobj(this,10),$C(124),6))>200) D vRCvalidateDDerr("DFTDES",$$^MSG(1076,200))
 .	I ($L($P(vobj(this,10),$C(124),9))>200) D vRCvalidateDDerr("DFTDES1",$$^MSG(1076,200))
 .	I ($L($P(vobj(this,10),$C(124),8))>78) D vRCvalidateDDerr("DFTHDR",$$^MSG(1076,78))
 .	I '(($P(vobj(this,10),$C(124),7)=1)!($P(vobj(this,10),$C(124),7)=0)) D vRCvalidateDDerr("DFTORD",$$^MSG(742,"L"))
 .	I '($P(vobj(this,10),$C(124),13)=""),'(+$P(vobj(this,10),$C(124),13)=$P(vobj(this,10),$C(124),13))  S vobj(this,-100,10)="" S $P(vobj(this,10),$C(124),13)=$$vRCtrimNumber($P(vobj(this,10),$C(124),13))
 .	S X=$P(vobj(this,10),$C(124),13) I '(X=""),(X'?1.6N),(X'?1"-"1.5N) D vRCvalidateDDerr("EXIST",$$^MSG(742,"N"))
 .	I '(($P(vobj(this,10),$C(124),14)=1)!($P(vobj(this,10),$C(124),14)=0)) D vRCvalidateDDerr("EXTENDLENGTH",$$^MSG(742,"L"))
 .	S X=$P(vobj(this,10),$C(124),12) I '(X=""),'($D(^DBCTL("SYS","FILETYP",X))#2) D vRCvalidateDDerr("FILETYP",$$^MSG(1485,X))
 .	S X=$P(vobj(this,10),$C(124),10) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("LTD",$$^MSG(742,"D"))
 .	I ($L($P(vobj(this,10),$C(124),5))>25) D vRCvalidateDDerr("MPLCTDD",$$^MSG(1076,25))
 .	S X=$P(vobj(this,10),$C(124),3) I '(X=""),'((","_"0,1,2"_",")[(","_X_",")) D vRCvalidateDDerr("NETLOC",$$^MSG(1485,X))
 .	I ($P(vobj(this,10),$C(124),4)'=$ZCONVERT($P(vobj(this,10),$C(124),4),"U")) D vRCvalidateDDerr("PARFID",$$^MSG(1476))
 .	I ($L($P(vobj(this,10),$C(124),4))>25) D vRCvalidateDDerr("PARFID",$$^MSG(1076,25))
 .	S X=$P(vobj(this,10),$C(124),2) I '(X=""),'($D(^SCATBL(2,X))#2) D vRCvalidateDDerr("SYSSN",$$^MSG(1485,X))
 .	I ($L($P(vobj(this,10),$C(124),11))>40) D vRCvalidateDDerr("USER",$$^MSG(1076,40))
 .	Q 
 I ($D(vobj(this,12))#2) D
 .	 S:'$D(vobj(this,12)) vobj(this,12)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),12)),1:"")
 .	S X=$P(vobj(this,12),$C(124),1) I '(X="") S errmsg=$$VAL^DBSVER("T",12,0,,"X?1A.AN.E!(X?1""%"".AN.E)") I '(errmsg="") D vRCvalidateDDerr("FSN",$$^MSG(979,"DBTBL1.FSN"_" "_errmsg))
 .	Q 
 I ($D(vobj(this,13))#2) D
 .	 S:'$D(vobj(this,13)) vobj(this,13)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),13)),1:"")
 .	I ($P(vobj(this,13),$C(124),1)'=$ZCONVERT($P(vobj(this,13),$C(124),1),"U")) D vRCvalidateDDerr("FDOC",$$^MSG(1476))
 .	I ($L($P(vobj(this,13),$C(124),1))>30) D vRCvalidateDDerr("FDOC",$$^MSG(1076,30))
 .	Q 
 I ($D(vobj(this,14))#2) D
 .	 S:'$D(vobj(this,14)) vobj(this,14)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),14)),1:"")
 .	I ($L($P(vobj(this,14),$C(124),1))>100) D vRCvalidateDDerr("QID1",$$^MSG(1076,100))
 .	Q 
 I ($D(vobj(this,16))#2) D
 .	 S:'$D(vobj(this,16)) vobj(this,16)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),16)),1:"")
 .	I ($P(vobj(this,16),$C(124),1)'=$ZCONVERT($P(vobj(this,16),$C(124),1),"U")) D vRCvalidateDDerr("ACCKEYS",$$^MSG(1476))
 .	I ($L($P(vobj(this,16),$C(124),1))>100) D vRCvalidateDDerr("ACCKEYS",$$^MSG(1076,100))
 .	Q 
 I ($D(vobj(this,22))#2) D
 .	 S:'$D(vobj(this,22)) vobj(this,22)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),22)),1:"")
 .	I '(($P(vobj(this,22),$C(124),10)=1)!($P(vobj(this,22),$C(124),10)=0)) D vRCvalidateDDerr("DFLAG",$$^MSG(742,"L"))
 .	I ($L($P(vobj(this,22),$C(124),5))>255) D vRCvalidateDDerr("PREDAEN",$$^MSG(1076,255))
 .	I ($L($P(vobj(this,22),$C(124),11))>40) D vRCvalidateDDerr("PSLPACKAGE",$$^MSG(1076,40))
 .	I '(($P(vobj(this,22),$C(124),9)=1)!($P(vobj(this,22),$C(124),9)=0)) D vRCvalidateDDerr("RFLAG",$$^MSG(742,"L"))
 .	I ($P(vobj(this,22),$C(124),8)'=$ZCONVERT($P(vobj(this,22),$C(124),8),"U")) D vRCvalidateDDerr("SCREEN",$$^MSG(1476))
 .	I ($L($P(vobj(this,22),$C(124),8))>12) D vRCvalidateDDerr("SCREEN",$$^MSG(1076,12))
 .	I '(($P(vobj(this,22),$C(124),1)=1)!($P(vobj(this,22),$C(124),1)=0)) D vRCvalidateDDerr("VAL4EXT",$$^MSG(742,"L"))
 .	Q 
 I ($D(vobj(this,99))#2) D
 .	 S:'$D(vobj(this,99)) vobj(this,99)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),99)),1:"")
 .	I ($P(vobj(this,99),$C(124),3)'=$ZCONVERT($P(vobj(this,99),$C(124),3),"U")) D vRCvalidateDDerr("FPN",$$^MSG(1476))
 .	I ($L($P(vobj(this,99),$C(124),3))>4) D vRCvalidateDDerr("FPN",$$^MSG(1076,4))
 .	I ($L($P(vobj(this,99),$C(124),6))>30) D vRCvalidateDDerr("PUBLISH",$$^MSG(1076,30))
 .	I ($P(vobj(this,99),$C(124),5)'=$ZCONVERT($P(vobj(this,99),$C(124),5),"U")) D vRCvalidateDDerr("UDPOST",$$^MSG(1476))
 .	I ($L($P(vobj(this,99),$C(124),5))>20) D vRCvalidateDDerr("UDPOST",$$^MSG(1076,20))
 .	I ($P(vobj(this,99),$C(124),4)'=$ZCONVERT($P(vobj(this,99),$C(124),4),"U")) D vRCvalidateDDerr("UDPRE",$$^MSG(1476))
 .	I ($L($P(vobj(this,99),$C(124),4))>20) D vRCvalidateDDerr("UDPRE",$$^MSG(1076,20))
 .	Q 
 I ($D(vobj(this,100))#2) D
 .	 S:'$D(vobj(this,100)) vobj(this,100)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),100)),1:"")
 .	I ($L($P(vobj(this,100),$C(124),1))>100) D vRCvalidateDDerr("GLREF",$$^MSG(1076,100))
 .	I '(($P(vobj(this,100),$C(124),5)=1)!($P(vobj(this,100),$C(124),5)=0)) D vRCvalidateDDerr("LOG",$$^MSG(742,"L"))
 .	I ($P(vobj(this,100),$C(124),8)'=$ZCONVERT($P(vobj(this,100),$C(124),8),"U")) D vRCvalidateDDerr("PTRTIM",$$^MSG(1476))
 .	I ($L($P(vobj(this,100),$C(124),8))>12) D vRCvalidateDDerr("PTRTIM",$$^MSG(1076,12))
 .	I ($P(vobj(this,100),$C(124),11)'=$ZCONVERT($P(vobj(this,100),$C(124),11),"U")) D vRCvalidateDDerr("PTRTIMU",$$^MSG(1476))
 .	I ($L($P(vobj(this,100),$C(124),11))>12) D vRCvalidateDDerr("PTRTIMU",$$^MSG(1076,12))
 .	I ($P(vobj(this,100),$C(124),4)'=$ZCONVERT($P(vobj(this,100),$C(124),4),"U")) D vRCvalidateDDerr("PTRTLD",$$^MSG(1476))
 .	I ($L($P(vobj(this,100),$C(124),4))>12) D vRCvalidateDDerr("PTRTLD",$$^MSG(1076,12))
 .	I ($P(vobj(this,100),$C(124),10)'=$ZCONVERT($P(vobj(this,100),$C(124),10),"U")) D vRCvalidateDDerr("PTRTLDU",$$^MSG(1476))
 .	I ($L($P(vobj(this,100),$C(124),10))>12) D vRCvalidateDDerr("PTRTLDU",$$^MSG(1076,12))
 .	I ($P(vobj(this,100),$C(124),3)'=$ZCONVERT($P(vobj(this,100),$C(124),3),"U")) D vRCvalidateDDerr("PTRUSER",$$^MSG(1476))
 .	I ($L($P(vobj(this,100),$C(124),3))>12) D vRCvalidateDDerr("PTRUSER",$$^MSG(1076,12))
 .	I ($P(vobj(this,100),$C(124),9)'=$ZCONVERT($P(vobj(this,100),$C(124),9),"U")) D vRCvalidateDDerr("PTRUSERU",$$^MSG(1476))
 .	I ($L($P(vobj(this,100),$C(124),9))>12) D vRCvalidateDDerr("PTRUSERU",$$^MSG(1076,12))
 .	S X=$P(vobj(this,100),$C(124),2) I '(X=""),'((","_"0,1,10,11"_",")[(","_X_",")) D vRCvalidateDDerr("RECTYP",$$^MSG(1485,X))
 .	Q 
 I ($D(vobj(this,101))#2) D
 .	 S:'$D(vobj(this,101)) vobj(this,101)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),101)),1:"")
 .	I ($L($P(vobj(this,101),$C(124),1))>450) D vRCvalidateDDerr("LISTDFT",$$^MSG(1076,450))
 .	Q 
 I ($D(vobj(this,102))#2) D
 .	 S:'$D(vobj(this,102)) vobj(this,102)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),102)),1:"")
 .	I ($L($P(vobj(this,102),$C(124),1))>500) D vRCvalidateDDerr("LISTREQ",$$^MSG(1076,500))
 .	Q 
 I ($L(vobj(this,-3))>12) D vRCvalidateDDerr("%LIBS",$$^MSG(1076,12))
 S X=vobj(this,-4) I '(X="") S errmsg=$$VAL^DBSVER("U",25,1,,"X?1A.AN!(X?1""%"".AN)!(X?.A.""_"".E)") I '(errmsg="") D vRCvalidateDDerr("FID",$$^MSG(979,"DBTBL1.FID"_" "_errmsg))
 I ($D(vobj(this))#2)!'($order(vobj(this,""))="") D
 .	I ($L($P(vobj(this),$C(124),1))>40) D vRCvalidateDDerr("DES",$$^MSG(1076,40))
 .	Q 
 Q 
 ;
vRCvalidateDD1(this) ; 
  S:'$D(vobj(this,0)) vobj(this,0)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),0)),1:"")
  S:'$D(vobj(this,1)) vobj(this,1)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),1)),1:"")
  S:'$D(vobj(this,2)) vobj(this,2)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),2)),1:"")
  S:'$D(vobj(this,3)) vobj(this,3)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),3)),1:"")
  S:'$D(vobj(this,4)) vobj(this,4)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),4)),1:"")
  S:'$D(vobj(this,5)) vobj(this,5)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),5)),1:"")
  S:'$D(vobj(this,6)) vobj(this,6)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),6)),1:"")
  S:'$D(vobj(this,7)) vobj(this,7)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),7)),1:"")
  S:'$D(vobj(this,10)) vobj(this,10)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),10)),1:"")
  S:'$D(vobj(this,12)) vobj(this,12)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),12)),1:"")
  S:'$D(vobj(this,13)) vobj(this,13)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),13)),1:"")
  S:'$D(vobj(this,14)) vobj(this,14)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),14)),1:"")
  S:'$D(vobj(this,16)) vobj(this,16)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),16)),1:"")
  S:'$D(vobj(this,22)) vobj(this,22)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),22)),1:"")
  S:'$D(vobj(this,99)) vobj(this,99)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),99)),1:"")
  S:'$D(vobj(this,100)) vobj(this,100)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),100)),1:"")
  S:'$D(vobj(this,101)) vobj(this,101)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),101)),1:"")
  S:'$D(vobj(this,102)) vobj(this,102)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),102)),1:"")
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($D(vobj(this,0))#2) D
 .	I ($D(vobj(this,-100,0,"GLOBAL"))&($P($E($G(vobj(this,-100,0,"GLOBAL")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),1))) S X=$P(vobj(this,0),$C(124),1) I '(X="") S errmsg=$$VAL^DBSVER("T",31,0,,"((X?1A.AN)!(X?1""%"".AN)!(X?1""[""1E.E1""]""1E.E))") I '(errmsg="") D vRCvalidateDDerr("GLOBAL",$$^MSG(979,"DBTBL1.GLOBAL"_" "_errmsg))
 .	Q 
 I ($D(vobj(this,1))#2) D
 .	I ($D(vobj(this,-100,1,"AKEY1"))&($P($E($G(vobj(this,-100,1,"AKEY1")),5,9999),$C(124))'=$P(vobj(this,1),$C(124),1))) I ($L($P(vobj(this,1),$C(124),1))>12) D vRCvalidateDDerr("AKEY1",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,2))#2) D
 .	I ($D(vobj(this,-100,2,"AKEY2"))&($P($E($G(vobj(this,-100,2,"AKEY2")),5,9999),$C(124))'=$P(vobj(this,2),$C(124),1))) I ($L($P(vobj(this,2),$C(124),1))>12) D vRCvalidateDDerr("AKEY2",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,3))#2) D
 .	I ($D(vobj(this,-100,3,"AKEY3"))&($P($E($G(vobj(this,-100,3,"AKEY3")),5,9999),$C(124))'=$P(vobj(this,3),$C(124),1))) I ($L($P(vobj(this,3),$C(124),1))>12) D vRCvalidateDDerr("AKEY3",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,4))#2) D
 .	I ($D(vobj(this,-100,4,"AKEY4"))&($P($E($G(vobj(this,-100,4,"AKEY4")),5,9999),$C(124))'=$P(vobj(this,4),$C(124),1))) I ($L($P(vobj(this,4),$C(124),1))>12) D vRCvalidateDDerr("AKEY4",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,5))#2) D
 .	I ($D(vobj(this,-100,5,"AKEY5"))&($P($E($G(vobj(this,-100,5,"AKEY5")),5,9999),$C(124))'=$P(vobj(this,5),$C(124),1))) I ($L($P(vobj(this,5),$C(124),1))>12) D vRCvalidateDDerr("AKEY5",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,6))#2) D
 .	I ($D(vobj(this,-100,6,"AKEY6"))&($P($E($G(vobj(this,-100,6,"AKEY6")),5,9999),$C(124))'=$P(vobj(this,6),$C(124),1))) I ($L($P(vobj(this,6),$C(124),1))>12) D vRCvalidateDDerr("AKEY6",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,7))#2) D
 .	I ($D(vobj(this,-100,7,"AKEY7"))&($P($E($G(vobj(this,-100,7,"AKEY7")),5,9999),$C(124))'=$P(vobj(this,7),$C(124),1))) I ($L($P(vobj(this,7),$C(124),1))>12) D vRCvalidateDDerr("AKEY7",$$^MSG(1076,12))
 .	Q 
 I ($D(vobj(this,10))#2) D
 .	I ($D(vobj(this,-100,10,"DBASE"))&($P($E($G(vobj(this,-100,10,"DBASE")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),15))) S X=$P(vobj(this,10),$C(124),15) I '(X=""),'((","_"GTM,ORACLE"_",")[(","_X_",")) D vRCvalidateDDerr("DBASE",$$^MSG(1485,X))
 .	I ($D(vobj(this,-100,10,"DEL"))&($P($E($G(vobj(this,-100,10,"DEL")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),1))) S X=$P(vobj(this,10),$C(124),1) I '(X=""),'($D(^DBCTL("SYS","DELIM",X))#2) D vRCvalidateDDerr("DEL",$$^MSG(1485,X))
 .	I ($D(vobj(this,-100,10,"DFTDES"))&($P($E($G(vobj(this,-100,10,"DFTDES")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),6))) I ($L($P(vobj(this,10),$C(124),6))>200) D vRCvalidateDDerr("DFTDES",$$^MSG(1076,200))
 .	I ($D(vobj(this,-100,10,"DFTDES1"))&($P($E($G(vobj(this,-100,10,"DFTDES1")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),9))) I ($L($P(vobj(this,10),$C(124),9))>200) D vRCvalidateDDerr("DFTDES1",$$^MSG(1076,200))
 .	I ($D(vobj(this,-100,10,"DFTHDR"))&($P($E($G(vobj(this,-100,10,"DFTHDR")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),8))) I ($L($P(vobj(this,10),$C(124),8))>78) D vRCvalidateDDerr("DFTHDR",$$^MSG(1076,78))
 .	I ($D(vobj(this,-100,10,"DFTORD"))&($P($E($G(vobj(this,-100,10,"DFTORD")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),7))) I '(($P(vobj(this,10),$C(124),7)=1)!($P(vobj(this,10),$C(124),7)=0)) D vRCvalidateDDerr("DFTORD",$$^MSG(742,"L"))
 .	I ($D(vobj(this,-100,10,"EXIST"))&($P($E($G(vobj(this,-100,10,"EXIST")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),13))),'($P(vobj(this,10),$C(124),13)=""),'(+$P(vobj(this,10),$C(124),13)=$P(vobj(this,10),$C(124),13))  S vobj(this,-100,10)="" S $P(vobj(this,10),$C(124),13)=$$vRCtrimNumber($P(vobj(this,10),$C(124),13))
 .	I ($D(vobj(this,-100,10,"EXIST"))&($P($E($G(vobj(this,-100,10,"EXIST")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),13))) S X=$P(vobj(this,10),$C(124),13) I '(X=""),(X'?1.6N),(X'?1"-"1.5N) D vRCvalidateDDerr("EXIST",$$^MSG(742,"N"))
 .	I ($D(vobj(this,-100,10,"EXTENDLENGTH"))&($P($E($G(vobj(this,-100,10,"EXTENDLENGTH")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),14))) I '(($P(vobj(this,10),$C(124),14)=1)!($P(vobj(this,10),$C(124),14)=0)) D vRCvalidateDDerr("EXTENDLENGTH",$$^MSG(742,"L"))
 .	I ($D(vobj(this,-100,10,"FILETYP"))&($P($E($G(vobj(this,-100,10,"FILETYP")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),12))) S X=$P(vobj(this,10),$C(124),12) I '(X=""),'($D(^DBCTL("SYS","FILETYP",X))#2) D vRCvalidateDDerr("FILETYP",$$^MSG(1485,X))
 .	I ($D(vobj(this,-100,10,"LTD"))&($P($E($G(vobj(this,-100,10,"LTD")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),10))) S X=$P(vobj(this,10),$C(124),10) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("LTD",$$^MSG(742,"D"))
 .	I ($D(vobj(this,-100,10,"MPLCTDD"))&($P($E($G(vobj(this,-100,10,"MPLCTDD")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),5))) I ($L($P(vobj(this,10),$C(124),5))>25) D vRCvalidateDDerr("MPLCTDD",$$^MSG(1076,25))
 .	I ($D(vobj(this,-100,10,"NETLOC"))&($P($E($G(vobj(this,-100,10,"NETLOC")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),3))) S X=$P(vobj(this,10),$C(124),3) I '(X=""),'((","_"0,1,2"_",")[(","_X_",")) D vRCvalidateDDerr("NETLOC",$$^MSG(1485,X))
 .	I ($P(vobj(this,10),$C(124),4)'=$ZCONVERT($P(vobj(this,10),$C(124),4),"U")) D vRCvalidateDDerr("PARFID",$$^MSG(1476))
 .	I ($D(vobj(this,-100,10,"PARFID"))&($P($E($G(vobj(this,-100,10,"PARFID")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),4))) I ($L($P(vobj(this,10),$C(124),4))>25) D vRCvalidateDDerr("PARFID",$$^MSG(1076,25))
 .	I ($D(vobj(this,-100,10,"SYSSN"))&($P($E($G(vobj(this,-100,10,"SYSSN")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),2))) S X=$P(vobj(this,10),$C(124),2) I '(X=""),'($D(^SCATBL(2,X))#2) D vRCvalidateDDerr("SYSSN",$$^MSG(1485,X))
 .	I ($D(vobj(this,-100,10,"USER"))&($P($E($G(vobj(this,-100,10,"USER")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),11))) I ($L($P(vobj(this,10),$C(124),11))>40) D vRCvalidateDDerr("USER",$$^MSG(1076,40))
 .	Q 
 I ($D(vobj(this,12))#2) D
 .	I ($D(vobj(this,-100,12,"FSN"))&($P($E($G(vobj(this,-100,12,"FSN")),5,9999),$C(124))'=$P(vobj(this,12),$C(124),1))) S X=$P(vobj(this,12),$C(124),1) I '(X="") S errmsg=$$VAL^DBSVER("T",12,0,,"X?1A.AN.E!(X?1""%"".AN.E)") I '(errmsg="") D vRCvalidateDDerr("FSN",$$^MSG(979,"DBTBL1.FSN"_" "_errmsg))
 .	Q 
 I ($D(vobj(this,13))#2) D
 .	I ($P(vobj(this,13),$C(124),1)'=$ZCONVERT($P(vobj(this,13),$C(124),1),"U")) D vRCvalidateDDerr("FDOC",$$^MSG(1476))
 .	I ($D(vobj(this,-100,13,"FDOC"))&($P($E($G(vobj(this,-100,13,"FDOC")),5,9999),$C(124))'=$P(vobj(this,13),$C(124),1))) I ($L($P(vobj(this,13),$C(124),1))>30) D vRCvalidateDDerr("FDOC",$$^MSG(1076,30))
 .	Q 
 I ($D(vobj(this,14))#2) D
 .	I ($D(vobj(this,-100,14,"QID1"))&($P($E($G(vobj(this,-100,14,"QID1")),5,9999),$C(124))'=$P(vobj(this,14),$C(124),1))) I ($L($P(vobj(this,14),$C(124),1))>100) D vRCvalidateDDerr("QID1",$$^MSG(1076,100))
 .	Q 
 I ($D(vobj(this,16))#2) D
 .	I ($P(vobj(this,16),$C(124),1)'=$ZCONVERT($P(vobj(this,16),$C(124),1),"U")) D vRCvalidateDDerr("ACCKEYS",$$^MSG(1476))
 .	I ($D(vobj(this,-100,16,"ACCKEYS"))&($P($E($G(vobj(this,-100,16,"ACCKEYS")),5,9999),$C(124))'=$P(vobj(this,16),$C(124),1))) I ($L($P(vobj(this,16),$C(124),1))>100) D vRCvalidateDDerr("ACCKEYS",$$^MSG(1076,100))
 .	Q 
 I ($D(vobj(this,22))#2) D
 .	I ($D(vobj(this,-100,22,"DFLAG"))&($P($E($G(vobj(this,-100,22,"DFLAG")),5,9999),$C(124))'=$P(vobj(this,22),$C(124),10))) I '(($P(vobj(this,22),$C(124),10)=1)!($P(vobj(this,22),$C(124),10)=0)) D vRCvalidateDDerr("DFLAG",$$^MSG(742,"L"))
 .	I ($D(vobj(this,-100,22,"PREDAEN"))&($P($E($G(vobj(this,-100,22,"PREDAEN")),5,9999),$C(124))'=$P(vobj(this,22),$C(124),5))) I ($L($P(vobj(this,22),$C(124),5))>255) D vRCvalidateDDerr("PREDAEN",$$^MSG(1076,255))
 .	I ($D(vobj(this,-100,22,"PSLPACKAGE"))&($P($E($G(vobj(this,-100,22,"PSLPACKAGE")),5,9999),$C(124))'=$P(vobj(this,22),$C(124),11))) I ($L($P(vobj(this,22),$C(124),11))>40) D vRCvalidateDDerr("PSLPACKAGE",$$^MSG(1076,40))
 .	I ($D(vobj(this,-100,22,"RFLAG"))&($P($E($G(vobj(this,-100,22,"RFLAG")),5,9999),$C(124))'=$P(vobj(this,22),$C(124),9))) I '(($P(vobj(this,22),$C(124),9)=1)!($P(vobj(this,22),$C(124),9)=0)) D vRCvalidateDDerr("RFLAG",$$^MSG(742,"L"))
 .	I ($P(vobj(this,22),$C(124),8)'=$ZCONVERT($P(vobj(this,22),$C(124),8),"U")) D vRCvalidateDDerr("SCREEN",$$^MSG(1476))
 .	I ($D(vobj(this,-100,22,"SCREEN"))&($P($E($G(vobj(this,-100,22,"SCREEN")),5,9999),$C(124))'=$P(vobj(this,22),$C(124),8))) I ($L($P(vobj(this,22),$C(124),8))>12) D vRCvalidateDDerr("SCREEN",$$^MSG(1076,12))
 .	I ($D(vobj(this,-100,22,"VAL4EXT"))&($P($E($G(vobj(this,-100,22,"VAL4EXT")),5,9999),$C(124))'=$P(vobj(this,22),$C(124),1))) I '(($P(vobj(this,22),$C(124),1)=1)!($P(vobj(this,22),$C(124),1)=0)) D vRCvalidateDDerr("VAL4EXT",$$^MSG(742,"L"))
 .	Q 
 I ($D(vobj(this,99))#2) D
 .	I ($P(vobj(this,99),$C(124),3)'=$ZCONVERT($P(vobj(this,99),$C(124),3),"U")) D vRCvalidateDDerr("FPN",$$^MSG(1476))
 .	I ($D(vobj(this,-100,99,"FPN"))&($P($E($G(vobj(this,-100,99,"FPN")),5,9999),$C(124))'=$P(vobj(this,99),$C(124),3))) I ($L($P(vobj(this,99),$C(124),3))>4) D vRCvalidateDDerr("FPN",$$^MSG(1076,4))
 .	I ($D(vobj(this,-100,99,"PUBLISH"))&($P($E($G(vobj(this,-100,99,"PUBLISH")),5,9999),$C(124))'=$P(vobj(this,99),$C(124),6))) I ($L($P(vobj(this,99),$C(124),6))>30) D vRCvalidateDDerr("PUBLISH",$$^MSG(1076,30))
 .	I ($P(vobj(this,99),$C(124),5)'=$ZCONVERT($P(vobj(this,99),$C(124),5),"U")) D vRCvalidateDDerr("UDPOST",$$^MSG(1476))
 .	I ($D(vobj(this,-100,99,"UDPOST"))&($P($E($G(vobj(this,-100,99,"UDPOST")),5,9999),$C(124))'=$P(vobj(this,99),$C(124),5))) I ($L($P(vobj(this,99),$C(124),5))>20) D vRCvalidateDDerr("UDPOST",$$^MSG(1076,20))
 .	I ($P(vobj(this,99),$C(124),4)'=$ZCONVERT($P(vobj(this,99),$C(124),4),"U")) D vRCvalidateDDerr("UDPRE",$$^MSG(1476))
 .	I ($D(vobj(this,-100,99,"UDPRE"))&($P($E($G(vobj(this,-100,99,"UDPRE")),5,9999),$C(124))'=$P(vobj(this,99),$C(124),4))) I ($L($P(vobj(this,99),$C(124),4))>20) D vRCvalidateDDerr("UDPRE",$$^MSG(1076,20))
 .	Q 
 I ($D(vobj(this,100))#2) D
 .	I ($D(vobj(this,-100,100,"GLREF"))&($P($E($G(vobj(this,-100,100,"GLREF")),5,9999),$C(124))'=$P(vobj(this,100),$C(124),1))) I ($L($P(vobj(this,100),$C(124),1))>100) D vRCvalidateDDerr("GLREF",$$^MSG(1076,100))
 .	I ($D(vobj(this,-100,100,"LOG"))&($P($E($G(vobj(this,-100,100,"LOG")),5,9999),$C(124))'=$P(vobj(this,100),$C(124),5))) I '(($P(vobj(this,100),$C(124),5)=1)!($P(vobj(this,100),$C(124),5)=0)) D vRCvalidateDDerr("LOG",$$^MSG(742,"L"))
 .	I ($P(vobj(this,100),$C(124),8)'=$ZCONVERT($P(vobj(this,100),$C(124),8),"U")) D vRCvalidateDDerr("PTRTIM",$$^MSG(1476))
 .	I ($D(vobj(this,-100,100,"PTRTIM"))&($P($E($G(vobj(this,-100,100,"PTRTIM")),5,9999),$C(124))'=$P(vobj(this,100),$C(124),8))) I ($L($P(vobj(this,100),$C(124),8))>12) D vRCvalidateDDerr("PTRTIM",$$^MSG(1076,12))
 .	I ($P(vobj(this,100),$C(124),11)'=$ZCONVERT($P(vobj(this,100),$C(124),11),"U")) D vRCvalidateDDerr("PTRTIMU",$$^MSG(1476))
 .	I ($D(vobj(this,-100,100,"PTRTIMU"))&($P($E($G(vobj(this,-100,100,"PTRTIMU")),5,9999),$C(124))'=$P(vobj(this,100),$C(124),11))) I ($L($P(vobj(this,100),$C(124),11))>12) D vRCvalidateDDerr("PTRTIMU",$$^MSG(1076,12))
 .	I ($P(vobj(this,100),$C(124),4)'=$ZCONVERT($P(vobj(this,100),$C(124),4),"U")) D vRCvalidateDDerr("PTRTLD",$$^MSG(1476))
 .	I ($D(vobj(this,-100,100,"PTRTLD"))&($P($E($G(vobj(this,-100,100,"PTRTLD")),5,9999),$C(124))'=$P(vobj(this,100),$C(124),4))) I ($L($P(vobj(this,100),$C(124),4))>12) D vRCvalidateDDerr("PTRTLD",$$^MSG(1076,12))
 .	I ($P(vobj(this,100),$C(124),10)'=$ZCONVERT($P(vobj(this,100),$C(124),10),"U")) D vRCvalidateDDerr("PTRTLDU",$$^MSG(1476))
 .	I ($D(vobj(this,-100,100,"PTRTLDU"))&($P($E($G(vobj(this,-100,100,"PTRTLDU")),5,9999),$C(124))'=$P(vobj(this,100),$C(124),10))) I ($L($P(vobj(this,100),$C(124),10))>12) D vRCvalidateDDerr("PTRTLDU",$$^MSG(1076,12))
 .	I ($P(vobj(this,100),$C(124),3)'=$ZCONVERT($P(vobj(this,100),$C(124),3),"U")) D vRCvalidateDDerr("PTRUSER",$$^MSG(1476))
 .	I ($D(vobj(this,-100,100,"PTRUSER"))&($P($E($G(vobj(this,-100,100,"PTRUSER")),5,9999),$C(124))'=$P(vobj(this,100),$C(124),3))) I ($L($P(vobj(this,100),$C(124),3))>12) D vRCvalidateDDerr("PTRUSER",$$^MSG(1076,12))
 .	I ($P(vobj(this,100),$C(124),9)'=$ZCONVERT($P(vobj(this,100),$C(124),9),"U")) D vRCvalidateDDerr("PTRUSERU",$$^MSG(1476))
 .	I ($D(vobj(this,-100,100,"PTRUSERU"))&($P($E($G(vobj(this,-100,100,"PTRUSERU")),5,9999),$C(124))'=$P(vobj(this,100),$C(124),9))) I ($L($P(vobj(this,100),$C(124),9))>12) D vRCvalidateDDerr("PTRUSERU",$$^MSG(1076,12))
 .	I ($D(vobj(this,-100,100,"RECTYP"))&($P($E($G(vobj(this,-100,100,"RECTYP")),5,9999),$C(124))'=$P(vobj(this,100),$C(124),2))) S X=$P(vobj(this,100),$C(124),2) I '(X=""),'((","_"0,1,10,11"_",")[(","_X_",")) D vRCvalidateDDerr("RECTYP",$$^MSG(1485,X))
 .	Q 
 I ($D(vobj(this,101))#2) D
 .	I ($D(vobj(this,-100,101,"LISTDFT"))&($P($E($G(vobj(this,-100,101,"LISTDFT")),5,9999),$C(124))'=$P(vobj(this,101),$C(124),1))) I ($L($P(vobj(this,101),$C(124),1))>450) D vRCvalidateDDerr("LISTDFT",$$^MSG(1076,450))
 .	Q 
 I ($D(vobj(this,102))#2) D
 .	I ($D(vobj(this,-100,102,"LISTREQ"))&($P($E($G(vobj(this,-100,102,"LISTREQ")),5,9999),$C(124))'=$P(vobj(this,102),$C(124),1))) I ($L($P(vobj(this,102),$C(124),1))>500) D vRCvalidateDDerr("LISTREQ",$$^MSG(1076,500))
 .	Q 
 I ($D(vobj(this,-100,"1*","%LIBS"))&($P($E($G(vobj(this,-100,"1*","%LIBS")),5,9999),$C(124))'=vobj(this,-3))) I ($L(vobj(this,-3))>12) D vRCvalidateDDerr("%LIBS",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"2*","FID"))&($P($E($G(vobj(this,-100,"2*","FID")),5,9999),$C(124))'=vobj(this,-4))) S X=vobj(this,-4) I '(X="") S errmsg=$$VAL^DBSVER("U",25,1,,"X?1A.AN!(X?1""%"".AN)!(X?.A.""_"".E)") I '(errmsg="") D vRCvalidateDDerr("FID",$$^MSG(979,"DBTBL1.FID"_" "_errmsg))
 I ($D(vobj(this))#2)!'($order(vobj(this,""))="") D
 .	I ($D(vobj(this,-100,"0*","DES"))&($P($E($G(vobj(this,-100,"0*","DES")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))) I ($L($P(vobj(this),$C(124),1))>40) D vRCvalidateDDerr("DES",$$^MSG(1076,40))
 .	Q 
 Q 
 ;
vRCvalidateDDerr(column,errmsg) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("DBTBL1","MSG",979,"DBTBL1."_column_" "_errmsg)
 I ER D throwError($get(RM))
 Q 
 ;
vRCtrimNumber(str) ; 
 I ($E(str,1)="0") S str=$$vStrTrim(str,-1,"0") I (str="") S str="0"
 I (str["."),($E(str,$L(str))="0") S str=$$RTCHR^%ZFUNC(str,"0") I ($E(str,$L(str))=".") S str=$E(str,1,$L(str)-1) I (str="") S str="0"
 Q str
 ;
vRCIdx1(this,processMode) ; FSN (File Short Name)
  S:'$D(vobj(this,12)) vobj(this,12)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),12)),1:"")
 N ikey2 S ikey2=vobj(this,-3)
 N ikey3 S ikey3=$P(vobj(this,12),$C(124),1)
 I (ikey3="") S ikey3=$ZCHAR(254)
 N ikey4 S ikey4=vobj(this,-4)
 I (processMode=2) D  Q 
 .	;   #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if '$D(^XDBREF("DBTBL1.FSN",ikey2,ikey3,ikey4)) do SETERR^DBSEXECU("DBTBL1","MSG",1225,"DBTBL1.FSN")
 .	;*** End of code by-passed by compiler ***
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 if (processMode<2) set ^XDBREF("DBTBL1.FSN",ikey2,ikey3,ikey4)="" 
 ;*** End of code by-passed by compiler ***
 Q:(processMode=0) 
 I ($D(vobj(this,-100,12,"FSN"))&($P($E($G(vobj(this,-100,12,"FSN")),5,9999),$C(124))'=$P(vobj(this,12),$C(124),1))) D
 .	S ikey3=$S($D(vobj(this,-100,12,"FSN")):$P($E(vobj(this,-100,12,"FSN"),5,9999),$C(124)),1:$P(vobj(this,12),$C(124),1))
 .	I (ikey3="") S ikey3=$ZCHAR(254)
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 kill ^XDBREF("DBTBL1.FSN",ikey2,ikey3,ikey4)
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCIdx2(this,processMode) ; GLOBAL (Global Name)
  S:'$D(vobj(this,0)) vobj(this,0)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),0)),1:"")
 N ikey2 S ikey2=vobj(this,-3)
 N ikey3 S ikey3=$P(vobj(this,0),$C(124),1)
 I (ikey3="") S ikey3=$ZCHAR(254)
 N ikey4 S ikey4=vobj(this,-4)
 I (processMode=2) D  Q 
 .	;   #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if '$D(^XDBREF("DBTBL1.GLOBAL",ikey2,ikey3,ikey4)) do SETERR^DBSEXECU("DBTBL1","MSG",1225,"DBTBL1.GLOBAL")
 .	;*** End of code by-passed by compiler ***
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 if (processMode<2) set ^XDBREF("DBTBL1.GLOBAL",ikey2,ikey3,ikey4)="" 
 ;*** End of code by-passed by compiler ***
 Q:(processMode=0) 
 I ($D(vobj(this,-100,0,"GLOBAL"))&($P($E($G(vobj(this,-100,0,"GLOBAL")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),1))) D
 .	S ikey3=$S($D(vobj(this,-100,0,"GLOBAL")):$P($E(vobj(this,-100,0,"GLOBAL"),5,9999),$C(124)),1:$P(vobj(this,0),$C(124),1))
 .	I (ikey3="") S ikey3=$ZCHAR(254)
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 kill ^XDBREF("DBTBL1.GLOBAL",ikey2,ikey3,ikey4)
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCIdx3(this,processMode) ; PARFID (Inheritance Filename)
  S:'$D(vobj(this,10)) vobj(this,10)=$S(vobj(this,-2):$G(^DBTBL(vobj(this,-3),1,vobj(this,-4),10)),1:"")
 N ikey1 S ikey1=vobj(this,-3)
 N ikey3 S ikey3=$P(vobj(this,10),$C(124),4)
 I (ikey3="") S ikey3=$ZCHAR(254)
 N ikey4 S ikey4=vobj(this,-4)
 I (processMode=2) D  Q 
 .	;   #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if '$D(^DBINDX(ikey1,"PARFID",ikey3,ikey4)) do SETERR^DBSEXECU("DBTBL1","MSG",1225,"DBTBL1.PARFID")
 .	;*** End of code by-passed by compiler ***
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 if (processMode<2) set ^DBINDX(ikey1,"PARFID",ikey3,ikey4)="" 
 ;*** End of code by-passed by compiler ***
 Q:(processMode=0) 
 I ($D(vobj(this,-100,10,"PARFID"))&($P($E($G(vobj(this,-100,10,"PARFID")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),4))) D
 .	S ikey3=$S($D(vobj(this,-100,10,"PARFID")):$P($E(vobj(this,-100,10,"PARFID"),5,9999),$C(124)),1:$P(vobj(this,10),$C(124),4))
 .	I (ikey3="") S ikey3=$ZCHAR(254)
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 kill ^DBINDX(ikey1,"PARFID",ikey3,ikey4)
 ;*** End of code by-passed by compiler ***
 Q 
 ;
rebuildIndexesAllRecs(indexList) ; 
 N audit
 I (indexList="") S indexList="*"
 N ds,vos1,vos2,vos3,vos4 S ds=$$vOpen1()
 F  Q:'$$vFetch1()  D
 . N dbtbl1 S dbtbl1=$$vRCgetRecord1^RecordDBTBL1($P(ds,$C(9),1),$P(ds,$C(9),2),1)
 .	I ((","_indexList_",")[",*,") D updateIndexes(dbtbl1,0,.audit) K vobj(+$G(dbtbl1)) Q 
 .	I ((","_indexList_",")[",FSN,") D vRCIdx1(dbtbl1,0)
 .	I ((","_indexList_",")[",GLOBAL,") D vRCIdx2(dbtbl1,0)
 .	I ((","_indexList_",")[",PARFID,") D vRCIdx3(dbtbl1,0)
 .	K vobj(+$G(dbtbl1)) Q 
 Q 
 ;
rebuildIndexes(this,indexList) ; 
 N audit
 I ((","_indexList_",")[",*,") D updateIndexes(this,0,.audit) Q 
 I ((","_indexList_",")[",FSN,") D vRCIdx1(this,0)
 I ((","_indexList_",")[",GLOBAL,") D vRCIdx2(this,0)
 I ((","_indexList_",")[",PARFID,") D vRCIdx3(this,0)
 Q 
 ;
updateIndexes(this,processMode,audit) ; 
 I (processMode=1) D
 .	I ($D(vobj(this,-100,12,"FSN"))&($P($E($G(vobj(this,-100,12,"FSN")),5,9999),$C(124))'=$P(vobj(this,12),$C(124),1))) D vRCIdx1(this,1)
 .	I ($D(vobj(this,-100,0,"GLOBAL"))&($P($E($G(vobj(this,-100,0,"GLOBAL")),5,9999),$C(124))'=$P(vobj(this,0),$C(124),1))) D vRCIdx2(this,1)
 .	I ($D(vobj(this,-100,10,"PARFID"))&($P($E($G(vobj(this,-100,10,"PARFID")),5,9999),$C(124))'=$P(vobj(this,10),$C(124),4))) D vRCIdx3(this,1)
 .	Q 
 E  D
 .	D vRCIdx1(this,processMode)
 .	D vRCIdx2(this,processMode)
 .	D vRCIdx3(this,processMode)
 .	Q 
 Q 
 ;
vRCkeyChanged(this,vRCparams,vRCaudit) ; 
 N vTp
 N newkeys N oldkeys N vRCauditIns
 N oldparams S oldparams=vRCparams
 N newKey1 S newKey1=vobj(this,-3)
 N oldKey1 S oldKey1=$S($D(vobj(this,-100,"1*","%LIBS")):$P($E(vobj(this,-100,"1*","%LIBS"),5,9999),$C(124)),1:vobj(this,-3))
 N newKey2 S newKey2=vobj(this,-4)
 N oldKey2 S oldKey2=$S($D(vobj(this,-100,"2*","FID")):$P($E(vobj(this,-100,"2*","FID"),5,9999),$C(124)),1:vobj(this,-4))
  N V1,V2 S V1=vobj(this,-3),V2=vobj(this,-4) I ($D(^DBTBL(V1,1,V2))) D throwError($$^MSG(2327))
 S newkeys=newKey1_","_newKey2
 S oldkeys=oldKey1_","_oldKey2
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
 S vRCparams=$$setPar^UCUTILN(vRCparams,"NOINDEX")
 D vRCforceLoad(this)
 I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 I (("/"_vRCparams_"/")["/TRIGBEF/") D vRCbeforeUpdTrigs(this,vRCparams,.vRCaudit)
 I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,1)
 D vRCmiscValidations(this,vRCparams,1)
 D vRCupdateDB(this,1,vRCparams,.vRCaudit,.vRCauditIns)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
 N newrec S newrec=$$vReCp1(this)
 S vobj(newrec,-2)=0
 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1(newrec,$$initPar^UCUTILN($$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/"))) K vobj(newrec,-100) S vobj(newrec,-2)=1 TC:vTp  
 D
 .	N %O S %O=1
 .	N ER S ER=0
 .	N RM S RM=""
 .	;   #ACCEPT Date=10/24/2008; Pgm=RussellDS; CR=30801; Group=ACCESS
 .	D CASUPD^DBSEXECU("DBTBL1",oldkeys,newkeys)
 .	I ER D throwError($get(RM))
 .	Q 
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
 S vRCparams=$$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
 D vRCdelete(this,vRCparams,.vRCaudit,1)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
 S vRCparams=oldparams
 I (("/"_vRCparams_"/")["/TRIGAFT/") D vRCafterUpdTrigs(this,vRCparams)
 K vobj(+$G(newrec)) Q 
 ;
vRCcascadeDelete(this,vRCparams) ; 
  N V1,V2 S V1=vobj(this,-3),V2=vobj(this,-4) D vDbDe3()
  N V3,V4 S V3=vobj(this,-3),V4=vobj(this,-4) D vDbDe4()
  N V5,V6 S V5=vobj(this,-3),V6=vobj(this,-4) D vDbDe5()
  N V7,V8 S V7=vobj(this,-3),V8=vobj(this,-4) D vDbDe6()
  N V9,V10 S V9=vobj(this,-3),V10=vobj(this,-4) D vDbDe7()
  N V11,V12 S V11=vobj(this,-3),V12=vobj(this,-4) D vDbDe8()
 Q 
 ;
throwError(MSG) ; 
 S $ZE="0,"_$ZPOS_","_"%PSL-E-DBFILER,"_$translate(MSG,",","~"),$EC=",U1001,"
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrRep(object,p1,p2,p3,p4,qt) ; String.replace
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I p3<0 Q object
 I $L(p1)=1,$L(p2)<2,'p3,'p4,(qt="") Q $translate(object,p1,p2)
 ;
 N y S y=0
 F  S y=$$vStrFnd(object,p1,y,p4,qt) Q:y=0  D
 .	S object=$E(object,1,y-$L(p1)-1)_p2_$E(object,y,1048575)
 .	S y=y+$L(p2)-$L(p1)
 .	I p3 S p3=p3-1 I p3=0 S y=$L(object)+1
 .	Q 
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vDbUpd1() ; UPDATE DBTBL1 SET GLREF=:GBLREF WHERE %LIBS='SYSDEV' AND FID=:FID
 N vpc
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec S vRec=$$vRCgetRecord1^RecordDBTBL1("SYSDEV",FID,0)
  S vobj(vRec,100)=$G(^DBTBL(vobj(vRec,-3),1,vobj(vRec,-4),100))
 S vpc=$G(vobj(vRec,-2))=0 K:vpc vobj(+$G(vRec)) Q:vpc 
  S:'$D(vobj(vRec,-100,100,"GLREF")) vobj(vRec,-100,100,"GLREF")="T001"_$P(vobj(vRec,100),$C(124),1),vobj(vRec,-100,100)="" S $P(vobj(vRec,100),$C(124),1)=GBLREF
 ;     #ACCEPT Date=07/09/2008; Pgm=RussellDS; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 D vSave^RecordDBTBL1(vRec,"",0)
 ;*** End of code by-passed by compiler ***
 K vobj(+$G(vRec)) Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vDbDe1() ; DELETE FROM DBTBL1D WHERE %LIBS='SYSDEV' AND FID=:FID AND DI=:KEYNAME
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 TS (vobj):transactionid="CS"
 N vRec S vRec=$$vRCgetRecord1^RecordDBTBL1D("SYSDEV",FID,KEYNAME,0)
 I $G(vobj(vRec,-2))=1 S vobj(vRec,-2)=3 D
 .	;     #ACCEPT Date=07/09/2008; Pgm=RussellDS; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	D vSave^RecordDBTBL1D(vRec,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/",0)
 .	;*** End of code by-passed by compiler ***
 .	Q 
  TC:$TL 
 K vobj(+$G(vRec)) Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vDbDe2() ; DELETE FROM DBTBL1D WHERE %LIBS='SYSDEV' AND FID=:FID
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 TS (vobj):transactionid="CS"
 N vDs,vos1,vos2,vos3,vos4 S vDs=$$vOpen2()
 F  Q:'$$vFetch2()  D
 . N vRec S vRec=$$vRCgetRecord1^RecordDBTBL1D($P(vDs,$C(9),1),$P(vDs,$C(9),2),$P(vDs,$C(9),3),1)
 .	S vobj(vRec,-2)=3
 .	;     #ACCEPT Date=07/09/2008; Pgm=RussellDS; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	D vSave^RecordDBTBL1D(vRec,"/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/",0)
 .	;*** End of code by-passed by compiler ***
 .	K vobj(+$G(vRec)) Q 
  TC:$TL 
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrTrim(object,p1,p2) ; String.trim
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 I p1'<0 S object=$$RTCHR^%ZFUNC(object,p2)
 I p1'>0 F  Q:$E(object,1)'=p2  S object=$E(object,2,1048575)
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vDbDe3() ; DELETE FROM DBTBL1D WHERE %LIBS=:V1 AND FID=:V2
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 TS (vobj):transactionid="CS"
 N vDs,vos1,vos2,vos3,vos4,vos5 S vDs=$$vOpen3()
 F  Q:'$$vFetch3()  D
 . N vRec S vRec=$$vRCgetRecord1^RecordDBTBL1D($P(vDs,$C(9),1),$P(vDs,$C(9),2),$P(vDs,$C(9),3),1)
 .	S vobj(vRec,-2)=3
 .	;     #ACCEPT Date=07/09/2008; Pgm=RussellDS; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	D vSave^RecordDBTBL1D(vRec,$$initPar^UCUTILN(vRCparams),0)
 .	;*** End of code by-passed by compiler ***
 .	K vobj(+$G(vRec)) Q 
  TC:$TL 
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vDbDe4() ; DELETE FROM DBTBL1F WHERE %LIBS=:V3 AND FID=:V4
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 TS (vobj):transactionid="CS"
 N vDs,vos1,vos2,vos3,vos4,vos5 S vDs=$$vOpen4()
 F  Q:'$$vFetch4()  D
 . N vRec S vRec=$$vRCgetRecord1^RecordDBTBL1F($P(vDs,$C(9),1),$P(vDs,$C(9),2),$P(vDs,$C(9),3),1)
 .	S vobj(vRec,-2)=3
 .	;     #ACCEPT Date=07/09/2008; Pgm=RussellDS; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	D vSave^RecordDBTBL1F(vRec,$$initPar^UCUTILN(vRCparams),0)
 .	;*** End of code by-passed by compiler ***
 .	K vobj(+$G(vRec)) Q 
  TC:$TL 
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vDbDe5() ; DELETE FROM DBTBL1F WHERE %LIBS=:V5 AND TBLREF=:V6
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 TS (vobj):transactionid="CS"
 N vDs,vos1,vos2,vos3,vos4,vos5,vos6 S vDs=$$vOpen5()
 F  Q:'$$vFetch5()  D
 . N vRec S vRec=$$vRCgetRecord1^RecordDBTBL1F($P(vDs,$C(9),1),$P(vDs,$C(9),2),$P(vDs,$C(9),3),1)
 .	S vobj(vRec,-2)=3
 .	;     #ACCEPT Date=07/09/2008; Pgm=RussellDS; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	D vSave^RecordDBTBL1F(vRec,$$initPar^UCUTILN(vRCparams),0)
 .	;*** End of code by-passed by compiler ***
 .	K vobj(+$G(vRec)) Q 
  TC:$TL 
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vDbDe6() ; DELETE FROM DBTBL7 WHERE %LIBS=:V7 AND TABLE=:V8
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 TS (vobj):transactionid="CS"
 N vDs,vos1,vos2,vos3,vos4,vos5 S vDs=$$vOpen6()
 F  Q:'$$vFetch6()  D
 . N vRec S vRec=$$vRCgetRecord1^RecordDBTBL7($P(vDs,$C(9),1),$P(vDs,$C(9),2),$P(vDs,$C(9),3),1)
 .	S vobj(vRec,-2)=3
 .	;     #ACCEPT Date=07/09/2008; Pgm=RussellDS; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	D vSave^RecordDBTBL7(vRec,$$initPar^UCUTILN(vRCparams),0)
 .	;*** End of code by-passed by compiler ***
 .	K vobj(+$G(vRec)) Q 
  TC:$TL 
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vDbDe7() ; DELETE FROM DBTBL8 WHERE %LIBS=:V9 AND FID=:V10
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 TS (vobj):transactionid="CS"
 N vDs,vos1,vos2,vos3,vos4,vos5 S vDs=$$vOpen7()
 F  Q:'$$vFetch7()  D
 . N vRec S vRec=$$vRCgetRecord1^RecordDBTBL8($P(vDs,$C(9),1),$P(vDs,$C(9),2),$P(vDs,$C(9),3),1)
 .	S vobj(vRec,-2)=3
 .	;     #ACCEPT Date=07/09/2008; Pgm=RussellDS; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	D vSave^RecordDBTBL8(vRec,$$initPar^UCUTILN(vRCparams),0)
 .	;*** End of code by-passed by compiler ***
 .	K vobj(+$G(vRec)) Q 
  TC:$TL 
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vDbDe8() ; DELETE FROM DBTBL9 WHERE %LIBS=:V11 AND PRITABLE=:V12
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N v1 N v2 N v3
 TS (vobj):transactionid="CS"
 N vRs,vos1,vos2,vos3,vos4,vos5 S vRs=$$vOpen8()
 F  Q:'$$vFetch8()  D
 . S v1=$P(vRs,$C(9),1) S v2=$P(vRs,$C(9),2) S v3=$P(vRs,$C(9),3)
 .	;     #ACCEPT CR=18163;DATE=2006-01-09;PGM=FSCW;GROUP=BYPASS
 .	;*** Start of code by-passed by compiler
 .	ZWI ^DBTBL(v1,9,v2,v3)
 .	;*** End of code by-passed by compiler ***
 .	Q 
  TC:$TL 
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrFnd(object,p1,p2,p3,qt) ; String.find
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I (p1="") Q $S(p2<1:1,1:+p2)
 I p3 S object=$ZCONVERT(object,"U") S p1=$ZCONVERT(p1,"U")
 S p2=$F(object,p1,p2)
 I '(qt=""),$L($E(object,1,p2-1),qt)#2=0 D
 .	F  S p2=$F(object,p1,p2) Q:p2=0!($L($E(object,1,p2-1),qt)#2) 
 .	Q 
 Q p2
 ;
vOpen1() ; %LIBS,FID FROM DBTBL1
 ;
 ;
 S vos1=2
 D vL1a1
 Q ""
 ;
vL1a0 S vos1=0 Q
vL1a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=""
vL1a3 S vos3=$O(^DBTBL(vos3),1) I vos3="" G vL1a0
 S vos4=""
vL1a5 S vos4=$O(^DBTBL(vos3,1,vos4),1) I vos4="" G vL1a3
 Q
 ;
vFetch1() ;
 ;
 ;
 I vos1=1 D vL1a5
 I vos1=2 S vos1=1
 ;
 I vos1=0 S ds="" Q 0
 ;
 S ds=$S(vos3=vos2:"",1:vos3)_$C(9)_$S(vos4=vos2:"",1:vos4)
 ;
 Q 1
 ;
vOpen2() ; %LIBS,FID,DI FROM DBTBL1D WHERE %LIBS='SYSDEV' AND FID=:FID
 ;
 ;
 S vos1=2
 D vL2a1
 Q ""
 ;
vL2a0 S vos1=0 Q
vL2a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=$G(FID) I vos3="" G vL2a0
 S vos4=""
vL2a4 S vos4=$O(^DBTBL("SYSDEV",1,vos3,9,vos4),1) I vos4="" G vL2a0
 Q
 ;
vFetch2() ;
 ;
 ;
 I vos1=1 D vL2a4
 I vos1=2 S vos1=1
 ;
 I vos1=0 S vDs="" Q 0
 ;
 S vDs="SYSDEV"_$C(9)_vos3_$C(9)_$S(vos4=vos2:"",1:vos4)
 ;
 Q 1
 ;
vOpen3() ; %LIBS,FID,DI FROM DBTBL1D WHERE %LIBS=:V1 AND FID=:V2
 ;
 ;
 S vos1=2
 D vL3a1
 Q ""
 ;
vL3a0 S vos1=0 Q
vL3a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=$G(V1) I vos3="" G vL3a0
 S vos4=$G(V2) I vos4="" G vL3a0
 S vos5=""
vL3a5 S vos5=$O(^DBTBL(vos3,1,vos4,9,vos5),1) I vos5="" G vL3a0
 Q
 ;
vFetch3() ;
 ;
 ;
 I vos1=1 D vL3a5
 I vos1=2 S vos1=1
 ;
 I vos1=0 S vDs="" Q 0
 ;
 S vDs=vos3_$C(9)_vos4_$C(9)_$S(vos5=vos2:"",1:vos5)
 ;
 Q 1
 ;
vOpen4() ; %LIBS,FID,FKEYS FROM DBTBL1F WHERE %LIBS=:V3 AND FID=:V4
 ;
 ;
 S vos1=2
 D vL4a1
 Q ""
 ;
vL4a0 S vos1=0 Q
vL4a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=$G(V3) I vos3="" G vL4a0
 S vos4=$G(V4) I vos4="" G vL4a0
 S vos5=""
vL4a5 S vos5=$O(^DBTBL(vos3,19,vos4,vos5),1) I vos5="" G vL4a0
 Q
 ;
vFetch4() ;
 ;
 ;
 I vos1=1 D vL4a5
 I vos1=2 S vos1=1
 ;
 I vos1=0 S vDs="" Q 0
 ;
 S vDs=vos3_$C(9)_vos4_$C(9)_$S(vos5=vos2:"",1:vos5)
 ;
 Q 1
 ;
vOpen5() ; %LIBS,FID,FKEYS FROM DBTBL1F WHERE %LIBS=:V5 AND TBLREF=:V6
 ;
 ;
 S vos1=2
 D vL5a1
 Q ""
 ;
vL5a0 S vos1=0 Q
vL5a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=$G(V5) I vos3="" G vL5a0
 S vos4=$G(V6) I vos4="",'$D(V6) G vL5a0
 S vos5=""
vL5a5 S vos5=$O(^DBINDX(vos3,"FKPTR",vos4,vos5),1) I vos5="" G vL5a0
 S vos6=""
vL5a7 S vos6=$O(^DBINDX(vos3,"FKPTR",vos4,vos5,vos6),1) I vos6="" G vL5a5
 Q
 ;
vFetch5() ;
 ;
 ;
 I vos1=1 D vL5a7
 I vos1=2 S vos1=1
 ;
 I vos1=0 S vDs="" Q 0
 ;
 S vDs=vos3_$C(9)_$S(vos5=vos2:"",1:vos5)_$C(9)_$S(vos6=vos2:"",1:vos6)
 ;
 Q 1
 ;
vOpen6() ; %LIBS,TABLE,TRGID FROM DBTBL7 WHERE %LIBS=:V7 AND TABLE=:V8
 ;
 ;
 S vos1=2
 D vL6a1
 Q ""
 ;
vL6a0 S vos1=0 Q
vL6a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=$G(V7) I vos3="" G vL6a0
 S vos4=$G(V8) I vos4="" G vL6a0
 S vos5=""
vL6a5 S vos5=$O(^DBTBL(vos3,7,vos4,vos5),1) I vos5="" G vL6a0
 Q
 ;
vFetch6() ;
 ;
 ;
 I vos1=1 D vL6a5
 I vos1=2 S vos1=1
 ;
 I vos1=0 S vDs="" Q 0
 ;
 S vDs=vos3_$C(9)_vos4_$C(9)_$S(vos5=vos2:"",1:vos5)
 ;
 Q 1
 ;
vOpen7() ; %LIBS,FID,INDEXNM FROM DBTBL8 WHERE %LIBS=:V9 AND FID=:V10
 ;
 ;
 S vos1=2
 D vL7a1
 Q ""
 ;
vL7a0 S vos1=0 Q
vL7a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=$G(V9) I vos3="" G vL7a0
 S vos4=$G(V10) I vos4="" G vL7a0
 S vos5=""
vL7a5 S vos5=$O(^DBTBL(vos3,8,vos4,vos5),1) I vos5="" G vL7a0
 Q
 ;
vFetch7() ;
 ;
 ;
 I vos1=1 D vL7a5
 I vos1=2 S vos1=1
 ;
 I vos1=0 S vDs="" Q 0
 ;
 S vDs=vos3_$C(9)_vos4_$C(9)_$S(vos5=vos2:"",1:vos5)
 ;
 Q 1
 ;
vOpen8() ; %LIBS,PRITABLE,JRNID FROM DBTBL9 WHERE %LIBS=:V11 AND PRITABLE=:V12
 ;
 ;
 S vos1=2
 D vL8a1
 Q ""
 ;
vL8a0 S vos1=0 Q
vL8a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=$G(V11) I vos3="" G vL8a0
 S vos4=$G(V12) I vos4="" G vL8a0
 S vos5=""
vL8a5 S vos5=$O(^DBTBL(vos3,9,vos4,vos5),1) I vos5="" G vL8a0
 Q
 ;
vFetch8() ;
 ;
 ;
 I vos1=1 D vL8a5
 I vos1=2 S vos1=1
 ;
 I vos1=0 S vRs="" Q 0
 ;
 S vRs=vos3_$C(9)_vos4_$C(9)_$S(vos5=vos2:"",1:vos5)
 ;
 Q 1
 ;
vReCp1(v1) ; RecordDBTBL1.copy: DBTBL1
 ;
 N vNod,vOid
 I $G(vobj(v1,-2)) D
 .	F vNod=0,1,2,3,4,5,6,7,10,12,13,14,16,22,99,100,101,102 S:'$D(vobj(v1,vNod)) vobj(v1,vNod)=$G(^DBTBL(vobj(v1,-3),1,vobj(v1,-4),vNod))
 S vOid=$$copy^UCGMR(v1)
 Q vOid
