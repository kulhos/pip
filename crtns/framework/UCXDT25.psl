	/*
	ORIG:	Frans S.C. Witte, 2005-08-03
	DESC:	This unit contains subroutines and functions that deal with
		interaction to DBTBL25 and DBTBL25D.
		It belongs to the Dictionary group of the compiler.

	---- Comments ----------------------------------------------------------
	This unit contains functions that return data from DBTBL25 and DBTBL25D.
	These functions are used among others to bootstrap the PSL compiler, and
	the usual functions and subroutines to access these tables cannot be
	invoked.

	---- Revision History --------------------------------------------------
	07/24/2008 - RussellDS - CR30801
		Modified getSrc and isProc sections to work during bootstrapping
		without access to RecordDBTBL25 and 25D classes.
	
	09/17/07 - Frans S.C. Witte - CR 27800
		* Removed level parameter from $$getSrc.
		* Removed local function $$isLabel (no longer called).
		* Added loadTokenizer()
		* Added #OPTION ResultClass ON
		* All functions work for mixed-case exact matches and
		  for all-uppercase procedure names.

	12/21/06 - Frans S.C. Witte - CRs:  25185 / 25186 / 25187
		$$isProc() and getProc() now accept a mixed case name, and will
		translate it to uppercase before accessing DBTBL25.

	10/19/06 - Frans S.C. Witte - CRs: 22719 / 20613
		Minor changes to $$cmpStamp $$copyright() in anticipation of
		future optimizations.

	03/16/06 - Frans S.C. Witte - CRs: 20280 / 18164
		Added function $$cmpStamp(), and modified $$copyright() to call
		$$cmpStamp()

	03/09/06 - Frans S.C. Witte - CRs: 19821 / 18164
		getSrc(): Copyright notice inserted only if first line has
		complete formallist.

	02/07/06 - Frans S.C. Witte - CRs 18163 / 18164
		Removed insertion of "Source type" (now handled by UCGM).

	12/02/05 - Frans S.C. Witte - CRs: 18727 / 18728
		Modified logic to force first line.
		Added function $$isProc()

	10/21/05 - Frans S.C. Witte - CRs: 17937 / 15593
		Added $$copyright()

	08/03/05 - Frans S.C. Witte - CRs: 15992 / 15993
		New unit. Contains $$getSrc()
	*/
	#PACKAGE framework.psl.upgrade
	#OPTION ResultClass ON

	// I18N=QUIT
	// *******************************************************************
	// * IMPORTANT NOTE:                                                 *
	// * According to the rules that apply to PSL compiler upgrades,     *
	// * the generated M routine associated with this procedure must be  *
	// * checked into StarTeam and released with the procedure whenever  *
	// * changes are made to this procedure.                             *
	// *                                                                 *
	// * The M routine will be loaded to the mrtns directory during      *
	// * upgrades and will then be removed from that directory as part   *
	// * of the upgrade process.  Therefore, other than during an        *
	// * upgrade an mrtns version of this routine should not exist.      *
	// *                                                                 *
	// * Keep these comments as single line to ensure they exist in the  *
	// * generated M code.                                               *
	// *******************************************************************
	quit

	// ---------------------------------------------------------------------
public String cmpStamp() //
	/* ---------------------------------------------------------------------
	Return date, time, and user at time of compilation
	*/
	quit (%CurrentDate.toString())_ " "_ (%CurrentTime.toString("24:60"))_ " - "_ %UserName

	// ---------------------------------------------------------------------
public String copyright() //
	/* ---------------------------------------------------------------------
	return FIS copyright notice
	*/
	type String line = " // Copyright(c)"_(%CurrentDate.toString("YEAR"))
	set line = line_" Fidelity National Information Services, Inc.  All Rights Reserved"

	quit line_ " - "_ $$cmpStamp()

	// ---------------------------------------------------------------------
public String getSrc( String proc,	// name of procedure
		String src())	// PSL source array		/MECH=REFARR:W
	/* ---------------------------------------------------------------------
	This function creates a src() array that contains only the PSL code of
	the procedure from DBTBL25D. This procedure does not attempt to insert
	leaders such as first line label and copyright notice.

	OUTPUTS:
	. $$ = name of target routine, which is same os the proc name

	*/
	
	/* Discuss approach with Frans.  Also, don't worry about upper case,
	   use name as supplied only.
	
		- First, attempt to get code from framework psl file
		- If that fails, use bypass code and load from global
		
	   Once we get this finalized, we will likely want to only use the
	   retrieval from .psl file.
	   
	NOTE: Until StarTeam and the TBX software are modified to distribute
	      .psl files, we will use the BYPASS code first to load from
	      DBTBL25/25D.  At issue is that RecordDBTBL25 and 25D may not
	      yet exist.
	*/
	
	type Number ln = 1
	type String ret = ""
	
	// Try direct M - remove this or move after .psl file at some point
	do {
		#ACCEPT Date=07/19/2008; Pgm=RussellDS; CR=30801; Group=BYPASS
		#BYPASS
		N i,n,rec
		S rec=$G(^DBTBL("SYSDEV",25,proc))
		Q:rec=""
		S ret=$P(rec,"|",2)
		S n=""
		F i=1:1 S n=$O(^DBTBL("SYSDEV",25,proc,n)) Q:n=""  S src(i)=^(n)
		#ENDBYPASS
	}
	
	// Try .psl file
	if ret.isNull() do {
	
		type IO pslIO = Class.new( "IO")
	
		set pslIO.directory = $$getFWDirectory
		set pslIO.fileName = proc_ ".psl"
		set pslIO.openParams = "READ"
		set pslIO.timeout = 5
	
		catch ioerror {
     
     			if 'pslIO.device.isNull() do pslIO.close()
     			
			if 'ioerror.type.isLike("%IO%") throw ioerror
     			
     			// Found it, save procedure name
     			if ioerror.type.isLike("%IOEOF%") set ret = proc
		}

		do pslIO.open()
	
		for  set src(ln) = pslIO.read(), ln = ln + 1
	}
	
	quit ret

	// ---------------------------------------------------------------------
public Boolean isProc( String UNIT)	// name of unit
	/* ---------------------------------------------------------------------
	This is a simple function that checks if the supplied unit is a framework
	procedure, which means that it exists in the framework directory.

	OUTPUTS:
	. $$ =	0 (unit is not a framework procedure)
		1 (unit is a framework procedure)
		
	NOTE:  See comments in getSrc.  For now this will check both framework
	       .psl and DBTBL25.  Modify when distribute .psl files.
	*/
	
	type Boolean isProc = false
	
	type IO pslIO = Class.new( "IO")
	
	set pslIO.directory = $$getFWDirectory
	set pslIO.fileName = UNIT_ ".psl"
	set pslIO.openParams = "READ"
	set pslIO.timeout = 5
	
	do {
		catch ioerror {
     
     			if 'pslIO.device.isNull() do pslIO.close()
		}

		do pslIO.open()
	
		set isProc = true
		
		do pslIO.close()
	}
	
	// Check DBTBL25 - use bypass for now - remove eventually
	if 'isProc do {
	
		#ACCEPT Date=07/19/2008; Pgm=RussellDS; CR=30801; Group=BYPASS
		#BYPASS
		I $D(^DBTBL("SYSDEV",25,UNIT)) S isProc=1
		#ENDBYPASS
	}
	
	quit isProc
	
	// ---------------------------------------------------------------------
private String getFWDirectory()	// Framework directory
	/* ---------------------------------------------------------------------
	This is a simple function that returns the framework directory, with a
	trailing slash.
	*/
	
	#ACCEPT Date=07/20/2008; Pgm=RussellDS; CR=30801; Group=ACCESS
	type String fwDir = $$TRNLNM^%ZFUNC("SCAU_CRTNS")
	
	if 'fwDir.endsWith("/") set fwDir = fwDir_ "/"
	
	quit fwDir_ "framework/"
	

	// ---------------------------------------------------------------------
public String loadTokenizer( String proc	// name of procedure
		, PSLTokenizer tknzr		// tokenizer that shall be loaded
		)	// load DBTBL25D into PSLTokenizer
	/* ---------------------------------------------------------------------
	This function appends the lines of the specified procedure to the
	supplied PSLTokenizer.

	OUTPUTS:
	. $$ = name of target routine as specified in DBTBL25

	NOTES:
	. The Db.select(,"DBTBL25D",) relies on the M order of SEQ. This will
		never translate to RDB without modifying both the Db.select()
		and the rs.getRow() !!
	*/
	type String ret = ""

	/* *********************************************************************
	   Discuss with Frans
	   REMOVE THIS UNTIL WE FIND OUT WHERE IT IS USED.  Reference to
	   DBTBL25 won't work during bootstraping before RecordDBTBL25/25D
	   are created.
	   
	do {
		catch xcpt:type="%PSL-E-RECNOFL" {
			if proc = proc.upperCase() quit
			set ret = $$loadTokenizer( proc.upperCase(), tknzr)
		}
	
		type RecordDBTBL25 rec = Db.getRecord("DBTBL25","%LIBS='SYSDEV',PROCID = :proc")
		set ret = rec.pgm

		type ResultSet rs = Db.select("CODE","DBTBL25D","%LIBS='SYSDEV' and PROCID = :proc")
		while rs.next() do tknzr.appendLine( rs.getRow().toString())
	} /* end do block protected by catch */
	quit ret

	// ---------------------------------------------------------------------
public String MDCFirstLine( String line, String rtn, String stamp) //
	/* ---------------------------------------------------------------------
	model first line of routine according to MUMPS Development Committee
	first line convention:
		rtn(f,p,s) ;%UserName;ISO-of-stamp;other comment
	*/
	type String fpl = line.piece(" ").piece("(",2)
	type Number d = stamp.piece(",").toNumber()
	type Number t = stamp.piece(",",2).toNumber()

	/* If less than 4 pieces, create pieces for user name and modification
	   stamp by shifting pieces 2 and beyond 2 pieces two the right.
	   */
	if line.length(";") < 4 set line.piece( ";", 2) = ";;"_ line.piece( ";", 2)

	/* Standardize the first 3 pieces
	   */
	set line.piece(";",1) = rtn_ $select( fpl.isNull():"",1:"("_ fpl)_ " "
	set line.piece(";",2) = %UserName
	set line.piece(";",3) = ({Date}d).toString("YEAR-MM-DD")_" "_({Time}t).toString("24:60:SS")
	quit line
 #OPTION ResultClass ON
public String vSIG()	quit "61201^73661^Dan Russell^9586"	// Signature - LTD^TIME^USER^SIZE
