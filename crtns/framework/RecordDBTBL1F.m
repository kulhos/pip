 ; 
 ; **** Routine compiled from DATA-QWIK Filer RecordDBTBL1F ****
 ; 
 ; 02/24/2010 18:40 - pip
 ; 
 ;
 ; Record Class code for table DBTBL1F
 ;
 ; Generated by PSLRecordBuilder on 02/24/2010 at 18:40 by
 ;
vcdmNew() ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL1F",vobj(vOid,-2)=0,vobj(vOid)=""
 S vobj(vOid,-3)=""
 S vobj(vOid,-4)=""
 S vobj(vOid,-5)=""
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0(v1,v2,v3,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL1F"
 S vobj(vOid)=$G(^DBTBL(v1,19,v2,v3))
 I vobj(vOid)="",'($D(^DBTBL(v1,19,v2,v3))#2)
 S vobj(vOid,-2)=1
 I $T K vobj(vOid) S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,DBTBL1F",$EC=",U1001,"
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 S vobj(vOid,-5)=v3
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord1(v1,v2,v3,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL1F"
 S vobj(vOid)=$G(^DBTBL(v1,19,v2,v3))
 I vobj(vOid)="",'($D(^DBTBL(v1,19,v2,v3))#2)
 S vobj(vOid,-2)='$T
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 S vobj(vOid,-5)=v3
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0Opt(v1,v2,v3,vfromDbSet,v2out) ; 
 N dbtbl1f
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S dbtbl1f=$G(^DBTBL(v1,19,v2,v3))
 I dbtbl1f="",'($D(^DBTBL(v1,19,v2,v3))#2)
 S v2out=1
 I $T S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,DBTBL1F",$EC=",U1001,"
 ;*** End of code by-passed by compiler ***
 Q dbtbl1f
 ;
vRCgetRecord1Opt(v1,v2,v3,vfromDbSet,v2out) ; 
 N dbtbl1f
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S dbtbl1f=$G(^DBTBL(v1,19,v2,v3))
 I dbtbl1f="",'($D(^DBTBL(v1,19,v2,v3))#2)
 S v2out='$T
 ;*** End of code by-passed by compiler ***
 Q dbtbl1f
 ;
vBypassSave(this) ; 
 D vSave(this,"/NOJOURNAL/NOTRIGAFT/NOTRIGBEF/NOVALDD/NOVALREQ/NOVALRI/NOVALST",0)
 Q 
 ;
vSave(this,vRCparams,vauditLogSeq) ; 
 N vRCaudit N vRCauditIns
 N %O S %O=$G(vobj(this,-2))
 I ($get(vRCparams)="") S vRCparams="/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/"
 I (%O=0) D
 .	D AUDIT^UCUTILN(this,.vRCauditIns,1,"|")
 .	D vRCsetDefaults(this)
 .	I (("/"_vRCparams_"/")["/TRIGBEF/") D vRCbeforeInsTrigs(this,vRCparams)
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=1) D
 .	D AUDIT^UCUTILN(this,.vRCaudit,1,"|")
 .	I ($D(vobj(this,-100,"1*","%LIBS"))&($P($E($G(vobj(this,-100,"1*","%LIBS")),5,9999),$C(124))'=vobj(this,-3)))!($D(vobj(this,-100,"2*","FID"))&($P($E($G(vobj(this,-100,"2*","FID")),5,9999),$C(124))'=vobj(this,-4)))!($D(vobj(this,-100,"3*","FKEYS"))&($P($E($G(vobj(this,-100,"3*","FKEYS")),5,9999),$C(124))'=vobj(this,-5))) D vRCkeyChanged(this,vRCparams,.vRCaudit) Q 
 .	I (("/"_vRCparams_"/")["/TRIGBEF/") D vRCbeforeUpdTrigs(this,vRCparams,.vRCaudit)
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForUpdate(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD1(this)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=2) D
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,2)
 .	I (("/"_vRCparams_"/")["/INDEX/") D updateIndexes(this,%O,.vRCaudit)
 .	Q 
 E  I (%O=3) D
 .	  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) Q:'($D(^DBTBL(V1,19,V2,V3))#2) 
 .	D vRCdelete(this,vRCparams,.vRCaudit,0)
 .	Q 
 Q 
 ;
vcheckAccessRights() ; 
 Q ""
 ;
vinsertAccess(userclass) ; 
 Q 1
 ;
vinsertOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vupdateAccess(userclass) ; 
 Q 1
 ;
vupdateOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vdeleteAccess(userclass) ; 
 Q 1
 ;
vdeleteOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectAccess(userclass,restrict,from) ; 
 S (restrict,from)=""
 Q 1
 ;
vselectOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectOptmOK(userclass,dbtbl1f,vkey1,vkey2,vkey3) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vgetLogging() ; 
 Q "0"
 ;
logUserclass(operation) ; 
 I (operation="INSERT") Q 0
 E  I (operation="UPDATE") Q 0
 E  I (operation="DELETE") Q 0
 E  I (operation="SELECT") Q 0
 Q 0
 ;
vlogSelect(statement,using) ; 
 Q 0
 ;
columnList() ; 
 Q $$vStrRep("%LIBS,DEL,FID,FKEYS,PKEYS,RCFRMAX,RCFRMIN,RCTOMAX,RCTOMIN,TBLREF,UPD",",",$char(9),0,0,"")
 ;
columnListBM() ; 
 Q ""
 ;
columnListCMP() ; 
 Q $$vStrRep("",",",$char(9),0,0,"")
 ;
getColumnMap(map) ; 
 ;
 S map(-5)="FKEYS:U:"
 S map(-4)="FID:U:"
 S map(-3)="%LIBS:T:"
 S map(-1)="DEL:N:3;PKEYS:T:8;RCFRMAX:N:7;RCFRMIN:N:6;RCTOMAX:N:2;RCTOMIN:N:1;TBLREF:U:5;UPD:N:4"
 Q 
 ;
vlegacy(processMode,params) ; 
 N vTp
 I (processMode=2) D
 .	N dbtbl1f S dbtbl1f=$$vRCgetRecord0^RecordDBTBL1F(%LIBS,FID,FKEYS,0)
 .	S vobj(dbtbl1f,-2)=2
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1F(dbtbl1f,$$initPar^UCUTILN(params)) K vobj(dbtbl1f,-100) S vobj(dbtbl1f,-2)=1 TC:vTp  
 .	K vobj(+$G(dbtbl1f)) Q 
 Q 
 ;
vhasLiterals() ; 
 Q 0
 ;
vRCmiscValidations(this,vRCparams,processMode) ; 
 I (("/"_vRCparams_"/")["/VALST/")  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) I '(''($D(^DBTBL(V1,19,V2,V3))#2)=''processMode) D
 .	N errmsg
 .	I (+processMode'=+0) S errmsg=$$^MSG(7932)
 .	E  S errmsg=$$^MSG(2327)
 .	D throwError(errmsg)
 .	Q 
 I (("/"_vRCparams_"/")["/VALFK/") D vRCcheckForeignKeys(this)
 I (("/"_vRCparams_"/")["/VALRI/") D vRCsetForeignKeys(this)
 Q 
 ;
vRCupdateDB(this,processMode,vRCparams,vRCaudit,vRCauditIns) ; 
 I '(("/"_vRCparams_"/")["/NOUPDATE/") D
 .	;   #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(vobj(this)) S ^DBTBL(vobj(this,-3),19,vobj(this,-4),vobj(this,-5))=vobj(this)
 .	;*** End of code by-passed by compiler ***
 .	Q 
 I (("/"_vRCparams_"/")["/INDEX/"),((processMode=0)!$D(vobj(this,-100))) D updateIndexes(this,processMode,.vRCaudit)
 Q 
 ;
vRCdelete(this,vRCparams,vRCaudit,isKeyChange) ; 
 I (("/"_vRCparams_"/")["/INDEX/") D updateIndexes(this,3,.vRCaudit)
 ;  #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
 ;*** Start of code by-passed by compiler
 ZWI ^DBTBL(vobj(this,-3),19,vobj(this,-4),vobj(this,-5))
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCsetDefaults(this) ; 
 I ($P(vobj(this),$C(124),3)="")  S $P(vobj(this),$C(124),3)=0
 I ($P(vobj(this),$C(124),6)="")  S $P(vobj(this),$C(124),6)=0
 I ($P(vobj(this),$C(124),2)="")  S $P(vobj(this),$C(124),2)=1
 I ($P(vobj(this),$C(124),1)="")  S $P(vobj(this),$C(124),1)=1
 I ($P(vobj(this),$C(124),4)="")  S $P(vobj(this),$C(124),4)=0
 Q 
 ;
vRCchkReqForInsert(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("%LIBS")
 I ($P(vobj(this),$C(124),3)="") D vRCrequiredErr("DEL")
 I (vobj(this,-4)="") D vRCrequiredErr("FID")
 I (vobj(this,-5)="") D vRCrequiredErr("FKEYS")
 I ($P(vobj(this),$C(124),5)="") D vRCrequiredErr("TBLREF")
 I ($P(vobj(this),$C(124),4)="") D vRCrequiredErr("UPD")
 Q 
 ;
vRCchkReqForUpdate(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("%LIBS")
 I (vobj(this,-4)="") D vRCrequiredErr("FID")
 I (vobj(this,-5)="") D vRCrequiredErr("FKEYS")
 I ($D(vobj(this,-100,"0*","DEL"))&($P($E($G(vobj(this,-100,"0*","DEL")),5,9999),$C(124))'=$P(vobj(this),$C(124),3))),($P(vobj(this),$C(124),3)="") D vRCrequiredErr("DEL")
 I ($D(vobj(this,-100,"0*","TBLREF"))&($P($E($G(vobj(this,-100,"0*","TBLREF")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))),($P(vobj(this),$C(124),5)="") D vRCrequiredErr("TBLREF")
 I ($D(vobj(this,-100,"0*","UPD"))&($P($E($G(vobj(this,-100,"0*","UPD")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))),($P(vobj(this),$C(124),4)="") D vRCrequiredErr("UPD")
 Q 
 ;
vRCrequiredErr(column) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("DBTBL1F","MSG",1767,"DBTBL1F."_column)
 I ER D throwError($get(RM))
 Q 
 ;
vRCsetForeignKeys(this) ; 
 I '(vobj(this,-4)="") S vfkey("^DBTBL("_""""_vobj(this,-3)_""""_","_1_","_""""_vobj(this,-4)_""""_")")="DBTBL1F(%LIBS,FID) -> DBTBL1"
 I '($P(vobj(this),$C(124),5)="") S vfkey("^DBTBL("_""""_vobj(this,-3)_""""_","_1_","_""""_$P(vobj(this),$C(124),5)_""""_")")="DBTBL1F(%LIBS,TBLREF) -> DBTBL1"
 Q 
 ;
vRCcheckForeignKeys(this) ; 
  N V1,V2 S V1=vobj(this,-3),V2=vobj(this,-4) I '($D(^DBTBL(V1,1,V2))) D throwError($$^MSG(8563,"DBTBL1F(%LIBS,FID) -> DBTBL1"))
  N V3,V4 S V3=vobj(this,-3),V4=$P(vobj(this),$C(124),5) I '($D(^DBTBL(V3,1,V4))) D throwError($$^MSG(8563,"DBTBL1F(%LIBS,TBLREF) -> DBTBL1"))
 Q 
 ;
vRCTrig1(this,dbtbl1f,vpar) ; Trigger BEFORE_INSERT - Calculate PKEYS - BI
 ;
 ; Insert referenced table access keys
 ;
 N dbtbl1,vop1,vop2,vop3 S vop1="SYSDEV",vop2=$P(vobj(dbtbl1f),$C(124),5),dbtbl1=$$vRCgetRecord1Opt^RecordDBTBL1("SYSDEV",vop2,0,"")
  S vop3=$G(^DBTBL(vop1,1,vop2,16))
 ;
  S $P(vobj(dbtbl1f),$C(124),8)=$P(vop3,$C(124),1)
 ;
 Q 
 ;
vRCTrig2(this,dbtbl1f,vpar) ; Trigger BEFORE_UPDATE - Calculate PKEYS field value - BU
 ;
 ; Insert referenced table access keys
 ;
 N dbtbl1,vop1,vop2,vop3 S vop1="SYSDEV",vop2=$P(vobj(dbtbl1f),$C(124),5),dbtbl1=$$vRCgetRecord1Opt^RecordDBTBL1("SYSDEV",vop2,0,"")
  S vop3=$G(^DBTBL(vop1,1,vop2,16))
 ;
  S:'$D(vobj(dbtbl1f,-100,"0*","PKEYS")) vobj(dbtbl1f,-100,"0*","PKEYS")="T008"_$P(vobj(dbtbl1f),$C(124),8),vobj(dbtbl1f,-100,"0*")="" S $P(vobj(dbtbl1f),$C(124),8)=$P(vop3,$C(124),1)
 ;
 Q 
 ;
vRCbeforeInsTrigs(this,vRCparams) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 N FKEYS S FKEYS=vobj(this,-5)
 D vRCTrig1(this,this,vRCparams) I ER D throwError($get(RM))
 Q 
 ;
vRCbeforeUpdTrigs(this,vRCparams,vRCaudit) ; 
 N ER S ER=0
 N vRCfire
 N RM S RM=""
 N %LIBS S %LIBS=vobj(this,-3)
 N FID S FID=vobj(this,-4)
 N FKEYS S FKEYS=vobj(this,-5)
 Q:'$D(vobj(this,-100)) 
 S vRCfire=0
 I ($D(vobj(this,-100,"0*","TBLREF"))&($P($E($G(vobj(this,-100,"0*","TBLREF")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))) S vRCfire=1
 I vRCfire D vRCTrig2(this,this,vRCparams) I ER D throwError($get(RM))
 D AUDIT^UCUTILN(this,.vRCaudit,10,"|")
 Q 
 ;
vRCvalidateDD(this,processMode) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($L(vobj(this,-3))>12) D vRCvalidateDDerr("%LIBS",$$^MSG(1076,12))
 I (vobj(this,-4)'=$ZCONVERT(vobj(this,-4),"U")) D vRCvalidateDDerr("FID",$$^MSG(1476))
 I ($L(vobj(this,-4))>25) D vRCvalidateDDerr("FID",$$^MSG(1076,25))
 I (vobj(this,-5)'=$ZCONVERT(vobj(this,-5),"U")) D vRCvalidateDDerr("FKEYS",$$^MSG(1476))
 I ($L(vobj(this,-5))>60) D vRCvalidateDDerr("FKEYS",$$^MSG(1076,60))
 S X=$P(vobj(this),$C(124),3) I '(X=""),'$$vCaEx1() D vRCvalidateDDerr("DEL",$$^MSG(1485,X))
 I ($L($P(vobj(this),$C(124),8))>40) D vRCvalidateDDerr("PKEYS",$$^MSG(1076,40))
 I '($P(vobj(this),$C(124),7)=""),'(+$P(vobj(this),$C(124),7)=$P(vobj(this),$C(124),7))  S $P(vobj(this),$C(124),7)=$$vRCtrimNumber($P(vobj(this),$C(124),7))
 S X=$P(vobj(this),$C(124),7) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("RCFRMAX",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),6)=""),'(+$P(vobj(this),$C(124),6)=$P(vobj(this),$C(124),6))  S $P(vobj(this),$C(124),6)=$$vRCtrimNumber($P(vobj(this),$C(124),6))
 S X=$P(vobj(this),$C(124),6) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("RCFRMIN",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),2)=""),'(+$P(vobj(this),$C(124),2)=$P(vobj(this),$C(124),2))  S $P(vobj(this),$C(124),2)=$$vRCtrimNumber($P(vobj(this),$C(124),2))
 S X=$P(vobj(this),$C(124),2) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("RCTOMAX",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),1)=""),'(+$P(vobj(this),$C(124),1)=$P(vobj(this),$C(124),1))  S $P(vobj(this),$C(124),1)=$$vRCtrimNumber($P(vobj(this),$C(124),1))
 S X=$P(vobj(this),$C(124),1) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("RCTOMIN",$$^MSG(742,"N"))
 S X=$P(vobj(this),$C(124),5) I '(X="") S errmsg=$$VAL^DBSVER("U",25,1,,"X?1A.AN!(X?1""%"".AN)!(X?.A.""_"".E)") I '(errmsg="") D vRCvalidateDDerr("TBLREF",$$^MSG(979,"DBTBL1F.TBLREF"_" "_errmsg))
 S X=$P(vobj(this),$C(124),4) I '(X=""),'$$vCaEx2() D vRCvalidateDDerr("UPD",$$^MSG(1485,X))
 Q 
 ;
vRCvalidateDD1(this) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($D(vobj(this,-100,"1*","%LIBS"))&($P($E($G(vobj(this,-100,"1*","%LIBS")),5,9999),$C(124))'=vobj(this,-3))) I ($L(vobj(this,-3))>12) D vRCvalidateDDerr("%LIBS",$$^MSG(1076,12))
 I (vobj(this,-4)'=$ZCONVERT(vobj(this,-4),"U")) D vRCvalidateDDerr("FID",$$^MSG(1476))
 I ($D(vobj(this,-100,"2*","FID"))&($P($E($G(vobj(this,-100,"2*","FID")),5,9999),$C(124))'=vobj(this,-4))) I ($L(vobj(this,-4))>25) D vRCvalidateDDerr("FID",$$^MSG(1076,25))
 I (vobj(this,-5)'=$ZCONVERT(vobj(this,-5),"U")) D vRCvalidateDDerr("FKEYS",$$^MSG(1476))
 I ($D(vobj(this,-100,"3*","FKEYS"))&($P($E($G(vobj(this,-100,"3*","FKEYS")),5,9999),$C(124))'=vobj(this,-5))) I ($L(vobj(this,-5))>60) D vRCvalidateDDerr("FKEYS",$$^MSG(1076,60))
 I ($D(vobj(this,-100,"0*","DEL"))&($P($E($G(vobj(this,-100,"0*","DEL")),5,9999),$C(124))'=$P(vobj(this),$C(124),3))) S X=$P(vobj(this),$C(124),3) I '(X=""),'$$vCaEx3() D vRCvalidateDDerr("DEL",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","PKEYS"))&($P($E($G(vobj(this,-100,"0*","PKEYS")),5,9999),$C(124))'=$P(vobj(this),$C(124),8))) I ($L($P(vobj(this),$C(124),8))>40) D vRCvalidateDDerr("PKEYS",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","RCFRMAX"))&($P($E($G(vobj(this,-100,"0*","RCFRMAX")),5,9999),$C(124))'=$P(vobj(this),$C(124),7))),'($P(vobj(this),$C(124),7)=""),'(+$P(vobj(this),$C(124),7)=$P(vobj(this),$C(124),7))  S $P(vobj(this),$C(124),7)=$$vRCtrimNumber($P(vobj(this),$C(124),7))
 I ($D(vobj(this,-100,"0*","RCFRMAX"))&($P($E($G(vobj(this,-100,"0*","RCFRMAX")),5,9999),$C(124))'=$P(vobj(this),$C(124),7))) S X=$P(vobj(this),$C(124),7) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("RCFRMAX",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","RCFRMIN"))&($P($E($G(vobj(this,-100,"0*","RCFRMIN")),5,9999),$C(124))'=$P(vobj(this),$C(124),6))),'($P(vobj(this),$C(124),6)=""),'(+$P(vobj(this),$C(124),6)=$P(vobj(this),$C(124),6))  S $P(vobj(this),$C(124),6)=$$vRCtrimNumber($P(vobj(this),$C(124),6))
 I ($D(vobj(this,-100,"0*","RCFRMIN"))&($P($E($G(vobj(this,-100,"0*","RCFRMIN")),5,9999),$C(124))'=$P(vobj(this),$C(124),6))) S X=$P(vobj(this),$C(124),6) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("RCFRMIN",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","RCTOMAX"))&($P($E($G(vobj(this,-100,"0*","RCTOMAX")),5,9999),$C(124))'=$P(vobj(this),$C(124),2))),'($P(vobj(this),$C(124),2)=""),'(+$P(vobj(this),$C(124),2)=$P(vobj(this),$C(124),2))  S $P(vobj(this),$C(124),2)=$$vRCtrimNumber($P(vobj(this),$C(124),2))
 I ($D(vobj(this,-100,"0*","RCTOMAX"))&($P($E($G(vobj(this,-100,"0*","RCTOMAX")),5,9999),$C(124))'=$P(vobj(this),$C(124),2))) S X=$P(vobj(this),$C(124),2) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("RCTOMAX",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","RCTOMIN"))&($P($E($G(vobj(this,-100,"0*","RCTOMIN")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))),'($P(vobj(this),$C(124),1)=""),'(+$P(vobj(this),$C(124),1)=$P(vobj(this),$C(124),1))  S $P(vobj(this),$C(124),1)=$$vRCtrimNumber($P(vobj(this),$C(124),1))
 I ($D(vobj(this,-100,"0*","RCTOMIN"))&($P($E($G(vobj(this,-100,"0*","RCTOMIN")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))) S X=$P(vobj(this),$C(124),1) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("RCTOMIN",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","TBLREF"))&($P($E($G(vobj(this,-100,"0*","TBLREF")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))) S X=$P(vobj(this),$C(124),5) I '(X="") S errmsg=$$VAL^DBSVER("U",25,1,,"X?1A.AN!(X?1""%"".AN)!(X?.A.""_"".E)") I '(errmsg="") D vRCvalidateDDerr("TBLREF",$$^MSG(979,"DBTBL1F.TBLREF"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","UPD"))&($P($E($G(vobj(this,-100,"0*","UPD")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))) S X=$P(vobj(this),$C(124),4) I '(X=""),'$$vCaEx4() D vRCvalidateDDerr("UPD",$$^MSG(1485,X))
 Q 
 ;
vRCvalidateDDerr(column,errmsg) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("DBTBL1F","MSG",979,"DBTBL1F."_column_" "_errmsg)
 I ER D throwError($get(RM))
 Q 
 ;
vRCtrimNumber(str) ; 
 I ($E(str,1)="0") S str=$$vStrTrim(str,-1,"0") I (str="") S str="0"
 I (str["."),($E(str,$L(str))="0") S str=$$RTCHR^%ZFUNC(str,"0") I ($E(str,$L(str))=".") S str=$E(str,1,$L(str)-1) I (str="") S str="0"
 Q str
 ;
vRCIdx1(this,processMode) ; FKPTR (Foreign Key Pointer)
 N ikey1 S ikey1=vobj(this,-3)
 N ikey3 S ikey3=$P(vobj(this),$C(124),5)
 I (ikey3="") S ikey3=$ZCHAR(254)
 N ikey4 S ikey4=vobj(this,-4)
 N ikey5 S ikey5=vobj(this,-5)
 I (processMode=2) D  Q 
 .	;   #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(^DBTBL(vobj(this,-3),19,vobj(this,-4),vobj(this,-5)))#2,'$D(^DBINDX(ikey1,"FKPTR",ikey3,ikey4,ikey5)) do SETERR^DBSEXECU("DBTBL1F","MSG",1225,"DBTBL1F.FKPTR")
 .	;*** End of code by-passed by compiler ***
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 if (processMode<2) set ^DBINDX(ikey1,"FKPTR",ikey3,ikey4,ikey5)="" 
 ;*** End of code by-passed by compiler ***
 Q:(processMode=0) 
 I ($D(vobj(this,-100,"0*","TBLREF"))&($P($E($G(vobj(this,-100,"0*","TBLREF")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))) D
 .	S ikey3=$S($D(vobj(this,-100,"0*","TBLREF")):$P($E(vobj(this,-100,"0*","TBLREF"),5,9999),$C(124)),1:$P(vobj(this),$C(124),5))
 .	I (ikey3="") S ikey3=$ZCHAR(254)
 .	Q 
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 kill ^DBINDX(ikey1,"FKPTR",ikey3,ikey4,ikey5)
 ;*** End of code by-passed by compiler ***
 Q 
 ;
rebuildIndexesAllRecs(indexList) ; 
 N audit
 I (indexList="") S indexList="*"
 N ds,vos1,vos2,vos3,vos4,vos5 S ds=$$vOpen1()
 F  Q:'$$vFetch1()  D
 . N dbtbl1f S dbtbl1f=$$vRCgetRecord1^RecordDBTBL1F($P(ds,$C(9),1),$P(ds,$C(9),2),$P(ds,$C(9),3),1)
 .	I ((","_indexList_",")[",*,") D updateIndexes(dbtbl1f,0,.audit) K vobj(+$G(dbtbl1f)) Q 
 .	I ((","_indexList_",")[",FKPTR,") D vRCIdx1(dbtbl1f,0)
 .	K vobj(+$G(dbtbl1f)) Q 
 Q 
 ;
rebuildIndexes(this,indexList) ; 
 N audit
 I ((","_indexList_",")[",*,") D updateIndexes(this,0,.audit) Q 
 I ((","_indexList_",")[",FKPTR,") D vRCIdx1(this,0)
 Q 
 ;
updateIndexes(this,processMode,audit) ; 
 I (processMode=1) D
 .	I ($D(vobj(this,-100,"0*","TBLREF"))&($P($E($G(vobj(this,-100,"0*","TBLREF")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))) D vRCIdx1(this,1)
 .	Q 
 E  D
 .	D vRCIdx1(this,processMode)
 .	Q 
 Q 
 ;
vRCkeyChanged(this,vRCparams,vRCaudit) ; 
 N vTp
 N newkeys N oldkeys N vRCauditIns
 N newKey1 S newKey1=vobj(this,-3)
 N oldKey1 S oldKey1=$S($D(vobj(this,-100,"1*","%LIBS")):$P($E(vobj(this,-100,"1*","%LIBS"),5,9999),$C(124)),1:vobj(this,-3))
 N newKey2 S newKey2=vobj(this,-4)
 N oldKey2 S oldKey2=$S($D(vobj(this,-100,"2*","FID")):$P($E(vobj(this,-100,"2*","FID"),5,9999),$C(124)),1:vobj(this,-4))
 N newKey3 S newKey3=vobj(this,-5)
 N oldKey3 S oldKey3=$S($D(vobj(this,-100,"3*","FKEYS")):$P($E(vobj(this,-100,"3*","FKEYS"),5,9999),$C(124)),1:vobj(this,-5))
  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) I ($D(^DBTBL(V1,19,V2,V3))#2) D throwError($$^MSG(2327))
 S newkeys=newKey1_","_newKey2_","_newKey3
 S oldkeys=oldKey1_","_oldKey2_","_oldKey3
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
  S vobj(this,-5)=oldKey3
 S vRCparams=$$setPar^UCUTILN(vRCparams,"NOINDEX")
 I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 I (("/"_vRCparams_"/")["/TRIGBEF/") D vRCbeforeUpdTrigs(this,vRCparams,.vRCaudit)
 I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,1)
 D vRCmiscValidations(this,vRCparams,1)
 D vRCupdateDB(this,1,vRCparams,.vRCaudit,.vRCauditIns)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
  S vobj(this,-5)=newKey3
 N newrec S newrec=$$vReCp1(this)
 S vobj(newrec,-2)=0
 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL1F(newrec,$$initPar^UCUTILN($$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/"))) K vobj(newrec,-100) S vobj(newrec,-2)=1 TC:vTp  
 D
 .	N %O S %O=1
 .	N ER S ER=0
 .	N RM S RM=""
 .	;   #ACCEPT Date=10/24/2008; Pgm=RussellDS; CR=30801; Group=ACCESS
 .	D CASUPD^DBSEXECU("DBTBL1F",oldkeys,newkeys)
 .	I ER D throwError($get(RM))
 .	Q 
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
  S vobj(this,-5)=oldKey3
 S vRCparams=$$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
 D vRCdelete(this,vRCparams,.vRCaudit,1)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
  S vobj(this,-5)=newKey3
 K vobj(+$G(newrec)) Q 
 ;
throwError(MSG) ; 
 S $ZE="0,"_$ZPOS_","_"%PSL-E-DBFILER,"_$translate(MSG,",","~"),$EC=",U1001,"
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrRep(object,p1,p2,p3,p4,qt) ; String.replace
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I p3<0 Q object
 I $L(p1)=1,$L(p2)<2,'p3,'p4,(qt="") Q $translate(object,p1,p2)
 ;
 N y S y=0
 F  S y=$$vStrFnd(object,p1,y,p4,qt) Q:y=0  D
 .	S object=$E(object,1,y-$L(p1)-1)_p2_$E(object,y,1048575)
 .	S y=y+$L(p2)-$L(p1)
 .	I p3 S p3=p3-1 I p3=0 S y=$L(object)+1
 .	Q 
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx1() ; {Cache}%CACHE("STBLFKOPT").isDefined("STBLFKOPT","REST=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa2(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx2() ; {Cache}%CACHE("STBLFKOPT").isDefined("STBLFKOPT","REST=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa2(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx3() ; {Cache}%CACHE("STBLFKOPT").isDefined("STBLFKOPT","REST=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa2(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx4() ; {Cache}%CACHE("STBLFKOPT").isDefined("STBLFKOPT","REST=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa2(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vStrTrim(object,p1,p2) ; String.trim
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 I p1'<0 S object=$$RTCHR^%ZFUNC(object,p2)
 I p1'>0 F  Q:$E(object,1)'=p2  S object=$E(object,2,1048575)
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vStrFnd(object,p1,p2,p3,qt) ; String.find
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I (p1="") Q $S(p2<1:1,1:+p2)
 I p3 S object=$ZCONVERT(object,"U") S p1=$ZCONVERT(p1,"U")
 S p2=$F(object,p1,p2)
 I '(qt=""),$L($E(object,1,p2-1),qt)#2=0 D
 .	F  S p2=$F(object,p1,p2) Q:p2=0!($L($E(object,1,p2-1),qt)#2) 
 .	Q 
 Q p2
 ;
vCa2(v1,v2out) ; voXN = ({Cache}%CACHE("STBLFKOPT").getRecord(STBLFKOPT,1)
 ;
 I '$D(%CACHE("STBLFKOPT",v1)) D
 .  I $G(%CACHE("STBLFKOPT"))>100 KILL %CACHE("STBLFKOPT")
 .  S %CACHE("STBLFKOPT")=$G(%CACHE("STBLFKOPT"))+1
 .  S %CACHE("STBLFKOPT",v1)=$$vRCgetRecord1Opt^RecordSTBLFKOPT(v1,0,.v2out),%CACHE("STBLFKOPT",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("STBLFKOPT",v1,-2)
 Q %CACHE("STBLFKOPT",v1)
 ;
vOpen1() ; %LIBS,FID,FKEYS FROM DBTBL1F
 ;
 ;
 S vos1=2
 D vL1a1
 Q ""
 ;
vL1a0 S vos1=0 Q
vL1a1 S vos2=$$BYTECHAR^SQLUTL(254)
 S vos3=""
vL1a3 S vos3=$O(^DBTBL(vos3),1) I vos3="" G vL1a0
 S vos4=""
vL1a5 S vos4=$O(^DBTBL(vos3,19,vos4),1) I vos4="" G vL1a3
 S vos5=""
vL1a7 S vos5=$O(^DBTBL(vos3,19,vos4,vos5),1) I vos5="" G vL1a5
 Q
 ;
vFetch1() ;
 ;
 ;
 I vos1=1 D vL1a7
 I vos1=2 S vos1=1
 ;
 I vos1=0 S ds="" Q 0
 ;
 S ds=$S(vos3=vos2:"",1:vos3)_$C(9)_$S(vos4=vos2:"",1:vos4)_$C(9)_$S(vos5=vos2:"",1:vos5)
 ;
 Q 1
 ;
vReCp1(v1) ; RecordDBTBL1F.copy: DBTBL1F
 ;
 Q $$copy^UCGMR(this)
