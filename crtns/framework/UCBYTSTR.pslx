{ "class" : "UCBYTSTR",	"accessLevel" : 2,	"adjustor" : "",	"classType" : -1,	"constructor" : "",	"delimiter" : -1,	"destructor" : "",	"extends" : "",	"flags" : "",	"isAbstract" : false,	"isNoInstance" : true,	"package" : "framework.psl",	"propProc" : ""
, "methods" : [ 
{ "class" : "UCBYTSTR",	"method" : "ascii",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: ByteString.ascii(Number position)" }
,	{ "class" : "UCBYTSTR",	"method" : "bytLimSub",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.byteLimitSubstring ( start, maxBytes)" }
,	{ "class" : "UCBYTSTR",	"method" : "byte",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: Number.byte()" }
,	{ "class" : "UCBYTSTR",	"method" : "chrsetEnc",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Property: Runtime.charsetEncoding" }
,	{ "class" : "UCBYTSTR",	"method" : "chrsetNm",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Property: Runtime.charsetName" }
,	{ "class" : "UCBYTSTR",	"method" : "extract",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method: String.extract(Number start,Number end)" }
,	{ "class" : "UCBYTSTR",	"method" : "find",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: ByteString.find(ByteString string,Number start)" }
,	{ "class" : "UCBYTSTR",	"method" : "justify",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: ByteString.justify(Number fieldLength)" }
,	{ "class" : "UCBYTSTR",	"method" : "length",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.length(String delimiter)" }
,	{ "class" : "UCBYTSTR",	"method" : "loCase",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.lowerCase(Boolean capitalizeFirstChar)" }
,	{ "class" : "UCBYTSTR",	"method" : "mSubstr",	"resultClass" : "String",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "generate M code for String.byteLimitSubstring()" }
,	{ "class" : "UCBYTSTR",	"method" : "piece",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method: ByteString.piece(ByteString delimiter,Number start,Number end)" }
,	{ "class" : "UCBYTSTR",	"method" : "psl2m",	"resultClass" : "void",	"formalList" : "noret Number minArg;noret Number maxArg",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "maximum number of arguments /REQ/MECH=VAL" }
,	{ "class" : "UCBYTSTR",	"method" : "rtChset",	"resultClass" : "String",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 2,	"methodType" : 2,	"comment" : "Return current character set at runtime" }
,	{ "class" : "UCBYTSTR",	"method" : "toByteString",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.toByteString" }
,	{ "class" : "UCBYTSTR",	"method" : "toPSLExpr",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: ByteString.toPSLExpression()" }
,	{ "class" : "UCBYTSTR",	"method" : "translate",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: ByteString.translate(ByteString expr1,ByteString expr2)" }
,	{ "class" : "UCBYTSTR",	"method" : "upCase",	"resultClass" : "void",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.upCase  Returns an upper case string" }
,	{ "class" : "UCBYTSTR",	"method" : "vSIG",	"resultClass" : "String",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 2,	"methodType" : 2,	"comment" : "" }
  ]
}
