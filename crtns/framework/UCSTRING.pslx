{ "class" : "UCSTRING",	"accessLevel" : 2,	"adjustor" : "",	"classType" : -1,	"constructor" : "",	"delimiter" : -1,	"destructor" : "",	"extends" : "",	"flags" : "",	"isAbstract" : false,	"isNoInstance" : true,	"package" : "framework.psl",	"propProc" : ""
, "methods" : [ 
{ "class" : "UCSTRING",	"method" : "GETSUB",	"resultClass" : "",	"formalList" : "noret String tag;noret String sfd1;noret String sfd2;noret Number sfp;noret PSLExpression var;noret Boolean bSubfld",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "parameters passed as stored for DQ subfield?" }
,	{ "class" : "UCSTRING",	"method" : "PUTSUB",	"resultClass" : "",	"formalList" : "noret String ins;noret String tag;noret String sfd1;noret String sfd2;noret Number sfp;noret PSLExpression var;noret Boolean bSubfld",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "parameters passed as stored for DQ subfield?" }
,	{ "class" : "UCSTRING",	"method" : "blank",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.blank(Number fieldLength, Boolean rightJustify)" }
,	{ "class" : "UCSTRING",	"method" : "contains",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method: String.contains(String string)" }
,	{ "class" : "UCSTRING",	"method" : "extract",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method: String.extract(Number start,Number end)" }
,	{ "class" : "UCSTRING",	"method" : "find",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.find(String string,Number start,Boolean ignoreCase,String quoteChar)" }
,	{ "class" : "UCSTRING",	"method" : "follows",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method: String.follows(String string)" }
,	{ "class" : "UCSTRING",	"method" : "getSub",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.getSub(String tag,String MajorDelim,String SubDelim,Number position)" }
,	{ "class" : "UCSTRING",	"method" : "insert",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method: String.insert(String string,Number offSet,String padCharacter,Boolean displace)" }
,	{ "class" : "UCSTRING",	"method" : "isBegin",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.beginsWith(String string,Boolean ignoreCase)" }
,	{ "class" : "UCSTRING",	"method" : "isEnd",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.endsWith(String string,Boolean ignoreCase)" }
,	{ "class" : "UCSTRING",	"method" : "isInt",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.isInt  String is an Integer string (boolean)" }
,	{ "class" : "UCSTRING",	"method" : "isLike",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.isLike(String likeExpr,Boolean ignoreCase)" }
,	{ "class" : "UCSTRING",	"method" : "isLit",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.isLit - String is a literal string (boolean)" }
,	{ "class" : "UCSTRING",	"method" : "isNum",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.isNum - String is a Number string (boolean)" }
,	{ "class" : "UCSTRING",	"method" : "justify",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.justify(Number fieldLength,Number option,String padCharacter,Boolean truncate)" }
,	{ "class" : "UCSTRING",	"method" : "length",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.length(String delimiter)" }
,	{ "class" : "UCSTRING",	"method" : "loCase",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.lowerCase(Boolean capitalizeFirstChar)" }
,	{ "class" : "UCSTRING",	"method" : "piece",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method: String.piece(String delimiter,Number start,Number end,String quoteChar)" }
,	{ "class" : "UCSTRING",	"method" : "putSub",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.putSub(String insert,String tag,String majorDelim,String subDelim,Number position)" }
,	{ "class" : "UCSTRING",	"method" : "qadd",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.addQuotes(String character)" }
,	{ "class" : "UCSTRING",	"method" : "qsub",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.stripQuotes(String character)" }
,	{ "class" : "UCSTRING",	"method" : "replace",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.replace(String expr1,String expr2,Number count,Boolean ignoreCase,String quoteChar)" }
,	{ "class" : "UCSTRING",	"method" : "toDate",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.toDate(String mask)" }
,	{ "class" : "UCSTRING",	"method" : "toLit",	"resultClass" : "",	"formalList" : "noret String expr",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "Execute an expression and return a literal" }
,	{ "class" : "UCSTRING",	"method" : "toNumber",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.toNumber(String mask,Boolean stripSpace)" }
,	{ "class" : "UCSTRING",	"method" : "toRow",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.toRow(List elements,String delimiter)" }
,	{ "class" : "UCSTRING",	"method" : "toTime",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.toTime - Convert a string to Time (seconds past midnight)" }
,	{ "class" : "UCSTRING",	"method" : "trim",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.trim(Number Option, String character)" }
,	{ "class" : "UCSTRING",	"method" : "unpack",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.unpack - returns unpack data based on position" }
,	{ "class" : "UCSTRING",	"method" : "unpack2",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method String.complexUnpack - returns unpack complex data" }
,	{ "class" : "UCSTRING",	"method" : "upCase",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method: String.upCase  Returns an upper case string" }
,	{ "class" : "UCSTRING",	"method" : "vSIG",	"resultClass" : "String",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 2,	"methodType" : 2,	"comment" : "" }
,	{ "class" : "UCSTRING",	"method" : "zero",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Method String.zero(Number length,Number decimal,Boolean implied,Boolean sign)" }
  ]
}
