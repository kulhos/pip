{ "class" : "UCDB",	"accessLevel" : 2,	"adjustor" : "",	"classType" : -1,	"constructor" : "",	"delimiter" : -1,	"destructor" : "",	"extends" : "",	"flags" : "",	"isAbstract" : false,	"isNoInstance" : true,	"package" : "framework.psl",	"propProc" : ""
, "methods" : [ 
{ "class" : "UCDB",	"method" : "Cache",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method Cache.getRecord ; Returns Record<Class> object" }
,	{ "class" : "UCDB",	"method" : "CacheDef",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method Cache.isDefined" }
,	{ "class" : "UCDB",	"method" : "CacheSr",	"resultClass" : "",	"formalList" : "noret PSLTable td;noret Boolean useVobj;noret String label;noret String comment;noret PSLIdentifier cacheNm;noret Number clsNew;noret String lbGetRec",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "label to use for getRecord" }
,	{ "class" : "UCDB",	"method" : "LitInst",	"resultClass" : "",	"formalList" : "noret PSLIdentifier var;noret String table;noret String akeys;noret String deflt;noret String level",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "current DO level" }
,	{ "class" : "UCDB",	"method" : "addAuditLogCode",	"resultClass" : "",	"formalList" : "noret String operation;noret PSLBuffer buf;noret PSLTable td;noret String statement;noret String where",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "WHERE clause" }
,	{ "class" : "UCDB",	"method" : "addMSaveBypass",	"resultClass" : "",	"formalList" : "noret PSLBuffer buf;noret String tableName;noret String objRef;noret PSLExpression qual;noret String auditParam",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "Audit parameter value" }
,	{ "class" : "UCDB",	"method" : "akey2apl",	"resultClass" : "",	"formalList" : "noret PSLTable td;noret PSLIdentifier var;noret String akeys;noret Number sparse;noret String lvpm()",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "purpose mapping (*5)   /MECH=REFARR:W" }
,	{ "class" : "UCDB",	"method" : "akey2asgn",	"resultClass" : "",	"formalList" : "noret PSLTable td;noret PSLIdentifier var;noret String akeys;noret Boolean ignNull;noret String lvpm()",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "purpose mapping   /MECH=REFARR:W" }
,	{ "class" : "UCDB",	"method" : "akey2sql",	"resultClass" : "",	"formalList" : "noret String akey;noret String fkeys;noret Number knum",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "void; access key to SQL whereclause" }
,	{ "class" : "UCDB",	"method" : "delByFiler",	"resultClass" : "",	"formalList" : "noret PSLTable td;noret String where;noret String acckey;noret PSLExpression qual",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "filer qualifiers (\"normalized\")" }
,	{ "class" : "UCDB",	"method" : "delMcode",	"resultClass" : "",	"formalList" : "noret PSLTable td;noret String lvpm();noret String mpc",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "M_postcond (incl \":\", or \"\")" }
,	{ "class" : "UCDB",	"method" : "delRdb",	"resultClass" : "",	"formalList" : "noret PSLTable td;noret String where",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "where clause (*2)" }
,	{ "class" : "UCDB",	"method" : "delete",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "Db.delete(table_name,where_clause,filer_qualifier)" }
,	{ "class" : "UCDB",	"method" : "fastDel",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "void; method Db.fastDelete" }
,	{ "class" : "UCDB",	"method" : "fileQual",	"resultClass" : "",	"formalList" : "noret String method;noret PSLExpression qualarg",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "applicable qualifiers (*2)" }
,	{ "class" : "UCDB",	"method" : "get1Row",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "void; method Db.getOneRow" }
,	{ "class" : "UCDB",	"method" : "getGbl",	"resultClass" : "",	"formalList" : "noret String gblref;noret String keyvars",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "void; Return Global reference" }
,	{ "class" : "UCDB",	"method" : "getRec",	"resultClass" : "",	"formalList" : "noret Boolean bFromDbSet",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "Building DbSet.getRecord indicator" }
,	{ "class" : "UCDB",	"method" : "getRecCN",	"resultClass" : "",	"formalList" : "noret String df",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "value of ClassNew parameter" }
,	{ "class" : "UCDB",	"method" : "getRecCode",	"resultClass" : "",	"formalList" : "noret PSLTable tblDes;noret String recInst;noret PSLIdentifier lvpm();noret String mcd();noret PSLColumn clnDes()",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "PSLColumn cache /NOREQ/MECH=REFARR:RW" }
,	{ "class" : "UCDB",	"method" : "getRecPr",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 3,	"comment" : "Db.getRecord has properties" }
,	{ "class" : "UCDB",	"method" : "getRecQid1",	"resultClass" : "",	"formalList" : "noret PSLTable tblDes;noret String recInst;noret PSLIdentifier lvpm();noret String ptable;noret String vsub();noret String nodes();noret String mcode()",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "generated code /MECH=REAFARR:RW" }
,	{ "class" : "UCDB",	"method" : "getRecSr",	"resultClass" : "",	"formalList" : "noret PSLTable td;noret Boolean useOpt;noret Boolean clsNew",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "value of ClassNew parameter (0, 1)" }
,	{ "class" : "UCDB",	"method" : "getRecSrCode",	"resultClass" : "",	"formalList" : "noret PSLTable td;noret String recInst",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "record variable" }
,	{ "class" : "UCDB",	"method" : "getRecord",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method Db.getRecord; returns RecordTABLE" }
,	{ "class" : "UCDB",	"method" : "getSchCln",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "void; method Db.getSchemaColumn(String,String)" }
,	{ "class" : "UCDB",	"method" : "getSchTbl",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "void; method Db.getSchemaTable(String)" }
,	{ "class" : "UCDB",	"method" : "hasQual",	"resultClass" : "",	"formalList" : "ret PSLExpression expr;noret String val",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "qualifiers that shall occur (*2)" }
,	{ "class" : "UCDB",	"method" : "insert",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "" }
,	{ "class" : "UCDB",	"method" : "isDefDyn",	"resultClass" : "",	"formalList" : "noret String from;noret String where;noret Number count",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "" }
,	{ "class" : "UCDB",	"method" : "isDefined",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "void; method Db.isDefined" }
,	{ "class" : "UCDB",	"method" : "isSchCln",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "void; method Db.isSchemaColumn(String,String)" }
,	{ "class" : "UCDB",	"method" : "isSchTbl",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "void; method Db.isSchemaTable(String)" }
,	{ "class" : "UCDB",	"method" : "keyVal",	"resultClass" : "",	"formalList" : "noret String inc",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 2,	"comment" : "void; Method Db.nextVal, currVal, nextKey, prevKey, and prevVal" }
,	{ "class" : "UCDB",	"method" : "keyValCurr",	"resultClass" : "",	"formalList" : "noret PSLTable td;noret Number acnt;noret PSLExpression map()",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "key value exppresions" }
,	{ "class" : "UCDB",	"method" : "mapPSLvar",	"resultClass" : "",	"formalList" : "noret String expr",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "local String; Map PSL variables into SQL variables" }
,	{ "class" : "UCDB",	"method" : "rdb",	"resultClass" : "",	"formalList" : "noret String table",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "**** DEPRECATED ****" }
,	{ "class" : "UCDB",	"method" : "select",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method Db.select; returns ResultSet" }
,	{ "class" : "UCDB",	"method" : "selectDyn",	"resultClass" : "",	"formalList" : "noret String select;noret String from;noret String where;noret String orderby;noret String groupby;noret String parlist",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "Dynamic SQL statement runtime" }
,	{ "class" : "UCDB",	"method" : "selectPR",	"resultClass" : "",	"formalList" : "noret String suffix",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "support subroutine to generate vOpen0P / vOpen0R" }
,	{ "class" : "UCDB",	"method" : "selectRecords",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "method Db.selectDbSet; returns DbSet" }
,	{ "class" : "UCDB",	"method" : "sql2akey",	"resultClass" : "",	"formalList" : "noret PSLTable td;noret String where",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "" }
,	{ "class" : "UCDB",	"method" : "sql2psl",	"resultClass" : "",	"formalList" : "noret String lits",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 0,	"methodType" : 2,	"comment" : "translate SQL strlits to PSL strlits" }
,	{ "class" : "UCDB",	"method" : "update",	"resultClass" : "",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 1,	"methodType" : 3,	"comment" : "void; Db.update(Table_name,column_expr,where_clause,filer_qualifier)" }
,	{ "class" : "UCDB",	"method" : "vSIG",	"resultClass" : "String",	"formalList" : "",	"methodProc" : "",	"inLiteral" : false,	"accessLevel" : 2,	"methodType" : 2,	"comment" : "" }
  ]
}
