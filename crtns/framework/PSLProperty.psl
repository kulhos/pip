	/*
	ORIG:	Frans S.C. Witte, 2007-06-23
	DESC:	Class Definition Module for PSL class PSLClass

	---- Comments ----------------------------------------------------------

	---- Revision History --------------------------------------------------
	2009-04-02, Frans S.C. Witte, CR 39242
		Turned getExpr() and hasAccess() methods into 'final' methods.

	06/22/07 - Frans S.C. Witte - CR 27800
		New unit
	*/
	#PACKAGE framework.psl
	#CLASSDEF extends=Primitive public delimiter=9

	/* ---------------------------------------------------------------------
	class - name of class
		*/
	#PROPERTYDEF class			class=String public position=2

	/* ---------------------------------------------------------------------
	property - name of property
		*/
	#PROPERTYDEF property			class=String public position=3

	#PROPERTYDEF dimension			class=String public position=4

	/* ---------------------------------------------------------------------
	accessLevel - visibility of method (protected, private, package, or
		public), coded as an Integer. Use the literals in general PSL
		code.

		NOTES:
		. Some PSL compiler code uses the order of the values, and the
			mapping of Integer to Boolean of these values.
			DO NOT CHANGE THESE VALUES unless you know what you are
			doing !!
		*/
	#PROPERTYDEF accessLevelPROTECTED = -1	class=Number public literal
	#PROPERTYDEF accessLevelPRIVATE   =  0	class=Number public literal
	#PROPERTYDEF accessLevelPACKAGE   =  1	class=Number public literal
	#PROPERTYDEF accessLevelPUBLIC    =  2	class=Number public literal

	#PROPERTYDEF accessLevel		class=Number public position=5

	/* ---------------------------------------------------------------------
	restricted
		*/
	#PROPERTYDEF restrictedNONE     = 0	class=Number public literal
	#PROPERTYDEF restrictedREADONLY = 1	class=Number public literal
	#PROPERTYDEF restrictedLITERAL  = 2	class=Number public literal

	#PROPERTYDEF restricted			class=Number public position=6

	/* ---------------------------------------------------------------------
	resultClass
		*/
	#PROPERTYDEF resultClass		class=String public position=7

	/* ---------------------------------------------------------------------
	node
		*/
	#PROPERTYDEF node			class=String public position=8

	/* ---------------------------------------------------------------------
	position
		*/
	#PROPERTYDEF position			class=Number public position=9

	/* ---------------------------------------------------------------------
	labelref
		*/
	#PROPERTYDEF labelref			class=String public position=10

	/* ---------------------------------------------------------------------
	initialValue
		*/
	#PROPERTYDEF initialValue		class=String public position=11

	// I18N=QUIT
	// *******************************************************************
	// * IMPORTANT NOTE:                                                 *
	// * According to the rules that apply to PSL compiler upgrades,     *
	// * the generated M routine associated with this procedure must be  *
	// * checked into StarTeam and released with the procedure whenever  *
	// * changes are made to this procedure.                             *
	// *                                                                 *
	// * The M routine will be loaded to the mrtns directory during      *
	// * upgrades and will then be removed from that directory as part   *
	// * of the upgrade process.  Therefore, other than during an        *
	// * upgrade an mrtns version of this routine should not exist.      *
	// *                                                                 *
	// * Keep these comments as single line to ensure they exist in the  *
	// * generated M code.                                               *
	// *******************************************************************
	quit

	/* ================================================================== */
	/* Non-local static methods					      */
	/* ****************************************************************** */

	// ---------------------------------------------------------------------
public static PSLProperty fromJSON( String json()	// json(propName) = propValue
		)	// return new PSLProperty with properties from json()
	/* ---------------------------------------------------------------------
	Return a new PSLProperty with properties assigned from the json() array.
	This constructor is the inverse of PSLProperty.toJSON().

	NOTES:
	. This code should be kept in sync with toJSON().
	*/
	type PSLProperty opd = Class.new("PSLProperty")

	/* Fill the properties from the array */
	set opd.class       = json("class")
	set opd.property    = json("property")
	set opd.accessLevel = json("accessLevel")
	set opd.dimension   = json("dimension")
	set opd.labelref    = json("labelref")
	set opd.node        = json("node")
	set opd.position    = json("position")
	set opd.restricted  = json("restricted")
	set opd.resultClass = json("resultClass")

	if json("initialValue").exists() set opd.initialValue = json("initialValue")

	quit opd

	// ---------------------------------------------------------------------
public static Number rowPos( String prp)	// return position of property
	/* ---------------------------------------------------------------------
	TEMPORARY SUPPORT FUNCTION, USED BY M-ONLY MODULES TO OBTAIN THE
	POSITION OF A FIELD BY ITS NAME INSTEAD OF USING HARD-CODED NUMBERS.
	*/
	quit ({List}"1,CLASS,PROPERTY,DIMENSION,ACCESSLEVEL,RESTRICTED,RESULTCLASS,NODE,POSITION,LABELREF,INITIALVALUE").position( prp, ",", 1)

	/* ================================================================== */
	/* Non-local instance methods					      */
	/* ****************************************************************** */

	// ---------------------------------------------------------------------
public final String getExpr( String inst	// object instance variable
		, String subs		// subscripts if applicable
		, PSLClass ocd		// descriptor of class of property
		) // return the (M) expression that represents the property
	/* ---------------------------------------------------------------------
	*/
	type String exp, dlm, trm

	if ocd.classType = ocd.classTypeREFERENCE set exp = "vobj("_ inst, dlm = ",", trm = ")"
	else  set exp = inst, dlm="(", trm = ""

	if 'this.node.isNull() set exp = exp_ dlm_ this.node, dlm = ",", trm = ")"
	if 'subs.isNull() set exp = exp_ dlm_ subs, trm = ")"
	set exp = exp_ trm

	if this.position >0 set exp = "$P("_ exp_ ",$C("_ ocd.delimiter_ "),"_ this.position_ ")"

	quit exp

	// ---------------------------------------------------------------------
public final Boolean hasAccess( PSLCC cc	// compiler cache
		,PSLClass module	// class of SCM seeeking access
		)	// does caller have access to this property
	/* ---------------------------------------------------------------------
	Return if the supplied class can access this property:
	- true if in current module, or if property is public
	- false if property is private
	- true if accessLevel is protected, and module is descendant class
	- true if module's package is same as or subpackage of ours

	RETURNS:
	. $$ = true if property can be accessed by supplied module
	*/
	// cases we can decide ourselves
	if this.class = module.class quit true
	if this.accessLevel = this.accessLevelPUBLIC quit true
	if this.accessLevel = this.accessLevelPRIVATE quit false

	// cases we need to ask the class
	type PSLClass ocd = cc.getPSLClass( this.class)
	if module.inPackage( ocd.package) quit true		// package
	quit module.isDescendantOf( cc, ocd.class)		// protected


	// ---------------------------------------------------------------------
public String toJSON( PSLTokenizer tknzr	// PSLTokenizer to produce JSON strlits
		) // Return this property declaration as a JSON object.
	/* ---------------------------------------------------------------------
	Return this property declaration as a JSON object.
	The returned string will have a TAB character after each comma. This
	allows the caller to break down the string into multiple lines, using
	the TAB character as separator.

	NOTES:
	. This code would benefit from some general JSON related utilities.
	. This code shall be kept in sync with fromJSON()
	*/
	type String json = "{ "
	set json = json_ """class"" : "_ this.class.addQuotes()
	set json = json_ ","_ 9.char()_ """property"" : "_ this.property.addQuotes()
	set json = json_ ","_ 9.char()_ """accessLevel"" : "_ this.accessLevel
	set json = json_ ","_ 9.char()_ """dimension"" : "_ this.dimension.addQuotes()
	set json = json_ ","_ 9.char()_ """labelref"" : "_ tknzr.addQuotes( this.labelref)
	set json = json_ ","_ 9.char()_ """node"" : "_ this.node.addQuotes()
	set json = json_ ","_ 9.char()_ """position"" : "_ this.position
	set json = json_ ","_ 9.char()_ """restricted"" : "_ this.restricted
	set json = json_ ","_ 9.char()_ """resultClass"" : "_ this.resultClass.addQuotes()
	if 'this.initialValue.isNull() {
		set json = json_ ","_ 9.char()_ """initialValue"" : "
		if this.resultClass = "Boolean" set json = json_ $SELECT(this.initialValue:"true",1:"false")
		else if this.resultClass = "Number" set json = json_ this.initialValue
		else  set json = json_ tknzr.addQuotes( this.initialValue)
	}
	quit json_" }"
 #OPTION ResultClass ON
public String vSIG()	quit "61461^42881^Frans S.C. Witte^8989"	// Signature - LTD^TIME^USER^SIZE
