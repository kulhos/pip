 ; 
 ; **** Routine compiled from DATA-QWIK Filer RecordDBTBL2D ****
 ; 
 ; 02/24/2010 18:40 - pip
 ; 
 ;
 ; Record Class code for table DBTBL2D
 ;
 ; Generated by PSLRecordBuilder on 02/24/2010 at 18:40 by
 ;
vcdmNew() ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL2D",vobj(vOid,-2)=0,vobj(vOid)=""
 S vobj(vOid,-3)=""
 S vobj(vOid,-4)=""
 S vobj(vOid,-5)=""
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0(v1,v2,v3,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL2D"
 S vobj(vOid)=$G(^DBTBL(v1,2,v2,v3))
 I '(v3>0)
 E  I vobj(vOid)="",'($D(^DBTBL(v1,2,v2,v3))#2)
 S vobj(vOid,-2)=1
 I $T K vobj(vOid) S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,DBTBL2D",$EC=",U1001,"
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 S vobj(vOid,-5)=v3
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord1(v1,v2,v3,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordDBTBL2D"
 S vobj(vOid)=$G(^DBTBL(v1,2,v2,v3))
 I '(v3>0)
 E  I vobj(vOid)="",'($D(^DBTBL(v1,2,v2,v3))#2)
 S vobj(vOid,-2)='$T
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 S vobj(vOid,-5)=v3
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0Opt(v1,v2,v3,vfromDbSet,v2out) ; 
 N dbtbl2d
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S dbtbl2d=$G(^DBTBL(v1,2,v2,v3))
 I '(v3>0)
 E  I dbtbl2d="",'($D(^DBTBL(v1,2,v2,v3))#2)
 S v2out=1
 I $T S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,DBTBL2D",$EC=",U1001,"
 ;*** End of code by-passed by compiler ***
 Q dbtbl2d
 ;
vRCgetRecord1Opt(v1,v2,v3,vfromDbSet,v2out) ; 
 N dbtbl2d
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S dbtbl2d=$G(^DBTBL(v1,2,v2,v3))
 I '(v3>0)
 E  I dbtbl2d="",'($D(^DBTBL(v1,2,v2,v3))#2)
 S v2out='$T
 ;*** End of code by-passed by compiler ***
 Q dbtbl2d
 ;
vBypassSave(this) ; 
 D vSave(this,"/NOJOURNAL/NOTRIGAFT/NOTRIGBEF/NOVALDD/NOVALREQ/NOVALRI/NOVALST",0)
 Q 
 ;
vSave(this,vRCparams,vauditLogSeq) ; 
 N vRCaudit N vRCauditIns
 N %O S %O=$G(vobj(this,-2))
 I ($get(vRCparams)="") S vRCparams="/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/"
 I (%O=0) D
 .	D AUDIT^UCUTILN(this,.vRCauditIns,1,"|")
 .	D vRCsetDefaults(this)
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=1) D
 .	D AUDIT^UCUTILN(this,.vRCaudit,1,"|")
 .	I ($D(vobj(this,-100,"1*","LIBS"))&($P($E($G(vobj(this,-100,"1*","LIBS")),5,9999),$C(124))'=vobj(this,-3)))!($D(vobj(this,-100,"2*","SID"))&($P($E($G(vobj(this,-100,"2*","SID")),5,9999),$C(124))'=vobj(this,-4)))!($D(vobj(this,-100,"3*","SEQ"))&($P($E($G(vobj(this,-100,"3*","SEQ")),5,9999),$C(124))'=vobj(this,-5))) D vRCkeyChanged(this,vRCparams,.vRCaudit) Q 
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForUpdate(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD1(this)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=2) D
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,2)
 .	Q 
 E  I (%O=3) D
 .	  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) Q:'$$vDbEx1() 
 .	D vRCdelete(this,vRCparams,.vRCaudit,0)
 .	Q 
 Q 
 ;
vcheckAccessRights() ; 
 Q ""
 ;
vinsertAccess(userclass) ; 
 Q 1
 ;
vinsertOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vupdateAccess(userclass) ; 
 Q 1
 ;
vupdateOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vdeleteAccess(userclass) ; 
 Q 1
 ;
vdeleteOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectAccess(userclass,restrict,from) ; 
 S (restrict,from)=""
 Q 1
 ;
vselectOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectOptmOK(userclass,dbtbl2d,vkey1,vkey2,vkey3) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vgetLogging() ; 
 Q "0"
 ;
logUserclass(operation) ; 
 I (operation="INSERT") Q 0
 E  I (operation="UPDATE") Q 0
 E  I (operation="DELETE") Q 0
 E  I (operation="SELECT") Q 0
 Q 0
 ;
vlogSelect(statement,using) ; 
 Q 0
 ;
columnList() ; 
 N columns S columns=""
 S columns=columns_"DECPRE,DEL,DTYPE,LIBS,LTBL,MAXIMUM,MINIMUM,NAME,PATTERN,PEDIT,POS,PP,PRE,PRMPT,PROMPT,REQ,SEQ,SID,SIZE,STATUS,"
 S columns=columns_"TYPE,"
 Q $$vStrRep("DECPRE,DEL,DTYPE,LIBS,LTBL,MAXIMUM,MINIMUM,NAME,PATTERN,PEDIT,POS,PP,PRE,PRMPT,PROMPT,REQ,SEQ,SID,SIZE,STATUS,TYPE",",",$char(9),0,0,"")
 ;
columnListBM() ; 
 Q ""
 ;
columnListCMP() ; 
 Q $$vStrRep("LN,PREPP,PRO,SGR,TB",",",$char(9),0,0,"")
 ;
getColumnMap(map) ; 
 ;
 S map(-5)="SEQ:N:"
 S map(-4)="SID:T:"
 S map(-3)="LIBS:T:"
 S map(-1)="DECPRE:N:15;DEL:N:21;DTYPE:T:2;LTBL:T:6;MAXIMUM:N:14;MINIMUM:N:13;NAME:T:5;PATTERN:T:7;PEDIT:T:18;POS:N:22;PP:L:8;PRE:L:9;PRMPT:T:30;PROMPT:T:11;REQ:L:12;SIZE:N:3;STATUS:T:1;TYPE:T:10"
 Q 
 ;
vlegacy(processMode,params) ; 
 N vTp
 I (processMode=2) D
 .	N dbtbl2d S dbtbl2d=$$vRCgetRecord0^RecordDBTBL2D(LIBS,SID,SEQ,0)
 .	S vobj(dbtbl2d,-2)=2
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL2D(dbtbl2d,$$initPar^UCUTILN(params)) K vobj(dbtbl2d,-100) S vobj(dbtbl2d,-2)=1 TC:vTp  
 .	K vobj(+$G(dbtbl2d)) Q 
 Q 
 ;
vhasLiterals() ; 
 Q 0
 ;
vRCmiscValidations(this,vRCparams,processMode) ; 
 I (("/"_vRCparams_"/")["/VALST/")  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) I '(''$$vDbEx2()=''processMode) D
 .	N errmsg
 .	I (+processMode'=+0) S errmsg=$$^MSG(7932)
 .	E  S errmsg=$$^MSG(2327)
 .	D throwError(errmsg)
 .	Q 
 Q 
 ;
vRCupdateDB(this,processMode,vRCparams,vRCaudit,vRCauditIns) ; 
 I '(("/"_vRCparams_"/")["/NOUPDATE/") D
 .	;   #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(vobj(this)) S ^DBTBL(vobj(this,-3),2,vobj(this,-4),vobj(this,-5))=vobj(this)
 .	;*** End of code by-passed by compiler ***
 .	Q 
 Q 
 ;
vRCdelete(this,vRCparams,vRCaudit,isKeyChange) ; 
 ;  #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
 ;*** Start of code by-passed by compiler
 ZWI ^DBTBL(vobj(this,-3),2,vobj(this,-4),vobj(this,-5))
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCsetDefaults(this) ; 
 I ($P(vobj(this),$C(124),8)="")  S $P(vobj(this),$C(124),8)=0
 I ($P(vobj(this),$C(124),9)="")  S $P(vobj(this),$C(124),9)=0
 I ($P(vobj(this),$C(124),12)="")  S $P(vobj(this),$C(124),12)=0
 Q 
 ;
vRCchkReqForInsert(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("LIBS")
 I ($P(vobj(this),$C(124),8)="") D vRCrequiredErr("PP")
 I ($P(vobj(this),$C(124),9)="") D vRCrequiredErr("PRE")
 I ($P(vobj(this),$C(124),12)="") D vRCrequiredErr("REQ")
 I (vobj(this,-5)="") D vRCrequiredErr("SEQ")
 I (vobj(this,-4)="") D vRCrequiredErr("SID")
 Q 
 ;
vRCchkReqForUpdate(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("LIBS")
 I (vobj(this,-4)="") D vRCrequiredErr("SID")
 I (vobj(this,-5)="") D vRCrequiredErr("SEQ")
 I ($D(vobj(this,-100,"0*","PP"))&($P($E($G(vobj(this,-100,"0*","PP")),5,9999),$C(124))'=$P(vobj(this),$C(124),8))),($P(vobj(this),$C(124),8)="") D vRCrequiredErr("PP")
 I ($D(vobj(this,-100,"0*","PRE"))&($P($E($G(vobj(this,-100,"0*","PRE")),5,9999),$C(124))'=$P(vobj(this),$C(124),9))),($P(vobj(this),$C(124),9)="") D vRCrequiredErr("PRE")
 I ($D(vobj(this,-100,"0*","REQ"))&($P($E($G(vobj(this,-100,"0*","REQ")),5,9999),$C(124))'=$P(vobj(this),$C(124),12))),($P(vobj(this),$C(124),12)="") D vRCrequiredErr("REQ")
 Q 
 ;
vRCrequiredErr(column) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("DBTBL2D","MSG",1767,"DBTBL2D."_column)
 I ER D throwError($get(RM))
 Q 
 ;
vRCvalidateDD(this,processMode) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($L(vobj(this,-3))>12) D vRCvalidateDDerr("LIBS",$$^MSG(1076,12))
 I ($L(vobj(this,-4))>12) D vRCvalidateDDerr("SID",$$^MSG(1076,12))
 I '(vobj(this,-5)=""),'(+vobj(this,-5)=vobj(this,-5))  S vobj(this,-5)=$$vRCtrimNumber(vobj(this,-5))
 S X=vobj(this,-5) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("SEQ",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),15)=""),'(+$P(vobj(this),$C(124),15)=$P(vobj(this),$C(124),15))  S $P(vobj(this),$C(124),15)=$$vRCtrimNumber($P(vobj(this),$C(124),15))
 S X=$P(vobj(this),$C(124),15) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("DECPRE",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),21)=""),'(+$P(vobj(this),$C(124),21)=$P(vobj(this),$C(124),21))  S $P(vobj(this),$C(124),21)=$$vRCtrimNumber($P(vobj(this),$C(124),21))
 S X=$P(vobj(this),$C(124),21) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("DEL",$$^MSG(742,"N"))
 I ($L($P(vobj(this),$C(124),2))>10) D vRCvalidateDDerr("DTYPE",$$^MSG(1076,10))
 I ($L($P(vobj(this),$C(124),6))>40) D vRCvalidateDDerr("LTBL",$$^MSG(1076,40))
 I '($P(vobj(this),$C(124),14)=""),'(+$P(vobj(this),$C(124),14)=$P(vobj(this),$C(124),14))  S $P(vobj(this),$C(124),14)=$$vRCtrimNumber($P(vobj(this),$C(124),14))
 S X=$P(vobj(this),$C(124),14) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("MAXIMUM",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),13)=""),'(+$P(vobj(this),$C(124),13)=$P(vobj(this),$C(124),13))  S $P(vobj(this),$C(124),13)=$$vRCtrimNumber($P(vobj(this),$C(124),13))
 S X=$P(vobj(this),$C(124),13) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("MINIMUM",$$^MSG(742,"N"))
 I ($L($P(vobj(this),$C(124),5))>60) D vRCvalidateDDerr("NAME",$$^MSG(1076,60))
 I ($L($P(vobj(this),$C(124),7))>60) D vRCvalidateDDerr("PATTERN",$$^MSG(1076,60))
 I ($L($P(vobj(this),$C(124),18))>12) D vRCvalidateDDerr("PEDIT",$$^MSG(1076,12))
 I '($P(vobj(this),$C(124),22)=""),'(+$P(vobj(this),$C(124),22)=$P(vobj(this),$C(124),22))  S $P(vobj(this),$C(124),22)=$$vRCtrimNumber($P(vobj(this),$C(124),22))
 S X=$P(vobj(this),$C(124),22) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("POS",$$^MSG(742,"N"))
 I '(($P(vobj(this),$C(124),8)=1)!($P(vobj(this),$C(124),8)=0)) D vRCvalidateDDerr("PP",$$^MSG(742,"L"))
 I '(($P(vobj(this),$C(124),9)=1)!($P(vobj(this),$C(124),9)=0)) D vRCvalidateDDerr("PRE",$$^MSG(742,"L"))
 I ($L($P(vobj(this),$C(124),30))>40) D vRCvalidateDDerr("PRMPT",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),11))>80) D vRCvalidateDDerr("PROMPT",$$^MSG(1076,80))
 I '(($P(vobj(this),$C(124),12)=1)!($P(vobj(this),$C(124),12)=0)) D vRCvalidateDDerr("REQ",$$^MSG(742,"L"))
 I '($P(vobj(this),$C(124),3)=""),'(+$P(vobj(this),$C(124),3)=$P(vobj(this),$C(124),3))  S $P(vobj(this),$C(124),3)=$$vRCtrimNumber($P(vobj(this),$C(124),3))
 S X=$P(vobj(this),$C(124),3) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("SIZE",$$^MSG(742,"N"))
 I ($L($P(vobj(this),$C(124),1))>35) D vRCvalidateDDerr("STATUS",$$^MSG(1076,35))
 I ($L($P(vobj(this),$C(124),10))>10) D vRCvalidateDDerr("TYPE",$$^MSG(1076,10))
 Q 
 ;
vRCvalidateDD1(this) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($D(vobj(this,-100,"1*","LIBS"))&($P($E($G(vobj(this,-100,"1*","LIBS")),5,9999),$C(124))'=vobj(this,-3))) I ($L(vobj(this,-3))>12) D vRCvalidateDDerr("LIBS",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"2*","SID"))&($P($E($G(vobj(this,-100,"2*","SID")),5,9999),$C(124))'=vobj(this,-4))) I ($L(vobj(this,-4))>12) D vRCvalidateDDerr("SID",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"3*","SEQ"))&($P($E($G(vobj(this,-100,"3*","SEQ")),5,9999),$C(124))'=vobj(this,-5))),'(vobj(this,-5)=""),'(+vobj(this,-5)=vobj(this,-5))  S vobj(this,-5)=$$vRCtrimNumber(vobj(this,-5))
 I ($D(vobj(this,-100,"3*","SEQ"))&($P($E($G(vobj(this,-100,"3*","SEQ")),5,9999),$C(124))'=vobj(this,-5))) S X=vobj(this,-5) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("SEQ",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","DECPRE"))&($P($E($G(vobj(this,-100,"0*","DECPRE")),5,9999),$C(124))'=$P(vobj(this),$C(124),15))),'($P(vobj(this),$C(124),15)=""),'(+$P(vobj(this),$C(124),15)=$P(vobj(this),$C(124),15))  S $P(vobj(this),$C(124),15)=$$vRCtrimNumber($P(vobj(this),$C(124),15))
 I ($D(vobj(this,-100,"0*","DECPRE"))&($P($E($G(vobj(this,-100,"0*","DECPRE")),5,9999),$C(124))'=$P(vobj(this),$C(124),15))) S X=$P(vobj(this),$C(124),15) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("DECPRE",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","DEL"))&($P($E($G(vobj(this,-100,"0*","DEL")),5,9999),$C(124))'=$P(vobj(this),$C(124),21))),'($P(vobj(this),$C(124),21)=""),'(+$P(vobj(this),$C(124),21)=$P(vobj(this),$C(124),21))  S $P(vobj(this),$C(124),21)=$$vRCtrimNumber($P(vobj(this),$C(124),21))
 I ($D(vobj(this,-100,"0*","DEL"))&($P($E($G(vobj(this,-100,"0*","DEL")),5,9999),$C(124))'=$P(vobj(this),$C(124),21))) S X=$P(vobj(this),$C(124),21) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("DEL",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","DTYPE"))&($P($E($G(vobj(this,-100,"0*","DTYPE")),5,9999),$C(124))'=$P(vobj(this),$C(124),2))) I ($L($P(vobj(this),$C(124),2))>10) D vRCvalidateDDerr("DTYPE",$$^MSG(1076,10))
 I ($D(vobj(this,-100,"0*","LTBL"))&($P($E($G(vobj(this,-100,"0*","LTBL")),5,9999),$C(124))'=$P(vobj(this),$C(124),6))) I ($L($P(vobj(this),$C(124),6))>40) D vRCvalidateDDerr("LTBL",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","MAXIMUM"))&($P($E($G(vobj(this,-100,"0*","MAXIMUM")),5,9999),$C(124))'=$P(vobj(this),$C(124),14))),'($P(vobj(this),$C(124),14)=""),'(+$P(vobj(this),$C(124),14)=$P(vobj(this),$C(124),14))  S $P(vobj(this),$C(124),14)=$$vRCtrimNumber($P(vobj(this),$C(124),14))
 I ($D(vobj(this,-100,"0*","MAXIMUM"))&($P($E($G(vobj(this,-100,"0*","MAXIMUM")),5,9999),$C(124))'=$P(vobj(this),$C(124),14))) S X=$P(vobj(this),$C(124),14) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("MAXIMUM",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","MINIMUM"))&($P($E($G(vobj(this,-100,"0*","MINIMUM")),5,9999),$C(124))'=$P(vobj(this),$C(124),13))),'($P(vobj(this),$C(124),13)=""),'(+$P(vobj(this),$C(124),13)=$P(vobj(this),$C(124),13))  S $P(vobj(this),$C(124),13)=$$vRCtrimNumber($P(vobj(this),$C(124),13))
 I ($D(vobj(this,-100,"0*","MINIMUM"))&($P($E($G(vobj(this,-100,"0*","MINIMUM")),5,9999),$C(124))'=$P(vobj(this),$C(124),13))) S X=$P(vobj(this),$C(124),13) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("MINIMUM",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","NAME"))&($P($E($G(vobj(this,-100,"0*","NAME")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))) I ($L($P(vobj(this),$C(124),5))>60) D vRCvalidateDDerr("NAME",$$^MSG(1076,60))
 I ($D(vobj(this,-100,"0*","PATTERN"))&($P($E($G(vobj(this,-100,"0*","PATTERN")),5,9999),$C(124))'=$P(vobj(this),$C(124),7))) I ($L($P(vobj(this),$C(124),7))>60) D vRCvalidateDDerr("PATTERN",$$^MSG(1076,60))
 I ($D(vobj(this,-100,"0*","PEDIT"))&($P($E($G(vobj(this,-100,"0*","PEDIT")),5,9999),$C(124))'=$P(vobj(this),$C(124),18))) I ($L($P(vobj(this),$C(124),18))>12) D vRCvalidateDDerr("PEDIT",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","POS"))&($P($E($G(vobj(this,-100,"0*","POS")),5,9999),$C(124))'=$P(vobj(this),$C(124),22))),'($P(vobj(this),$C(124),22)=""),'(+$P(vobj(this),$C(124),22)=$P(vobj(this),$C(124),22))  S $P(vobj(this),$C(124),22)=$$vRCtrimNumber($P(vobj(this),$C(124),22))
 I ($D(vobj(this,-100,"0*","POS"))&($P($E($G(vobj(this,-100,"0*","POS")),5,9999),$C(124))'=$P(vobj(this),$C(124),22))) S X=$P(vobj(this),$C(124),22) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("POS",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","PP"))&($P($E($G(vobj(this,-100,"0*","PP")),5,9999),$C(124))'=$P(vobj(this),$C(124),8))) I '(($P(vobj(this),$C(124),8)=1)!($P(vobj(this),$C(124),8)=0)) D vRCvalidateDDerr("PP",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","PRE"))&($P($E($G(vobj(this,-100,"0*","PRE")),5,9999),$C(124))'=$P(vobj(this),$C(124),9))) I '(($P(vobj(this),$C(124),9)=1)!($P(vobj(this),$C(124),9)=0)) D vRCvalidateDDerr("PRE",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","PRMPT"))&($P($E($G(vobj(this,-100,"0*","PRMPT")),5,9999),$C(124))'=$P(vobj(this),$C(124),30))) I ($L($P(vobj(this),$C(124),30))>40) D vRCvalidateDDerr("PRMPT",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","PROMPT"))&($P($E($G(vobj(this,-100,"0*","PROMPT")),5,9999),$C(124))'=$P(vobj(this),$C(124),11))) I ($L($P(vobj(this),$C(124),11))>80) D vRCvalidateDDerr("PROMPT",$$^MSG(1076,80))
 I ($D(vobj(this,-100,"0*","REQ"))&($P($E($G(vobj(this,-100,"0*","REQ")),5,9999),$C(124))'=$P(vobj(this),$C(124),12))) I '(($P(vobj(this),$C(124),12)=1)!($P(vobj(this),$C(124),12)=0)) D vRCvalidateDDerr("REQ",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","SIZE"))&($P($E($G(vobj(this,-100,"0*","SIZE")),5,9999),$C(124))'=$P(vobj(this),$C(124),3))),'($P(vobj(this),$C(124),3)=""),'(+$P(vobj(this),$C(124),3)=$P(vobj(this),$C(124),3))  S $P(vobj(this),$C(124),3)=$$vRCtrimNumber($P(vobj(this),$C(124),3))
 I ($D(vobj(this,-100,"0*","SIZE"))&($P($E($G(vobj(this,-100,"0*","SIZE")),5,9999),$C(124))'=$P(vobj(this),$C(124),3))) S X=$P(vobj(this),$C(124),3) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("SIZE",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","STATUS"))&($P($E($G(vobj(this,-100,"0*","STATUS")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))) I ($L($P(vobj(this),$C(124),1))>35) D vRCvalidateDDerr("STATUS",$$^MSG(1076,35))
 I ($D(vobj(this,-100,"0*","TYPE"))&($P($E($G(vobj(this,-100,"0*","TYPE")),5,9999),$C(124))'=$P(vobj(this),$C(124),10))) I ($L($P(vobj(this),$C(124),10))>10) D vRCvalidateDDerr("TYPE",$$^MSG(1076,10))
 Q 
 ;
vRCvalidateDDerr(column,errmsg) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("DBTBL2D","MSG",979,"DBTBL2D."_column_" "_errmsg)
 I ER D throwError($get(RM))
 Q 
 ;
vRCtrimNumber(str) ; 
 I ($E(str,1)="0") S str=$$vStrTrim(str,-1,"0") I (str="") S str="0"
 I (str["."),($E(str,$L(str))="0") S str=$$RTCHR^%ZFUNC(str,"0") I ($E(str,$L(str))=".") S str=$E(str,1,$L(str)-1) I (str="") S str="0"
 Q str
 ;
vRCkeyChanged(this,vRCparams,vRCaudit) ; 
 N vTp
 N newkeys N oldkeys N vRCauditIns
 N newKey1 S newKey1=vobj(this,-3)
 N oldKey1 S oldKey1=$S($D(vobj(this,-100,"1*","LIBS")):$P($E(vobj(this,-100,"1*","LIBS"),5,9999),$C(124)),1:vobj(this,-3))
 N newKey2 S newKey2=vobj(this,-4)
 N oldKey2 S oldKey2=$S($D(vobj(this,-100,"2*","SID")):$P($E(vobj(this,-100,"2*","SID"),5,9999),$C(124)),1:vobj(this,-4))
 N newKey3 S newKey3=vobj(this,-5)
 N oldKey3 S oldKey3=$S($D(vobj(this,-100,"3*","SEQ")):$P($E(vobj(this,-100,"3*","SEQ"),5,9999),$C(124)),1:vobj(this,-5))
  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) I $$vDbEx3() D throwError($$^MSG(2327))
 S newkeys=newKey1_","_newKey2_","_newKey3
 S oldkeys=oldKey1_","_oldKey2_","_oldKey3
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
  S vobj(this,-5)=oldKey3
 S vRCparams=$$setPar^UCUTILN(vRCparams,"NOINDEX")
 I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,1)
 D vRCmiscValidations(this,vRCparams,1)
 D vRCupdateDB(this,1,vRCparams,.vRCaudit,.vRCauditIns)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
  S vobj(this,-5)=newKey3
 N newrec S newrec=$$vReCp1(this)
 S vobj(newrec,-2)=0
 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordDBTBL2D(newrec,$$initPar^UCUTILN($$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/"))) K vobj(newrec,-100) S vobj(newrec,-2)=1 TC:vTp  
 D
 .	N %O S %O=1
 .	N ER S ER=0
 .	N RM S RM=""
 .	;   #ACCEPT Date=10/24/2008; Pgm=RussellDS; CR=30801; Group=ACCESS
 .	D CASUPD^DBSEXECU("DBTBL2D",oldkeys,newkeys)
 .	I ER D throwError($get(RM))
 .	Q 
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
  S vobj(this,-5)=oldKey3
 S vRCparams=$$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
 D vRCdelete(this,vRCparams,.vRCaudit,1)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
  S vobj(this,-5)=newKey3
 K vobj(+$G(newrec)) Q 
 ;
throwError(MSG) ; 
 S $ZE="0,"_$ZPOS_","_"%PSL-E-DBFILER,"_$translate(MSG,",","~"),$EC=",U1001,"
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrRep(object,p1,p2,p3,p4,qt) ; String.replace
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I p3<0 Q object
 I $L(p1)=1,$L(p2)<2,'p3,'p4,(qt="") Q $translate(object,p1,p2)
 ;
 N y S y=0
 F  S y=$$vStrFnd(object,p1,y,p4,qt) Q:y=0  D
 .	S object=$E(object,1,y-$L(p1)-1)_p2_$E(object,y,1048575)
 .	S y=y+$L(p2)-$L(p1)
 .	I p3 S p3=p3-1 I p3=0 S y=$L(object)+1
 .	Q 
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vStrTrim(object,p1,p2) ; String.trim
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 I p1'<0 S object=$$RTCHR^%ZFUNC(object,p2)
 I p1'>0 F  Q:$E(object,1)'=p2  S object=$E(object,2,1048575)
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vStrFnd(object,p1,p2,p3,qt) ; String.find
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I (p1="") Q $S(p2<1:1,1:+p2)
 I p3 S object=$ZCONVERT(object,"U") S p1=$ZCONVERT(p1,"U")
 S p2=$F(object,p1,p2)
 I '(qt=""),$L($E(object,1,p2-1),qt)#2=0 D
 .	F  S p2=$F(object,p1,p2) Q:p2=0!($L($E(object,1,p2-1),qt)#2) 
 .	Q 
 Q p2
 ;
vDbEx1() ; min(1): DISTINCT LIBS,SID,SEQ FROM DBTBL2D WHERE LIBS=:V1 and SID=:V2 and SEQ=:V3
 ;
 N vsql1
 S vsql1=$$BYTECHAR^SQLUTL(254)
 ;
 ;
 ;
 I '(V3>0) Q 0
 I '($D(^DBTBL(V1,2,V2,V3))#2) Q 0
 Q 1
 ;
vDbEx2() ; min(1): DISTINCT LIBS,SID,SEQ FROM DBTBL2D WHERE LIBS=:V1 and SID=:V2 and SEQ=:V3
 ;
 N vsql1
 S vsql1=$$BYTECHAR^SQLUTL(254)
 ;
 ;
 ;
 I '(V3>0) Q 0
 I '($D(^DBTBL(V1,2,V2,V3))#2) Q 0
 Q 1
 ;
vDbEx3() ; min(1): DISTINCT LIBS,SID,SEQ FROM DBTBL2D WHERE LIBS=:V1 and SID=:V2 and SEQ=:V3
 ;
 N vsql1
 S vsql1=$$BYTECHAR^SQLUTL(254)
 ;
 ;
 ;
 I '(V3>0) Q 0
 I '($D(^DBTBL(V1,2,V2,V3))#2) Q 0
 Q 1
 ;
vReCp1(v1) ; RecordDBTBL2D.copy: DBTBL2D
 ;
 Q $$copy^UCGMR(this)
