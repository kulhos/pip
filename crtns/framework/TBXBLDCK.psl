	/*
	ORIG:	Frans S.C. Witte, 2009-03-24
	DESC:	check that build contains only unique element names

	----------- Comments ---------------------------------------------------
	This is a support utility that checks that all file names in a
	specified build are unique.

	----------- Revision History -------------------------------------------
	2009-03-24, Frans S.C. Witte
		Initial program
	*/
	#IF $DATA(pslPrsr)
	#PACKAGE framework.tbx
	#END

	#OPTION ResultClass ON

	// =====================================================================
public void check( String bldDir)	// build directory
	/* ---------------------------------------------------------------------
	Check the files in the specified directory
	*/
	type String files()

	do checkDir( bldDir, files())
	quit

	// =====================================================================
private void checkDir( String srcDir,	// source directory
		String files())		// files found so far
	/* ---------------------------------------------------------------------
	Support procedure that recursively adds the entries for the specified
	directory. It will report an error if it finds a duplicate name.

	NOTES:
	. The distinction between "file" and "folder" is made based on the
		observation that every file has an extension. So the absence of
		an extension indicates a folder.
	*/
	type String all(), elem, zsea = srcDir_"/*"

	#ACCEPT DATE=2007-02-20;PGM=Frans S.C. Witte;CR=none;GROUP=BYPASS
	#BYPASS
	FOR  SET elem=$ZSEARCH(zsea) QUIT:elem=""  SET all($ZPARSE(elem,"NAME")_$ZPARSE(elem,"TYPE"))=$ZPARSE(elem,"DIR")
	#ENDBYPASS

	set elem = ""
	for  set elem = all( elem).order() quit:elem.isNull()  do {
		// no dot, must be folder. Check recursively.
		if elem'["." do checkDir( srcDir_"/"_elem, files()) quit

		// first occurrence of this element name, remember its directory
		if 'files(elem).exists() set files(elem) = all(elem) quit

		// duplicate file name, report on standard out
		write "duplicate element name "_elem, !
		write "found in "_ files(elem), !
		write "and in   "_ all(elem), !
		write !		
	}
	quit

	// =====================================================================
public void latest( Number prio)
	/* ---------------------------------------------------------------------
	Check the files of the latest build of the supplied view priority
	*/
	type RecordTBXBUILD bld = Db.getRecord("TBXBUILD", "PRIO=:prio",1)
	if bld.getMode() = 0 write "No build with prioritry "_ prio, ! quit
	if bld.cmsbuild.isNull() write "No build has been installed for priority "_ prio,! quit

	type String files()
	type String dir = "/profile_release/"

	if prio = 0 {
		set dir = dir_"fp/Fp_"_ bld.cmsview_ "_CR"_ bld.cmsbuild
	}
	else  do {
		set dir = dir_"sp/SP_"_ bld.cmsview_ "_"_ bld.cmsbuild
	}
	
	write "checking "_dir,!
	write "installed on "_ bld.curdate.toString()_ " by "_ bld.logid,!
	
	do checkDir( dir, files())

	write "done!",!
	quit
 #OPTION ResultClass ON
public String vSIG()	quit "61446^29875^Frans S.C. Witte^2839"	// Signature - LTD^TIME^USER^SIZE
