public UTLREAD	//
	/*
	ORIG: chhabris - 08/04/2005
	DESC: Interactive Form Builder/Mngr for Simplr

	---- Comments --------------------------------------------------------
	     ORIG:  Frank R. Sanchez (2497) - 06/13/86
	     DESC: Interactive form builder & manager for simpler forms
	
	  Line Tag Calls:
	
	     TOP:  Screen displayed is in create (%O = 0) mode.  The user
	           will be prompted to file, modify or quit (unless
	           %NOPRMT is set).
	
	           Sample Calls: @DEP004 - Savings Account Update (^DEPSTS)
	
	     INQ:  Screen displayed is in inquiry (%O = 2) or print (%O=4)
	           mode.  There will be no user prompting except to press
	           return to continue on inquiry mode.
	
	           Sample Calls: @LNE024 - Escrow Analysis Override Date
	                                   Inquiry (^LNEABPD)
	
	
	 Variables:  %READ - String defining the data items to be prompted
	                     for.  Text variables will be displayed only with
	                     no prompting if preceded by "@".
	              %TAB - Data input string which defines the data type,
	                     length, prompt, etc.
	             %LIBS - Data-Qwik Library
	
	    Optional:
	
	           %BLK    - Block mode input definition (/del,data1,data2,...)
	
	                       Example: S %BLK="/,SYS$SPOOL:RPT123.LIS,1,200"
	
	           %NOPRMT - Predefined user response to <F>ile, <M>odify...
	                     prompt.  This flag will be deleted after the
	                     routine call.
	
	                       Example: S %NOPRMT="F"
	
	           %CTPRMT - Number of prompts per line | offset
	
	                       Example: S %CTPRMT="2|30"
	 
	           %FRAME  - System generated frame with top line starting at
	                     line number %FRAME.  This flag will be deleted
	                     after the routine call.
	
	                       Example: S %FRAME=1  for regular screen
	                                S %FRAME=2  for screen with banner
	   Example:
	
	    S %TAB("var1")=".prompt_table_entry/keyword/keyword/..."
	    S %TAB("var2")=".prompt_table_entry/keyword/keyword/..."
	    S %TAB("var3")=".prompt_table_entry/keyword/keyword/..."
	    S %READ="@@%FN,,var1,var2,var3"
	    D ^UTLREAD
	
			V 5.0					V 4.4
	
	    S %TAB("CID")=".CID1/REQ"	    S %TAB("CID")="/DES=Account Number/TYP=N/LEN=12/REQ"		
	    S %TAB("BAL")=".BAL1"	    S %TAB("BAL")=/DES=Net Investment/TYP=N/DEC=2/LEN=12"
	    S %TAB("IRN")=".IRN1/REQ"	    S %TAB("IRN")="/DES=At Yield/TYP=N/LEN=8/REQ"
	    S %READ="@@%FN,,CID,BAL,IRN"
	
	
       		VALID KEYWORDS:                  
 				      		Default	   Example	   Replaced by prompt
								           table name?
 					       ==========================================
   		/LEN    Field Length             N$ = 12   /LE=12	     Yes (V5.0)
                                     		 L  = 1
                                    		 DC = 10
                                   		 UTF= 255
 	
   		/TYP    Format Type              T         /TYP=$	     Yes (V5.0)
   		/DES    Description              /NODES    /DES=Full Name    Yes (V5.0)
   		/HLP    Help File                /NOHLP    /HLP=[DEP]IRN
   		/DES    Description              /NODES    /DES=Full Name
   		/HLP    Help File                /NOHLP    /HLP=[DEP]IRN
   		/TBL    Look-up Table            /NOTBL    /TBL=^ACN(
   		/PAT    Pattern Check            /NOPAT    /PAT=3.4N
   		/XPP    Post-Processor           /NOXPP    /XPP=D ^XYZ
   		/XPR    Pre-Processor            /NOXPR    /XPR=D ^ABC
   		/MIN    Minimum Value            /NOMIN    /MIN=100
   		/MAX    Maximum Value            /NOMAX    /MAX=200
   		/DEC    Decimal Precision        /NODEC    /DEC=5
   		/SIZ    Field display length     /NOSIZ    /SIZ=10
	
   		/REQ    Required Field		 /NOREQ    /REQ
        	   
   		/PROT   Protected Field          /NOPRO    /PRO
   		/SEC    Secret Mode (echo off)   /NOSEC    /SEC
   		/REP    Repeat Group             /NOREP    /REP=3
 	
                  Valid keywords for message mode only (@var format) 
 	
   		/REV    Reverse Video                      
   		/INC    Increased Intensity                
   		/CEN    Center Text Message                
	
	
	---- Revision History ------------------------------------------------

	05/14/07 - KumarSS - CR 27037
		   Removed Invalid Unicode Characters.

	02/01/07 - KumarSS - CR 25104
		   Removed Invalid Unicode Characters.

	09/21/06 - GIRIDHAL - CR 22186
		   Newed %OPMODE before setting it to 'NOOUTPUT' in the START
		   section. This change was lost from the earlier version
		   Profile01 to Profile04. Not new-ing it was causing the
		   ANTSWP report not to display the prompting screen.
	
	07/15/06 - RussellDS - CR22121
		   Replaced use of $A and $C with byte-related functions to
		   make Unicode compliant.

	08/04/05 - chhabris - CR16677
		   Converted to PSL. 
		   Removed revision history prior to 2004.
	----------------------------------------------------------------------
	*/
 
 	type public Number %OSAVE
 
	set %OSAVE=+%ProcessMode.get(),%ProcessMode=0 do START quit

	//--------------------------------------------------------------------
public INQ	// Inquiry mode
	//--------------------------------------------------------------------

	type public Number %OSAVE

	set %OSAVE=%ProcessMode.get(),%ProcessMode=$select(%ProcessMode.get()=4:4,1:2)
	do START quit


	//--------------------------------------------------------------------
public DEL	// Delete mode
	//--------------------------------------------------------------------

	type public Number %OSAVE

	set %OSAVE=%ProcessMode.get(),%ProcessMode=3

	do START
	quit


START	//

	type public String %READ

	if '%READ.data() quit

	type public String %BLK,DFID,IO,PGM,VFMQ,%CTPRMT,%FRAME,%OPMODE,RM,VSCRPP
	type public Number OLNTB
	type public Boolean ER
	type String vdes,vdl,vdxprmt,vexpr,vl,vnam
	type Number valu,vctprmt,vcx,vcy,vdec,vlen,vlm,vmax,vmin,VSIZ
	type Number vlvn,vnum,vod,vop,vprot,vptn,vptr,vrepeat,vreq,vsec
	type String parmlist,vm,VPGM,vrm,vtbl,vtyp,vxpp,vxpr
	type Number %MAX,%VERSN,I,N,PFID,REQ,V,VO,vofl,x,z,Z
	type String %IPMODE,KVAR

	set VPGM="UTLREAD"

	kill VSCRPP

	if 'DFID.data() set DFID=""
	if %CTPRMT.data() set vctprmt=0,vdxprmt=%CTPRMT.piece("|",2) set:'vdxprmt vdxprmt=(80\%CTPRMT)

	// I18N=OFF
	if %BLK.data() set %IPMODE="NOINT:ORDER %BLK/DELIM="_%BLK.toByteString().ascii(2)
	if  set %BLK=%BLK.extract(3,9999) if '%OPMODE.data() new %OPMODE set %OPMODE="NOOUTPUT"

	if 'OLNTB.data() set OLNTB=30
	if (OLNTB#1000)=0 set OLNTB=OLNTB+30		// Default to column 30

	set vdl=",",vm=0				// Default delimiter, high mark
	set (vop,vptr)=0

	if '%FRAME.data() set vrm=80,vlm=1
	else  set vrm=79,vlm=2

	if %READ.extract()'?1A,""",.<@%["'[%READ.extract() set vdl=%READ.extract(),%READ=%READ.extract(2,999)

	set vod=$$vod(%READ,vdl) 			// Data pointer

	set PFID=DFID,KVAR=",%VERSN",%MAX=1
	set vcy=OLNTB\1000,ER=0
	set VO(0)=vcy+1				// Clear from position

	if %FRAME.get() set vcy=vcy+1		// Add one line

	set vptr=0
	for vnum=1:1 set vexpr=$$NPC(%READ,.vptr,vdl)  do { quit:'vptr!ER
		if %OPMODE.get()["PB",%IPMODE.get()["NOINT",$$IO(vexpr.piece("/",1)) set IO=$I,vexpr=""
		do BUILD(vexpr,vnum)
		}
	if ER set VFMQ="Q" do END quit

	set VO=vod_"|"_(vop+1)_"|"_(OLNTB\1000)_"|"_vcy_"|"_%FRAME.get()
	set %VERSN=4 , PGM="UTLREAD", OLNTB=((vcy+%FRAME.data())*1000)+vcx,%MAX=%MAX-1
	if 'KVAR.isNull() set KVAR="K "_KVAR.extract(2,999)

	D ^DBSPNT() 				// Output form and data

	if 'RM.get().isNull() write $$MSG^%TRMVT(RM)
	
	D ^DBSCRT8 				// Input manager
	do END
	quit

	//----------------------------------------------------------------------
BUILD(P,vnum)	// Build screen by parsing %TAB or [FID]DI syntax
	//----------------------------------------------------------------------
	
	type public String %RECORD,%TAB(),KVAR,parmlist,vdd,vnam,VO(),vptn,vtbl,X()
	type public String vdes,vtyp,vxpp,vxpr
	type public Number ER,vcy,vlvn,vop,vpos,vprot,vrepeat,vreq,vsec,vsiz,y
	type public Number vctprmt,vdec,vlen,vmin,vmax
	type Number I,ptr
	type String ZDI

	if P.isNull() set vcy=vcy+1,vop=vop+1,vctprmt=0,VO(vop)="" quit
	
	if P.extract(1,2)="<<" set P=P.extract(3,P.length()-2)
	if """@"[P.extract() do TEXTONLY quit			// Text string
	
	set ptr=0,vsiz=0,vsec=0,vprot=0,vrepeat=1,parmlist="",y=0
	
	for  set y=P.find("#",y) quit:y=0  if P.extract(1,y-2).length("""")#2,P'["/TB" do DECOD(P.extract(y,P.length())) set P=P.extract(1,y-2)
	for  set y=P.find("*",y) quit:y=0  if P.extract(1,y-2).length("""")#2 set vrepeat=+P.extract(y,P.length()),P=P.extract(1,y-2)

	if P["/" set parmlist=P.piece("/",2,999),P=P.piece("/",1)
	set vlvn=P,vpos="",X=""
	
	if P'="",%TAB(P).data() do { if ER quit
		type String y

		set X=%TAB(P) if X.extract()="|" quit		// Old Syntax ||
		set y=X.piece("/",2,99),P=X.piece("/",1),X=""
		if y'="" set parmlist=y_"/"_parmlist
		}

	if P.extract()="." do {					// ^STBL("PROMPT"
		set P=P.extract(2,P.length())
		if vlvn="" set vlvn=P
		
		if 'Db.isDefined("STBLPROMPT","PROMPTID=:P") do { quit
			type ResultSet rs=Db.select("PROMPT","STBLPROMPT","PROMPTID='MISSING'")
			if rs.next() s parmlist=rs.getCol("PROMPT")_P_"/"_parmlist
			}
		type ResultSet rs=Db.select("PROMPT","STBLPROMPT","PROMPTID=:P")
		if rs.next() s parmlist=rs.getCol("PROMPT")_"/"_parmlist
		}
	
	if P.extract()="[",P?1E.E1"]".E do { quit:ER.get()	// [FID]DI syntax
		set ZDI=$$DI^DBSDD(.P,"",.vdd)
		set X=ZDI.piece("|",1,15) quit:ER
		set vlvn=P.piece(".",3)				// Local Variable
		set X.piece("|",4)="["_P.piece(".",2)_"]"_vlvn	// Help
		}
	
	if %RECORD.data() set vlvn=%RECORD,vpos=vnum		// Local Variable

	if 'parmlist.isNull() do MODPARM(parmlist)

	set vlen=X.piece("|",2)					// Field length
	set vnam=X.piece("|",4)					// Help table
	set vtbl=X.piece("|",5)					// Table lookup
	set vptn=X.piece("|",6)					// Pattern
	set vxpp=X.piece("|",7)					// Post Processor
	set vxpr=X.piece("|",8)					// Pre Processor
	set vtyp=X.piece("|",9)					// Data type
	set vdes=X.piece("|",10)					// Prompt
	set vmin=X.piece("|",12)					// Minimum range
	set vmax=X.piece("|",13)					// Maximum range
	set vdec=X.piece("|",14)					// Decimal Prec
	set vreq=X.piece("|",15)					// Required
	if X.piece("|",21) set vpos=X.piece("|",21)			// Field Position

	// Default attributes
	if vtyp.isNull() set vtyp="T"
	if vptn.extract()="X" set vptn="I "_vptn
	if vlen="" set vlen=$select("N$"[vtyp:12,"DC"[vtyp:10,vtyp="L":1,1:255)

	if 'vsiz set vsiz=vlen
	if vdes'="" set vdes=vdes_":"
	if vreq,vdes'="",vdes.extract()'=" " set vdes=" "_vdes //    Pad for reverse video

	if ","_KVAR_","'[(","_vlvn_",") set KVAR=KVAR_","_vlvn

	if vrepeat<2 do BLDVO(0) quit
	set I=0
	for I=1:1:vrepeat do BLDVO(I)
	quit

	//----------------------------------------------------------------------
BLDVO(vrepeat)	// Build VO(array) and %TAB(array)
	//----------------------------------------------------------------------
	
	type public Number %MAX,N,valu,vcx,vcy,vdec,vl,vlen,vm,vpos,vreq,vrm,vsec,vsiz
	type public Number vmin,vmax,vop
	type public String %DUP(),%FRAME,%TAB(),vdes,vlvn,vnam,vod,vprot
	type public String V,VO(),vptn,vtbl,vtyp,vxpp,vxpr
	type String vlvn1

	// Get cursor address
	do GETCA()

	if vrepeat set vlvn=vlvn.piece("(",1)_"("_vrepeat_")" 	// Subscript
	set valu=@vlvn.get()					// Default value
	if vpos set valu=({String}valu).piece("|",vpos)			// Position
	if valu="",%DUP(vlvn).data() set valu=%DUP(vlvn)	// Save Buffer
	if vtyp="L",valu="" set valu=0				// Logical default to N

	if vpos do {
		set vlvn1=@vlvn
		set vlvn1.piece("|",vpos)=valu
		set @vlvn=vlvn1
		}
	else  set @vlvn=valu

	if valu="" set V=""
	else  set V=$$EXT^%ZM(valu,vtyp,vdec) set:"$N"[vtyp V=$J(V,vlen)

	set N=vcx-vl if N=1,%FRAME.data() set N=2 
	set vop=vop+1,VO(vop)=vcy.byte()_N.byte()_vl.byte()_vreq.byte()_"00000001T"_vdes

	if vl set vcx=vcx+1
	set vm=vcx+vsiz,vl=vsiz
	if vm>vrm set vl=vrm-vcx-%FRAME.data()

        set vod=vod+1
        set VO(vod)=vcy.byte()_vcx.byte()_vl.byte()_0.byte()_"00000000"_vtyp_$select(vsec:"",1:V)

	if vpos set vpos=124_vpos				// Force Delimiter
	set %TAB(%MAX)=(vcy-1).byte()_(vcx-1).byte()_vl.byte()_$select(vprot.get():2,1:vsec)_+vreq_vtyp_vpos_"|*"_vlvn_"|"_$S(vnam="":"[*]@"_vlvn,1:vnam)_"|"_vtbl_"|"_vptn_"|"_vxpp_"|"_vxpr_"|"_vmin_"|"_vmax_"|"_vdec_"||"_vlen
	set %MAX=%MAX+1
	quit


	// I18N=ON
public VREPRNT	// 
	do VDA,^DBSPNT()
	quit

	
	//----------------------------------------------------------------------
GETCA()	//       Return right justified cursor address
	//----------------------------------------------------------------------
	
	type public String %CTPRMT,%TAB(),V,VO(),vdes,vofl()
	type public Number %MAX,tab,vctprmt,vcx,vcy,vdxprmt,vlen,vlm,vm,vod,vrm,z
	type public Number OLNTB,vl
	
	set vl=vdes.length()
	set vcy=vcy+1,vcx=OLNTB#1000			// Y,X Coordinates
	if vl>vcx set vcx=vl+2 				// Prompt is too long
	
	if '%CTPRMT.data() set:'vl&(vcx+vlen>vrm) vcx=vrm-vlen S:vcx<vlm vcx=vlm quit
	set vctprmt=vctprmt+1
	if vctprmt>%CTPRMT set vctprmt=1 quit
	if vctprmt'=1 set vcx=((vctprmt-1)*vdxprmt)+vcx,vcy=vcy-1
	if (vm<(vcx-vl))!(%MAX=1) quit

	set tab=%MAX-1,z=%TAB(tab),vm=0

	if (({String}z).ascii(1)+1)'=vcy quit				// Not on the same line
	set vlen=vofl(tab).get() if vlen="" set vlen=({String}z).ascii(3)
	set V=VO(vod).extract(14,999)

	set vlen=vcx-vl-({String}z).ascii(2)-2
	set %TAB(tab)=({String}z).extract(1,2)_(vlen.byte())_({String}z).extract(4,999)
	set VO(vod)=VO(vod).extract(1,2)_vlen.byte()_VO(vod).extract(4,999)
	quit
	
	
	//----------------------------------------------------------------------
TEXTONLY	// Message (Protected field)
	//----------------------------------------------------------------------
	
	type public Number %CTPRMT,ER,OLNTB,vctprmt,vdxprmt,vcx,vcy,vlm,vnum,vop,vrm,z
	type public String %FN,%FRAME,P,RM,VO()
	type Number I,L,vcen,vreq,x,y,Z,Z1
	type String P1

	set vreq=0,vcen=0
	set P1="||REV|INC|CEN"
	if P["#" set vreq=P.piece("#",2).extract(),P=P.piece("#",1)
	if P["/" do { quit:ER.get()  set P=P.piece("/",1)
		set L=P.length("/")
		for I=2:1:L do { quit:ER.get()
			set Z1=P.piece("/",I)
			set Z=P1.piece("|"_Z1,1).length("|")

			// Invalid qualifier /~p1
			if Z>4 set ER=1,RM=$$^MSG("1430",Z1) quit
 			if Z=4 set vcen=1 quit
			set vreq=Z-1
			}
		}

	if P.extract()="@" set P=P.extract(2,99) if P.extract(1,4)="@%FN" do {

		// Format standard heading
		if %FN.get().isNull() set P=""		// blank banner	
		else  do {
			type ResultSet rs=Db.select("DESC","SCATBL","FN=:%FN")
			if rs.next() set P=rs.getCol("DESC")
			}
		set P=34.char()_P_34.char()
		set (vcen,vreq)=1
		}

	if P.extract()="""" set P=P.extract(2,P.length()-1)	// String constant
	else  set P=@P

	set P=$J("",(80-P.length())\2)_P,P=P_$J("",80-P.length())

	set vcy=vcy+1,vcx=OLNTB#1000			// Cursor position
	set z=28 if P.length()>48 set z=vcx-1		// Length > 48, left justify

	if '%CTPRMT.data() set vctprmt=0		// Multiple prompts/line
	else  do {
		if z=28 set z=0				// Calculate new cursor position
		set vctprmt=vctprmt+1 if vctprmt>%CTPRMT set vctprmt=1
		if vctprmt'=1 set vcx=((vctprmt-1)*vdxprmt)+vcx,vcy=vcy-1
		if vcx+P.length()+vdxprmt>80 set vctprmt=0
		}

	if vnum=1,%FRAME.get()=2 set P=P.extract(1,80),y=vcy-1,x=1
	else  set P=$E(P,1,vrm-vlm+1),y=vcy,x=vcx-z if %FRAME.data() set x=x+1

	set vop=vop+1,VO(vop)=y.byte()_x.byte()_P.length().byte()_vreq.byte()_"00000001T"_P 
	quit


	//----------------------------------------------------------------------
DECOD(z)	// Decode procedures defined after # (P2 = req, P3 = mode (S=secret)
	//----------------------------------------------------------------------

	type public String parmlist,vprot
	type public Number vsec

	set parmlist=parmlist_$select(z.extract():"/REQ",1:"/NOREQ")
	set vsec=z.piece("#",2).extract()="S"			// Secret mode
	set vprot=z.piece("#",2).extract()="P"			// Protected
	quit


	//----------------------------------------------------------------------
vod(X,D)	// Return the starting address for data
	//----------------------------------------------------------------------
	type public Number vod
	type Number y

	set vod=1,y=0
	for  set y=X.find(D,y) quit:'y  if X.extract(1,y-2).length("""")#2  set vod=vod+1
	for  set y=X.find("*",y) quit:'y  if X.extract(1,y-2).length("""")#2  set vod=vod+(X.extract(y,X.length()))-1
	quit vod


	//----------------------------------------------------------------------
VDA	// Refresh data in VO(array) for screen redraw
	//----------------------------------------------------------------------

	type Number I,V,Y
	type String X
	type public String VO()
	
	set I=+VO,Y=1
	for I=1:1:VO if 'VO(I).extract(12) , 'VO(I).isNull() do VDA1 		// data
	quit


VDA1	//
	type public Number I,Y
	type public String %TAB(),V,VO(),X
	type String TMP

	set X=%TAB(Y)

	// Suppress Option (secret mode) #S (v4.2)
	if X.extract(4)=1 set V=""
	else  do {
	set TMP=(X.piece("|",2)).extract(2,999)
		set V=@TMP.get()
		
		if X.extract(10,11),(X.extract(7)'="|") set V=V.piece("|",X.extract(10,11))
		if ('V.isNull()) ! (X.extract(6)="L") set V=$$EXT^%ZM(V,X.extract(6),X.piece("|",10))
		}
	set VO(I)=VO(I).extract(1,13)_V,Y=Y+1
	quit


	//----------------------------------------------------------------------
MODPARM(parmlist)	// Modify table parameters
	//----------------------------------------------------------------------
	
	type public Number ER,vsiz
	type public String RM,vlvn,vrepeat,vsec,vprot,X
	type Number neg,ptr
	type String VAR2,expr,qfy,v,Z

	if parmlist.extract()="/" set parmlist=parmlist.extract(2,parmlist.length())
	set VAR2="||LEN||HLP|TBL|PAT|XPP|XPR|TYP|DES||MIN|MAX|DEC|REQ|PROT|SEC|REP|SIZ|VAR|POS"

	set ptr=0
	for  set expr=$$NPC(parmlist,.ptr,"/")  do { if 'ptr!ER quit

		set v=expr.piece("=",2,999),qfy=expr.piece("=",1) if qfy="" quit
		if v.extract()="""" set v=$$SUBQWT(v)

		if qfy.extract(1,2)="NO" set qfy=qfy.extract(3,999),v="",neg=1
		set Z=VAR2.piece("|"_qfy,1).length("|")

		// Invalid Qualifier ~p1
		if Z=22 set ER=1,RM=$$^MSG("1430",qfy) quit

		if Z<15!(Z=21) set X.piece("|",Z)=v quit
		if Z=15 set X.piece("|",15)='neg.get() quit
		if Z=16 set vprot='neg.get() quit		// /PRO   Protected
		if Z=17 set vsec='neg.get() quit		// /SEC   Secret Mode
		if Z=18 set vrepeat=v do PUSH(v-1)		// /REP   Repeat Group
		if Z=20 set vlvn=v Q				// /VAR   Variable name
		if Z=19,v set vsiz=v				// /SIZ   Field Size
		}

	quit


PUSH(v)	// Push Data Structure v elements out
	
	type public Number vod,vop
	type public String VO()
	type Number z
	
	set vod=vod+v
	set z=""
	for  set z=VO(z).order(-1) quit:(z'>vop)  set VO(z+v)=VO(z)
	quit


END	//
	type public Number %OSAVE,OLNTB
	type public String DFID,PFID,%CTPRMT,%VPP,%VPRE,%FRAME,%TAB

	set DFID=PFID,%ProcessMode=%OSAVE
	kill OLNTB,%OSAVE,%CTPRMT,%VPP,%VPRE,%FRAME,%TAB
	quit


	//-----------------------------------------------------------------------
public BANNER(FN,SIZE)	// Public // Function Description
	/*-----------------------------------------------------------------------
	
	Return the description of a function and will be centered based
	on field SIZE.
	
	 ARGUMENTS:
	
		. FN  	Function name			/REQ/TYP=T/MECH=VAL
		. SIZE  Field size			/NOREQ/TYP=N/DFT=80
	
	 RETURNS:
	
		. $$	Function Description		/TYP=T
	               
	 EXAMPLE:
	
		S MSG=$$BANNER^UTLREAD("DBSDFM")
	      
	-----------------------------------------------------------------------
	*/
	
	type String X

	if FN.get().isNull() quit ""
	if SIZE.get().isNull() set SIZE=80
	
	type ResultSet rs=Db.select("DESC","SCATBL","FN=:FN")
	if rs.next() set X=rs.getCol("DESC")

	set X=$J("",(SIZE-X.length())\2)_X
	quit X_$J("",SIZE-X.length())


	//----------------------------------------------------------------------
SUBQWT(v)	// Remove a layer of qoutes from a string
	//----------------------------------------------------------------------

	type Number y

	if v.beginsWith("""") set v=v.extract(2,v.length())
	if v.endsWith("""") set v=v.extract(1,v.length()-1)
	set y=0

	for  set y=v.find("""",y) quit:'y  set v=v.extract(1,y-2)_v.extract(y,v.length())
	quit v


	//----------------------------------------------------------------------
NPC(v,ptr,del)	//private// Return Next Unquoted Piece (Use new utility %ZS) 
	//----------------------------------------------------------------------

	type Number y

	if del.get()="" set del=","

	set y=v.find(del,ptr)
	if y=0 set v=v.extract(ptr,v.length()),ptr=0 quit v
	if (v.extract(ptr,y-1).length(""""))#2 set v=v.extract(ptr,y-2),ptr=y quit v
	for  set y=v.find(del,y) quit:'y  if (v.extract(ptr,y-1).length(""""))#2 quit
	set v=v.extract(ptr,$S(y:y-2,1:v.length())),ptr=y
	quit v


	//----------------------------------------------------------------------
IO(prompt)	//Private//Is prompt for output device?
	//----------------------------------------------------------------------
	
	if "|IO|IO1|IO2|IO3|IO4|"[("|"_prompt_"|") quit 1
	quit 0
  
 
 
 
 #OPTION ResultClass ON
public String vSIG()	quit "60764^48607^Sudanthiran S. Kumar^20279"	// Signature - LTD^TIME^USER^SIZE
