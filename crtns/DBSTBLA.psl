public DBSTBLA(String vREF, String vSTR, String vFMT)

	/*
	Verify that the value vSTR is in the table TABLE
	
	Called by VER^DBSTBL.
	
	This code is separate from DBSTBL due to the need to perform a dynamic
	select.  DBSTBL's main code also performa a dynamic select.  At the
	present time, only one is allowed per procedure.
	
	ARGUMENTS:
	
		. vREF	Lookup reference
			[Table_name] [Column,...]
			[^]glvn(key,... [# position]
			@entryref^routine
		. vSTR	Input Match String		/NOREQ
		. vFMT	Data Type - TUFLDC$		/NOREQ/DFT="T"
	
	RETURNS:
		. $$	Return null value if not a valid entry
			or the table entry bottom key and description
	EXAMPLE:
	
		set X = $$VER^DBSTBLA("[UTBLBRCD]", 1234, "T")
		
	----- Revision History ------------------------------------------------
	
	11/10/06 - GiridharanB - CR22016
		   Added code to handle embedded quotes in where clause literal.
		   
	04/05/06 - RussellDS - CR20622
		   Added parenthesis around orignal WHERE clause before
		   modifying to XWHERE to avoid change in logic when the
		   AND condition is added.
	
	03/21/06 - RussellDS - CR20234
		   Modify code so that if using select include DQMODE to avoid
		   cartesian products if multiple tables involved.
	
	04/06/05 - RussellDS - CR15308
		   Modified return value to match previous code.  Should return
		   bottome key value + " " + description
		   
	-----------------------------------------------------------------------
	*/

	type Public Boolean ER

	type String vINFO(), vRETURN
	
	if vFMT.get().isNull() set vFMT = "T"
	
	set vINFO("STR") = ""
	set vINFO("FMT") = vFMT
	set vINFO("MIN") = ""
	set vINFO("MAX") = ""
	set vINFO("HDG") = ""
	
	do SETUP^DBSTBL(vREF, .vINFO()) if ER quit ""
	
	if vINFO("NOVALIDATE").exists() quit vSTR
	
	set vRETURN = ""
	
	// Array (includes picklist) -- array lookup is in form of vlist(X)
	// or similar array reference to X
	if vINFO("TYPE") = "Array" do {
		
		type Boolean isList
		type Number vCNT, vDSCPCE, vI
		
		set vDSCPCE = 1
		if (vINFO("PIECE").get() > 1) set vDSCPCE = vINFO("PIECE")
		
		if (vINFO("LISTLEN").get() > 0) do {
		
			set isList = 1
			set vCNT = vSTR.length(",")
		}
		else  do {
			
			set isList = 0
			set vCNT = 1
		}
		
		for vI = 1:1:vCNT do { quit:vRETURN.isNull()
			
			type Number vDATA
			type String V, VALUE, vSTRING
			
			if isList set V = vSTR.piece(",", vI)
			else  set V = vSTR
			
			set vSTRING = "set vDATA=$D("_vINFO("ARRAY")_")"
			#ACCEPT Date=11/29/04;PGM=RussellDS;CR=13258
			xecute vSTRING
			
			if (vDATA '> 0) set vRETURN = ""
			else  do {
		
				set vSTRING = "set VALUE=$G("_vINFO("ARRAY")_")"
				#ACCEPT Date=11/29/04;PGM=RussellDS;CR=13258
				xecute vSTRING
			
				set vRETURN.piece(", ", vI) = V_" "_VALUE.piece("|", vDSCPCE)
			}
		}
	}
	
	// Table
	else  do {
		
		type Boolean isList
		type Number CNT, DSCCOL, I
		type String FROM, MATCH, SELECT, WHERE
	
		set SELECT = vINFO("SELECT")
		set FROM = vINFO("TABLES")
		set WHERE = vINFO("WHERE").get()
		
		set DSCCOL = 2				// Description column
		set MATCH = vINFO("BTMKEY")
		if SELECT.isLike("DISTINCT %") do {
			set MATCH = SELECT.piece(" ", 2).piece(",", 1)
			set DSCCOL = 1
		}
		else  if (vINFO("COLCNT") = 1) set DSCCOL = 1
		
		/* Following line models patch in old DBSTBLA to support
		   lists that aren't ID'd as such.  E.g., list of valid
		   tables on screen maintenance page.
		*/
		if vSTR.isLike("%,%") set vINFO("LISTLEN") = 1
		
		if (vINFO("LISTLEN").get() > 0) do {
		
			set isList = 1
			set CNT = vSTR.length(",")
		}
		else  do {
			
			set isList = 0
			set CNT = 1
		}
		
		for I = 1:1:CNT do { quit:vRETURN.isNull()
			
			type String X, XWHERE
			
			if isList set X = vSTR.piece(",", I)
			else  set X = vSTR
			
			// MODIFIED TO HANDLE EMBEDDED QUOTE CHARACTER.
			set X=X.addQuotes("'")
		
			// ALL LITERALS QUOTED ABOVE.
			if WHERE.isNull() set XWHERE = MATCH_"="_X
			else  set XWHERE = "("_WHERE_") AND "_MATCH_"="_X
			
			#ACCEPT Date=11/29/04;PGM=RussellDS;CR=13258
			type ResultSet rs = Db.select(SELECT, FROM, XWHERE, "", "", "/DQMODE=1")
			
			if rs.isEmpty() set vRETURN = ""
			else  if rs.next() do {
				if DSCCOL = 1 set vRETURN.piece(", ", I) = rs.getCol(1)
				else  set vRETURN.piece(", ", I) = rs.getCol(1)_" "_rs.getCol(2)
			}
		}
	}
	
	quit vRETURN.extract(1, 80)
 #OPTION ResultClass ON
public String vSIG()	quit "60579^13625^Badrinath Giridharan^4127"	// Signature - LTD^TIME^USER^SIZE
