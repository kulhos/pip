 ; 
 ; **** Routine compiled from DATA-QWIK Filer RecordPROCESSJNL ****
 ; 
 ; 02/24/2010 18:40 - pip
 ; 
 ;
 ; Record Class code for table PROCESSJNL
 ;
 ; Generated by PSLRecordBuilder on 02/24/2010 at 18:40 by
 ;
vcdmNew() ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordPROCESSJNL",vobj(vOid,-2)=0,vobj(vOid)=""
 S vobj(vOid,-3)=""
 S vobj(vOid,-4)=""
 S vobj(vOid,-5)=""
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0(v1,v2,v3,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordPROCESSJNL"
 S vobj(vOid)=$G(^PROCJNL(v1,v2,v3))
 I vobj(vOid)="",'($D(^PROCJNL(v1,v2,v3))#2)
 S vobj(vOid,-2)=1
 I $T K vobj(vOid) S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,PROCESSJNL",$EC=",U1001,"
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 S vobj(vOid,-5)=v3
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord1(v1,v2,v3,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordPROCESSJNL"
 S vobj(vOid)=$G(^PROCJNL(v1,v2,v3))
 I vobj(vOid)="",'($D(^PROCJNL(v1,v2,v3))#2)
 S vobj(vOid,-2)='$T
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 S vobj(vOid,-5)=v3
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0Opt(v1,v2,v3,vfromDbSet,v2out) ; 
 N processjnl
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S processjnl=$G(^PROCJNL(v1,v2,v3))
 I processjnl="",'($D(^PROCJNL(v1,v2,v3))#2)
 S v2out=1
 I $T S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,PROCESSJNL",$EC=",U1001,"
 ;*** End of code by-passed by compiler ***
 Q processjnl
 ;
vRCgetRecord1Opt(v1,v2,v3,vfromDbSet,v2out) ; 
 N processjnl
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S processjnl=$G(^PROCJNL(v1,v2,v3))
 I processjnl="",'($D(^PROCJNL(v1,v2,v3))#2)
 S v2out='$T
 ;*** End of code by-passed by compiler ***
 Q processjnl
 ;
vBypassSave(this) ; 
 D vSave(this,"/NOJOURNAL/NOTRIGAFT/NOTRIGBEF/NOVALDD/NOVALREQ/NOVALRI/NOVALST",0)
 Q 
 ;
vSave(this,vRCparams,vauditLogSeq) ; 
 N vRCaudit N vRCauditIns
 N %O S %O=$G(vobj(this,-2))
 I ($get(vRCparams)="") S vRCparams="/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/"
 I (%O=0) D
 .	D AUDIT^UCUTILN(this,.vRCauditIns,1,"|")
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=1) D
 .	D AUDIT^UCUTILN(this,.vRCaudit,1,"|")
 .	I ($D(vobj(this,-100,"1*","SYSTEMDAT"))&($P($E($G(vobj(this,-100,"1*","SYSTEMDAT")),5,9999),$C(124))'=vobj(this,-3)))!($D(vobj(this,-100,"2*","PID"))&($P($E($G(vobj(this,-100,"2*","PID")),5,9999),$C(124))'=vobj(this,-4)))!($D(vobj(this,-100,"3*","JNLSEQ"))&($P($E($G(vobj(this,-100,"3*","JNLSEQ")),5,9999),$C(124))'=vobj(this,-5))) D vRCkeyChanged(this,vRCparams,.vRCaudit) Q 
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForUpdate(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD1(this)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=2) D
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,2)
 .	Q 
 E  I (%O=3) D
 .	  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) Q:'($D(^PROCJNL(V1,V2,V3))#2) 
 .	D vRCdelete(this,vRCparams,.vRCaudit,0)
 .	Q 
 Q 
 ;
vcheckAccessRights() ; 
 Q ""
 ;
vinsertAccess(userclass) ; 
 Q 1
 ;
vinsertOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vupdateAccess(userclass) ; 
 Q 1
 ;
vupdateOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vdeleteAccess(userclass) ; 
 Q 1
 ;
vdeleteOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectAccess(userclass,restrict,from) ; 
 S (restrict,from)=""
 Q 1
 ;
vselectOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectOptmOK(userclass,processjnl,vkey1,vkey2,vkey3) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vgetLogging() ; 
 Q "0"
 ;
logUserclass(operation) ; 
 I (operation="INSERT") Q 0
 E  I (operation="UPDATE") Q 0
 E  I (operation="DELETE") Q 0
 E  I (operation="SELECT") Q 0
 Q 0
 ;
vlogSelect(statement,using) ; 
 Q 0
 ;
columnList() ; 
 N columns S columns=""
 S columns=columns_"ACTION,EVENT,FUNC,ISSDATE,ISSPID,ISSTIME,ISSTLO,ISSUSRNM,JNLSEQ,MODE,PID,PRCDATE,PRCTIME,PRCTYP,QUALIF,REGDATE,REGTIME,STATUS,SUBTYP,SYSTEMDAT,"
 S columns=columns_"TLO,USERID,USRCLS,USRNAM,"
 Q $$vStrRep("ACTION,EVENT,FUNC,ISSDATE,ISSPID,ISSTIME,ISSTLO,ISSUSRNM,JNLSEQ,MODE,PID,PRCDATE,PRCTIME,PRCTYP,QUALIF,REGDATE,REGTIME,STATUS,SUBTYP,SYSTEMDAT,TLO,USERID,USRCLS,USRNAM",",",$char(9),0,0,"")
 ;
columnListBM() ; 
 Q ""
 ;
columnListCMP() ; 
 Q $$vStrRep("",",",$char(9),0,0,"")
 ;
getColumnMap(map) ; 
 ;
 S map(-5)="JNLSEQ:N:"
 S map(-4)="PID:N:"
 S map(-3)="SYSTEMDAT:D:"
 S map(-1)="ACTION:T:12;EVENT:T:11;FUNC:T:10;ISSDATE:D:16;ISSPID:N:15;ISSTIME:C:17;ISSTLO:T:19;ISSUSRNM:T:18;MODE:T:3;PRCDATE:D:20;PRCTIME:C:21;PRCTYP:T:6;QUALIF:T:13;REGDATE:D:1;REGTIME:C:2;STATUS:T:14;SUBTYP:T:"
 S map(-1)=map(-1)_"7;TLO:T:4;USERID:T:8;USRCLS:T:9;USRNAM:T:5"
 Q 
 ;
vlegacy(processMode,params) ; 
 N vTp
 I (processMode=2) D
 .	N processjnl S processjnl=$$vRCgetRecord0^RecordPROCESSJNL(SYSTEMDAT,PID,JNLSEQ,0)
 .	S vobj(processjnl,-2)=2
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordPROCESSJNL(processjnl,$$initPar^UCUTILN(params)) K vobj(processjnl,-100) S vobj(processjnl,-2)=1 TC:vTp  
 .	K vobj(+$G(processjnl)) Q 
 Q 
 ;
vhasLiterals() ; 
 Q 0
 ;
vRCmiscValidations(this,vRCparams,processMode) ; 
 I (("/"_vRCparams_"/")["/VALST/")  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) I '(''($D(^PROCJNL(V1,V2,V3))#2)=''processMode) D
 .	N errmsg
 .	I (+processMode'=+0) S errmsg=$$^MSG(7932)
 .	E  S errmsg=$$^MSG(2327)
 .	D throwError(errmsg)
 .	Q 
 Q 
 ;
vRCupdateDB(this,processMode,vRCparams,vRCaudit,vRCauditIns) ; 
 I '(("/"_vRCparams_"/")["/NOUPDATE/") D
 .	;   #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(vobj(this)) S ^PROCJNL(vobj(this,-3),vobj(this,-4),vobj(this,-5))=vobj(this)
 .	;*** End of code by-passed by compiler ***
 .	Q 
 Q 
 ;
vRCdelete(this,vRCparams,vRCaudit,isKeyChange) ; 
 ;  #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
 ;*** Start of code by-passed by compiler
 ZWI ^PROCJNL(vobj(this,-3),vobj(this,-4),vobj(this,-5))
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCchkReqForInsert(this) ; 
 I ($P(vobj(this),$C(124),12)="") D vRCrequiredErr("ACTION")
 I ($P(vobj(this),$C(124),16)="") D vRCrequiredErr("ISSDATE")
 I ($P(vobj(this),$C(124),15)="") D vRCrequiredErr("ISSPID")
 I ($P(vobj(this),$C(124),17)="") D vRCrequiredErr("ISSTIME")
 I ($P(vobj(this),$C(124),19)="") D vRCrequiredErr("ISSTLO")
 I ($P(vobj(this),$C(124),18)="") D vRCrequiredErr("ISSUSRNM")
 I (vobj(this,-5)="") D vRCrequiredErr("JNLSEQ")
 I ($P(vobj(this),$C(124),3)="") D vRCrequiredErr("MODE")
 I (vobj(this,-4)="") D vRCrequiredErr("PID")
 I ($P(vobj(this),$C(124),6)="") D vRCrequiredErr("PRCTYP")
 I ($P(vobj(this),$C(124),1)="") D vRCrequiredErr("REGDATE")
 I ($P(vobj(this),$C(124),2)="") D vRCrequiredErr("REGTIME")
 I ($P(vobj(this),$C(124),14)="") D vRCrequiredErr("STATUS")
 I (vobj(this,-3)="") D vRCrequiredErr("SYSTEMDAT")
 I ($P(vobj(this),$C(124),4)="") D vRCrequiredErr("TLO")
 I ($P(vobj(this),$C(124),5)="") D vRCrequiredErr("USRNAM")
 Q 
 ;
vRCchkReqForUpdate(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("SYSTEMDAT")
 I (vobj(this,-4)="") D vRCrequiredErr("PID")
 I (vobj(this,-5)="") D vRCrequiredErr("JNLSEQ")
 I ($D(vobj(this,-100,"0*","ACTION"))&($P($E($G(vobj(this,-100,"0*","ACTION")),5,9999),$C(124))'=$P(vobj(this),$C(124),12))),($P(vobj(this),$C(124),12)="") D vRCrequiredErr("ACTION")
 I ($D(vobj(this,-100,"0*","ISSDATE"))&($P($E($G(vobj(this,-100,"0*","ISSDATE")),5,9999),$C(124))'=$P(vobj(this),$C(124),16))),($P(vobj(this),$C(124),16)="") D vRCrequiredErr("ISSDATE")
 I ($D(vobj(this,-100,"0*","ISSPID"))&($P($E($G(vobj(this,-100,"0*","ISSPID")),5,9999),$C(124))'=$P(vobj(this),$C(124),15))),($P(vobj(this),$C(124),15)="") D vRCrequiredErr("ISSPID")
 I ($D(vobj(this,-100,"0*","ISSTIME"))&($P($E($G(vobj(this,-100,"0*","ISSTIME")),5,9999),$C(124))'=$P(vobj(this),$C(124),17))),($P(vobj(this),$C(124),17)="") D vRCrequiredErr("ISSTIME")
 I ($D(vobj(this,-100,"0*","ISSTLO"))&($P($E($G(vobj(this,-100,"0*","ISSTLO")),5,9999),$C(124))'=$P(vobj(this),$C(124),19))),($P(vobj(this),$C(124),19)="") D vRCrequiredErr("ISSTLO")
 I ($D(vobj(this,-100,"0*","ISSUSRNM"))&($P($E($G(vobj(this,-100,"0*","ISSUSRNM")),5,9999),$C(124))'=$P(vobj(this),$C(124),18))),($P(vobj(this),$C(124),18)="") D vRCrequiredErr("ISSUSRNM")
 I ($D(vobj(this,-100,"0*","MODE"))&($P($E($G(vobj(this,-100,"0*","MODE")),5,9999),$C(124))'=$P(vobj(this),$C(124),3))),($P(vobj(this),$C(124),3)="") D vRCrequiredErr("MODE")
 I ($D(vobj(this,-100,"0*","PRCTYP"))&($P($E($G(vobj(this,-100,"0*","PRCTYP")),5,9999),$C(124))'=$P(vobj(this),$C(124),6))),($P(vobj(this),$C(124),6)="") D vRCrequiredErr("PRCTYP")
 I ($D(vobj(this,-100,"0*","REGDATE"))&($P($E($G(vobj(this,-100,"0*","REGDATE")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))),($P(vobj(this),$C(124),1)="") D vRCrequiredErr("REGDATE")
 I ($D(vobj(this,-100,"0*","REGTIME"))&($P($E($G(vobj(this,-100,"0*","REGTIME")),5,9999),$C(124))'=$P(vobj(this),$C(124),2))),($P(vobj(this),$C(124),2)="") D vRCrequiredErr("REGTIME")
 I ($D(vobj(this,-100,"0*","STATUS"))&($P($E($G(vobj(this,-100,"0*","STATUS")),5,9999),$C(124))'=$P(vobj(this),$C(124),14))),($P(vobj(this),$C(124),14)="") D vRCrequiredErr("STATUS")
 I ($D(vobj(this,-100,"0*","TLO"))&($P($E($G(vobj(this,-100,"0*","TLO")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))),($P(vobj(this),$C(124),4)="") D vRCrequiredErr("TLO")
 I ($D(vobj(this,-100,"0*","USRNAM"))&($P($E($G(vobj(this,-100,"0*","USRNAM")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))),($P(vobj(this),$C(124),5)="") D vRCrequiredErr("USRNAM")
 Q 
 ;
vRCrequiredErr(column) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("PROCESSJNL","MSG",1767,"PROCESSJNL."_column)
 I ER D throwError($get(RM))
 Q 
 ;
vRCvalidateDD(this,processMode) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 S X=vobj(this,-3) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("SYSTEMDAT",$$^MSG(742,"D"))
 I '(vobj(this,-4)=""),'(+vobj(this,-4)=vobj(this,-4))  S vobj(this,-4)=$$vRCtrimNumber(vobj(this,-4))
 S X=vobj(this,-4) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("PID",$$^MSG(742,"N"))
 I '(vobj(this,-5)=""),'(+vobj(this,-5)=vobj(this,-5))  S vobj(this,-5)=$$vRCtrimNumber(vobj(this,-5))
 S X=vobj(this,-5) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("JNLSEQ",$$^MSG(742,"N"))
 I ($L($P(vobj(this),$C(124),12))>12) D vRCvalidateDDerr("ACTION",$$^MSG(1076,12))
 I ($L($P(vobj(this),$C(124),11))>12) D vRCvalidateDDerr("EVENT",$$^MSG(1076,12))
 I ($L($P(vobj(this),$C(124),10))>12) D vRCvalidateDDerr("FUNC",$$^MSG(1076,12))
 S X=$P(vobj(this),$C(124),16) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("ISSDATE",$$^MSG(742,"D"))
 I '($P(vobj(this),$C(124),15)=""),'(+$P(vobj(this),$C(124),15)=$P(vobj(this),$C(124),15))  S $P(vobj(this),$C(124),15)=$$vRCtrimNumber($P(vobj(this),$C(124),15))
 S X=$P(vobj(this),$C(124),15) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("ISSPID",$$^MSG(742,"N"))
 S X=$P(vobj(this),$C(124),17) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("ISSTIME",$$^MSG(742,"C"))
 I ($L($P(vobj(this),$C(124),19))>40) D vRCvalidateDDerr("ISSTLO",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),18))>40) D vRCvalidateDDerr("ISSUSRNM",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),3))>12) D vRCvalidateDDerr("MODE",$$^MSG(1076,12))
 S X=$P(vobj(this),$C(124),20) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("PRCDATE",$$^MSG(742,"D"))
 S X=$P(vobj(this),$C(124),21) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("PRCTIME",$$^MSG(742,"C"))
 I ($L($P(vobj(this),$C(124),6))>10) D vRCvalidateDDerr("PRCTYP",$$^MSG(1076,10))
 I ($L($P(vobj(this),$C(124),13))>80) D vRCvalidateDDerr("QUALIF",$$^MSG(1076,80))
 S X=$P(vobj(this),$C(124),1) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("REGDATE",$$^MSG(742,"D"))
 S X=$P(vobj(this),$C(124),2) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("REGTIME",$$^MSG(742,"C"))
 I ($L($P(vobj(this),$C(124),14))>12) D vRCvalidateDDerr("STATUS",$$^MSG(1076,12))
 I ($L($P(vobj(this),$C(124),7))>10) D vRCvalidateDDerr("SUBTYP",$$^MSG(1076,10))
 I ($L($P(vobj(this),$C(124),4))>40) D vRCvalidateDDerr("TLO",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),8))>12) D vRCvalidateDDerr("USERID",$$^MSG(1076,12))
 I ($L($P(vobj(this),$C(124),9))>12) D vRCvalidateDDerr("USRCLS",$$^MSG(1076,12))
 I ($L($P(vobj(this),$C(124),5))>40) D vRCvalidateDDerr("USRNAM",$$^MSG(1076,40))
 Q 
 ;
vRCvalidateDD1(this) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($D(vobj(this,-100,"1*","SYSTEMDAT"))&($P($E($G(vobj(this,-100,"1*","SYSTEMDAT")),5,9999),$C(124))'=vobj(this,-3))) S X=vobj(this,-3) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("SYSTEMDAT",$$^MSG(742,"D"))
 I ($D(vobj(this,-100,"2*","PID"))&($P($E($G(vobj(this,-100,"2*","PID")),5,9999),$C(124))'=vobj(this,-4))),'(vobj(this,-4)=""),'(+vobj(this,-4)=vobj(this,-4))  S vobj(this,-4)=$$vRCtrimNumber(vobj(this,-4))
 I ($D(vobj(this,-100,"2*","PID"))&($P($E($G(vobj(this,-100,"2*","PID")),5,9999),$C(124))'=vobj(this,-4))) S X=vobj(this,-4) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("PID",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"3*","JNLSEQ"))&($P($E($G(vobj(this,-100,"3*","JNLSEQ")),5,9999),$C(124))'=vobj(this,-5))),'(vobj(this,-5)=""),'(+vobj(this,-5)=vobj(this,-5))  S vobj(this,-5)=$$vRCtrimNumber(vobj(this,-5))
 I ($D(vobj(this,-100,"3*","JNLSEQ"))&($P($E($G(vobj(this,-100,"3*","JNLSEQ")),5,9999),$C(124))'=vobj(this,-5))) S X=vobj(this,-5) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("JNLSEQ",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","ACTION"))&($P($E($G(vobj(this,-100,"0*","ACTION")),5,9999),$C(124))'=$P(vobj(this),$C(124),12))) I ($L($P(vobj(this),$C(124),12))>12) D vRCvalidateDDerr("ACTION",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","EVENT"))&($P($E($G(vobj(this,-100,"0*","EVENT")),5,9999),$C(124))'=$P(vobj(this),$C(124),11))) I ($L($P(vobj(this),$C(124),11))>12) D vRCvalidateDDerr("EVENT",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","FUNC"))&($P($E($G(vobj(this,-100,"0*","FUNC")),5,9999),$C(124))'=$P(vobj(this),$C(124),10))) I ($L($P(vobj(this),$C(124),10))>12) D vRCvalidateDDerr("FUNC",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","ISSDATE"))&($P($E($G(vobj(this,-100,"0*","ISSDATE")),5,9999),$C(124))'=$P(vobj(this),$C(124),16))) S X=$P(vobj(this),$C(124),16) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("ISSDATE",$$^MSG(742,"D"))
 I ($D(vobj(this,-100,"0*","ISSPID"))&($P($E($G(vobj(this,-100,"0*","ISSPID")),5,9999),$C(124))'=$P(vobj(this),$C(124),15))),'($P(vobj(this),$C(124),15)=""),'(+$P(vobj(this),$C(124),15)=$P(vobj(this),$C(124),15))  S $P(vobj(this),$C(124),15)=$$vRCtrimNumber($P(vobj(this),$C(124),15))
 I ($D(vobj(this,-100,"0*","ISSPID"))&($P($E($G(vobj(this,-100,"0*","ISSPID")),5,9999),$C(124))'=$P(vobj(this),$C(124),15))) S X=$P(vobj(this),$C(124),15) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("ISSPID",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","ISSTIME"))&($P($E($G(vobj(this,-100,"0*","ISSTIME")),5,9999),$C(124))'=$P(vobj(this),$C(124),17))) S X=$P(vobj(this),$C(124),17) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("ISSTIME",$$^MSG(742,"C"))
 I ($D(vobj(this,-100,"0*","ISSTLO"))&($P($E($G(vobj(this,-100,"0*","ISSTLO")),5,9999),$C(124))'=$P(vobj(this),$C(124),19))) I ($L($P(vobj(this),$C(124),19))>40) D vRCvalidateDDerr("ISSTLO",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","ISSUSRNM"))&($P($E($G(vobj(this,-100,"0*","ISSUSRNM")),5,9999),$C(124))'=$P(vobj(this),$C(124),18))) I ($L($P(vobj(this),$C(124),18))>40) D vRCvalidateDDerr("ISSUSRNM",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","MODE"))&($P($E($G(vobj(this,-100,"0*","MODE")),5,9999),$C(124))'=$P(vobj(this),$C(124),3))) I ($L($P(vobj(this),$C(124),3))>12) D vRCvalidateDDerr("MODE",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","PRCDATE"))&($P($E($G(vobj(this,-100,"0*","PRCDATE")),5,9999),$C(124))'=$P(vobj(this),$C(124),20))) S X=$P(vobj(this),$C(124),20) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("PRCDATE",$$^MSG(742,"D"))
 I ($D(vobj(this,-100,"0*","PRCTIME"))&($P($E($G(vobj(this,-100,"0*","PRCTIME")),5,9999),$C(124))'=$P(vobj(this),$C(124),21))) S X=$P(vobj(this),$C(124),21) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("PRCTIME",$$^MSG(742,"C"))
 I ($D(vobj(this,-100,"0*","PRCTYP"))&($P($E($G(vobj(this,-100,"0*","PRCTYP")),5,9999),$C(124))'=$P(vobj(this),$C(124),6))) I ($L($P(vobj(this),$C(124),6))>10) D vRCvalidateDDerr("PRCTYP",$$^MSG(1076,10))
 I ($D(vobj(this,-100,"0*","QUALIF"))&($P($E($G(vobj(this,-100,"0*","QUALIF")),5,9999),$C(124))'=$P(vobj(this),$C(124),13))) I ($L($P(vobj(this),$C(124),13))>80) D vRCvalidateDDerr("QUALIF",$$^MSG(1076,80))
 I ($D(vobj(this,-100,"0*","REGDATE"))&($P($E($G(vobj(this,-100,"0*","REGDATE")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))) S X=$P(vobj(this),$C(124),1) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("REGDATE",$$^MSG(742,"D"))
 I ($D(vobj(this,-100,"0*","REGTIME"))&($P($E($G(vobj(this,-100,"0*","REGTIME")),5,9999),$C(124))'=$P(vobj(this),$C(124),2))) S X=$P(vobj(this),$C(124),2) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("REGTIME",$$^MSG(742,"C"))
 I ($D(vobj(this,-100,"0*","STATUS"))&($P($E($G(vobj(this,-100,"0*","STATUS")),5,9999),$C(124))'=$P(vobj(this),$C(124),14))) I ($L($P(vobj(this),$C(124),14))>12) D vRCvalidateDDerr("STATUS",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","SUBTYP"))&($P($E($G(vobj(this,-100,"0*","SUBTYP")),5,9999),$C(124))'=$P(vobj(this),$C(124),7))) I ($L($P(vobj(this),$C(124),7))>10) D vRCvalidateDDerr("SUBTYP",$$^MSG(1076,10))
 I ($D(vobj(this,-100,"0*","TLO"))&($P($E($G(vobj(this,-100,"0*","TLO")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))) I ($L($P(vobj(this),$C(124),4))>40) D vRCvalidateDDerr("TLO",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","USERID"))&($P($E($G(vobj(this,-100,"0*","USERID")),5,9999),$C(124))'=$P(vobj(this),$C(124),8))) I ($L($P(vobj(this),$C(124),8))>12) D vRCvalidateDDerr("USERID",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","USRCLS"))&($P($E($G(vobj(this,-100,"0*","USRCLS")),5,9999),$C(124))'=$P(vobj(this),$C(124),9))) I ($L($P(vobj(this),$C(124),9))>12) D vRCvalidateDDerr("USRCLS",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","USRNAM"))&($P($E($G(vobj(this,-100,"0*","USRNAM")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))) I ($L($P(vobj(this),$C(124),5))>40) D vRCvalidateDDerr("USRNAM",$$^MSG(1076,40))
 Q 
 ;
vRCvalidateDDerr(column,errmsg) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("PROCESSJNL","MSG",979,"PROCESSJNL."_column_" "_errmsg)
 I ER D throwError($get(RM))
 Q 
 ;
vRCtrimNumber(str) ; 
 I ($E(str,1)="0") S str=$$vStrTrim(str,-1,"0") I (str="") S str="0"
 I (str["."),($E(str,$L(str))="0") S str=$$RTCHR^%ZFUNC(str,"0") I ($E(str,$L(str))=".") S str=$E(str,1,$L(str)-1) I (str="") S str="0"
 Q str
 ;
archive(archiveDir,archiveNum,archiveDate) ; 
 Q 0 ; Shell method
 ;
getArchiveFile(archiveTable,option,archiveKey) ; 
 Q "" ; Shell method
 ;
vRCkeyChanged(this,vRCparams,vRCaudit) ; 
 N vTp
 N newkeys N oldkeys N vRCauditIns
 N newKey1 S newKey1=vobj(this,-3)
 N oldKey1 S oldKey1=$S($D(vobj(this,-100,"1*","SYSTEMDAT")):$P($E(vobj(this,-100,"1*","SYSTEMDAT"),5,9999),$C(124)),1:vobj(this,-3))
 N newKey2 S newKey2=vobj(this,-4)
 N oldKey2 S oldKey2=$S($D(vobj(this,-100,"2*","PID")):$P($E(vobj(this,-100,"2*","PID"),5,9999),$C(124)),1:vobj(this,-4))
 N newKey3 S newKey3=vobj(this,-5)
 N oldKey3 S oldKey3=$S($D(vobj(this,-100,"3*","JNLSEQ")):$P($E(vobj(this,-100,"3*","JNLSEQ"),5,9999),$C(124)),1:vobj(this,-5))
  N V1,V2,V3 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5) I ($D(^PROCJNL(V1,V2,V3))#2) D throwError($$^MSG(2327))
 S newkeys=newKey1_","_newKey2_","_newKey3
 S oldkeys=oldKey1_","_oldKey2_","_oldKey3
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
  S vobj(this,-5)=oldKey3
 S vRCparams=$$setPar^UCUTILN(vRCparams,"NOINDEX")
 I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,1)
 D vRCmiscValidations(this,vRCparams,1)
 D vRCupdateDB(this,1,vRCparams,.vRCaudit,.vRCauditIns)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
  S vobj(this,-5)=newKey3
 N newrec S newrec=$$vReCp1(this)
 S vobj(newrec,-2)=0
 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordPROCESSJNL(newrec,$$initPar^UCUTILN($$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/"))) K vobj(newrec,-100) S vobj(newrec,-2)=1 TC:vTp  
 D
 .	N %O S %O=1
 .	N ER S ER=0
 .	N RM S RM=""
 .	;   #ACCEPT Date=10/24/2008; Pgm=RussellDS; CR=30801; Group=ACCESS
 .	D CASUPD^DBSEXECU("PROCESSJNL",oldkeys,newkeys)
 .	I ER D throwError($get(RM))
 .	Q 
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
  S vobj(this,-5)=oldKey3
 S vRCparams=$$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
 D vRCdelete(this,vRCparams,.vRCaudit,1)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
  S vobj(this,-5)=newKey3
 K vobj(+$G(newrec)) Q 
 ;
throwError(MSG) ; 
 S $ZE="0,"_$ZPOS_","_"%PSL-E-DBFILER,"_$translate(MSG,",","~"),$EC=",U1001,"
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrRep(object,p1,p2,p3,p4,qt) ; String.replace
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I p3<0 Q object
 I $L(p1)=1,$L(p2)<2,'p3,'p4,(qt="") Q $translate(object,p1,p2)
 ;
 N y S y=0
 F  S y=$$vStrFnd(object,p1,y,p4,qt) Q:y=0  D
 .	S object=$E(object,1,y-$L(p1)-1)_p2_$E(object,y,1048575)
 .	S y=y+$L(p2)-$L(p1)
 .	I p3 S p3=p3-1 I p3=0 S y=$L(object)+1
 .	Q 
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vStrTrim(object,p1,p2) ; String.trim
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 I p1'<0 S object=$$RTCHR^%ZFUNC(object,p2)
 I p1'>0 F  Q:$E(object,1)'=p2  S object=$E(object,2,1048575)
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vStrFnd(object,p1,p2,p3,qt) ; String.find
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I (p1="") Q $S(p2<1:1,1:+p2)
 I p3 S object=$ZCONVERT(object,"U") S p1=$ZCONVERT(p1,"U")
 S p2=$F(object,p1,p2)
 I '(qt=""),$L($E(object,1,p2-1),qt)#2=0 D
 .	F  S p2=$F(object,p1,p2) Q:p2=0!($L($E(object,1,p2-1),qt)#2) 
 .	Q 
 Q p2
 ;
vReCp1(v1) ; RecordPROCESSJNL.copy: PROCESSJNL
 ;
 Q $$copy^UCGMR(this)
