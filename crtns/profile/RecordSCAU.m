 ; 
 ; **** Routine compiled from DATA-QWIK Filer RecordSCAU ****
 ; 
 ; 02/24/2010 18:40 - pip
 ; 
 ;
 ; Record Class code for table SCAU
 ;
 ; Generated by PSLRecordBuilder on 02/24/2010 at 18:40 by
 ;
vcdmNew() ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordSCAU",vobj(vOid,-2)=0,vobj(vOid)=""
 S vobj(vOid,-3)=""
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0(v1,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordSCAU"
 S vobj(vOid)=$G(^SCAU(1,v1))
 I vobj(vOid)="",'($D(^SCAU(1,v1))#2)
 S vobj(vOid,-2)=1
 I $T K vobj(vOid) S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,SCAU",$EC=",U1001,"
 S vobj(vOid,-3)=v1
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord1(v1,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordSCAU"
 S vobj(vOid)=$G(^SCAU(1,v1))
 I vobj(vOid)="",'($D(^SCAU(1,v1))#2)
 S vobj(vOid,-2)='$T
 S vobj(vOid,-3)=v1
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0Opt(v1,vfromDbSet,v2out) ; 
 N scau
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S scau=$G(^SCAU(1,v1))
 I scau="",'($D(^SCAU(1,v1))#2)
 S v2out=1
 I $T S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,SCAU",$EC=",U1001,"
 ;*** End of code by-passed by compiler ***
 Q scau
 ;
vRCgetRecord1Opt(v1,vfromDbSet,v2out) ; 
 N scau
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S scau=$G(^SCAU(1,v1))
 I scau="",'($D(^SCAU(1,v1))#2)
 S v2out='$T
 ;*** End of code by-passed by compiler ***
 Q scau
 ;
vBypassSave(this) ; 
 D vSave(this,"/NOJOURNAL/NOTRIGAFT/NOTRIGBEF/NOVALDD/NOVALREQ/NOVALRI/NOVALST",0)
 Q 
 ;
vSave(this,vRCparams,vauditLogSeq) ; 
 N vRCaudit N vRCauditIns
 N %O S %O=$G(vobj(this,-2))
 I ($get(vRCparams)="") S vRCparams="/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/"
 I (%O=0) D
 .	D AUDIT^UCUTILN(this,.vRCauditIns,1,"|")
 .	D vRCsetDefaults(this)
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=1) D
 .	D AUDIT^UCUTILN(this,.vRCaudit,1,"|")
 .	I ($D(vobj(this,-100,"1*","UID"))&($P($E($G(vobj(this,-100,"1*","UID")),5,9999),$C(124))'=vobj(this,-3))) D vRCkeyChanged(this,vRCparams,.vRCaudit) Q 
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForUpdate(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD1(this)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=2) D
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,2)
 .	Q 
 E  I (%O=3) D
 .	  N V1 S V1=vobj(this,-3) Q:'($D(^SCAU(1,V1))#2) 
 .	D vRCdelete(this,vRCparams,.vRCaudit,0)
 .	Q 
 Q 
 ;
vcheckAccessRights() ; 
 Q ""
 ;
vinsertAccess(userclass) ; 
 Q 1
 ;
vinsertOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vupdateAccess(userclass) ; 
 Q 1
 ;
vupdateOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vdeleteAccess(userclass) ; 
 Q 1
 ;
vdeleteOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectAccess(userclass,restrict,from) ; 
 S (restrict,from)=""
 Q 1
 ;
vselectOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectOptmOK(userclass,scau,vkey1) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vgetLogging() ; 
 Q "0"
 ;
logUserclass(operation) ; 
 I (operation="INSERT") Q 0
 E  I (operation="UPDATE") Q 0
 E  I (operation="DELETE") Q 0
 E  I (operation="SELECT") Q 0
 Q 0
 ;
vlogSelect(statement,using) ; 
 Q 0
 ;
columnList() ; 
 N columns S columns=""
 S columns=columns_"%UCLS,%UFN,ACN,ALTUCLS,AUTOMENU,BATREJ,BRCD,BRROSC,BRRWSC,CURRENV,EADDR,EDITOR,EMULIM,LANG,LSGN,MARSEG,MARTY,MREASON,MRSTAT,NEWPWDREQ,"
 S columns=columns_"OACMAX,OACMIN,ODP,ODPRET,PEXPR,PSWD,PSWDAUT,PWDFAIL,REGROSC,REGRWSC,RETBALLIM,RETBRCD,RETCOLLIM,RETFEELIM,RTUID,SDRTY,SEGID,TFKDEF,TPM,TRNSRT,"
 S columns=columns_"UID,"
 Q $$vStrRep("%UCLS,%UFN,ACN,ALTUCLS,AUTOMENU,BATREJ,BRCD,BRROSC,BRRWSC,CURRENV,EADDR,EDITOR,EMULIM,LANG,LSGN,MARSEG,MARTY,MREASON,MRSTAT,NEWPWDREQ,OACMAX,OACMIN,ODP,ODPRET,PEXPR,PSWD,PSWDAUT,PWDFAIL,REGROSC,REGRWSC,RETBALLIM,RETBRCD,RETCOLLIM,RETFEELIM,RTUID,SDRTY,SEGID,TFKDEF,TPM,TRNSRT,UID",",",$char(9),0,0,"")
 ;
columnListBM() ; 
 Q ""
 ;
columnListCMP() ; 
 Q $$vStrRep("SREASON,STATUS",",",$char(9),0,0,"")
 ;
getColumnMap(map) ; 
 ;
 S map(-3)="UID:T:"
 S map(-1)="%UCLS:T:5;%UFN:T:1;ACN:N:14;ALTUCLS:T:13;AUTOMENU:L:2;BATREJ:N:17;BRCD:N:22;BRROSC:T:26;BRRWSC:T:25;CURRENV:N:29;EADDR:T:48;EDITOR:T:21;EMULIM:L:36;LANG:T:3;LSGN:D:8;MARSEG:N:37;MARTY:N:20;MREASON:N:4"
 S map(-1)=map(-1)_"5;MRSTAT:L:44;NEWPWDREQ:L:4;OACMAX:$:34;OACMIN:$:35;ODP:N:32;ODPRET:N:33;PEXPR:D:7;PSWD:T:6;PSWDAUT:T:39;PWDFAIL:N:43;REGROSC:T:24;REGRWSC:T:23;RETBALLIM:$:40;RETBRCD:L:46;RETCOLLIM:$:41;RETFEELIM:$:4"
 S map(-1)=map(-1)_"2;RTUID:T:19;SDRTY:L:31;SEGID:N:38;TFKDEF:T:27;TPM:L:18;TRNSRT:N:47"
 Q 
 ;
vlegacy(processMode,params) ; 
 N vTp
 I (processMode=2) D
 .	N scau S scau=$$vRCgetRecord0^RecordSCAU(UID,0)
 .	S vobj(scau,-2)=2
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordSCAU(scau,$$initPar^UCUTILN(params)) K vobj(scau,-100) S vobj(scau,-2)=1 TC:vTp  
 .	K vobj(+$G(scau)) Q 
 Q 
 ;
vhasLiterals() ; 
 Q 0
 ;
vRCmiscValidations(this,vRCparams,processMode) ; 
 I (("/"_vRCparams_"/")["/VALST/")  N V1 S V1=vobj(this,-3) I '(''($D(^SCAU(1,V1))#2)=''processMode) D
 .	N errmsg
 .	I (+processMode'=+0) S errmsg=$$^MSG(7932)
 .	E  S errmsg=$$^MSG(2327)
 .	D throwError(errmsg)
 .	Q 
 Q 
 ;
vRCupdateDB(this,processMode,vRCparams,vRCaudit,vRCauditIns) ; 
 I '(("/"_vRCparams_"/")["/NOUPDATE/") D
 .	I '(("/"_vRCparams_"/")["/NOLOG/") D
 ..		I (processMode=1) D ^DBSLOGIT(this,1,.vRCaudit) Q 
 ..		D ^DBSLOGIT(this,0,.vRCauditIns)
 ..		Q 
 .	;   #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(vobj(this)) S ^SCAU(1,vobj(this,-3))=vobj(this)
 .	;*** End of code by-passed by compiler ***
 .	Q 
 Q 
 ;
vRCdelete(this,vRCparams,vRCaudit,isKeyChange) ; 
 I '(("/"_vRCparams_"/")["/NOLOG/") D ^DBSLOGIT(this,3)
 ;  #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
 ;*** Start of code by-passed by compiler
 ZWI ^SCAU(1,vobj(this,-3))
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCsetDefaults(this) ; 
 I ($P(vobj(this),$C(124),2)="")  S $P(vobj(this),$C(124),2)=0
 I ($P(vobj(this),$C(124),36)="")  S $P(vobj(this),$C(124),36)=0
 I ($P(vobj(this),$C(124),44)="")  S $P(vobj(this),$C(124),44)=0
 I ($P(vobj(this),$C(124),4)="")  S $P(vobj(this),$C(124),4)=0
 I ($P(vobj(this),$C(124),46)="")  S $P(vobj(this),$C(124),46)=0
 I ($P(vobj(this),$C(124),31)="")  S $P(vobj(this),$C(124),31)=0
 I ($P(vobj(this),$C(124),18)="")  S $P(vobj(this),$C(124),18)=0
 Q 
 ;
vRCchkReqForInsert(this) ; 
 I ($P(vobj(this),$C(124),2)="") D vRCrequiredErr("AUTOMENU")
 I ($P(vobj(this),$C(124),36)="") D vRCrequiredErr("EMULIM")
 I ($P(vobj(this),$C(124),44)="") D vRCrequiredErr("MRSTAT")
 I ($P(vobj(this),$C(124),4)="") D vRCrequiredErr("NEWPWDREQ")
 I ($P(vobj(this),$C(124),46)="") D vRCrequiredErr("RETBRCD")
 I ($P(vobj(this),$C(124),31)="") D vRCrequiredErr("SDRTY")
 I ($P(vobj(this),$C(124),18)="") D vRCrequiredErr("TPM")
 I (vobj(this,-3)="") D vRCrequiredErr("UID")
 Q 
 ;
vRCchkReqForUpdate(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("UID")
 I ($D(vobj(this,-100,"0*","AUTOMENU"))&($P($E($G(vobj(this,-100,"0*","AUTOMENU")),5,9999),$C(124))'=$P(vobj(this),$C(124),2))),($P(vobj(this),$C(124),2)="") D vRCrequiredErr("AUTOMENU")
 I ($D(vobj(this,-100,"0*","EMULIM"))&($P($E($G(vobj(this,-100,"0*","EMULIM")),5,9999),$C(124))'=$P(vobj(this),$C(124),36))),($P(vobj(this),$C(124),36)="") D vRCrequiredErr("EMULIM")
 I ($D(vobj(this,-100,"0*","MRSTAT"))&($P($E($G(vobj(this,-100,"0*","MRSTAT")),5,9999),$C(124))'=$P(vobj(this),$C(124),44))),($P(vobj(this),$C(124),44)="") D vRCrequiredErr("MRSTAT")
 I ($D(vobj(this,-100,"0*","NEWPWDREQ"))&($P($E($G(vobj(this,-100,"0*","NEWPWDREQ")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))),($P(vobj(this),$C(124),4)="") D vRCrequiredErr("NEWPWDREQ")
 I ($D(vobj(this,-100,"0*","RETBRCD"))&($P($E($G(vobj(this,-100,"0*","RETBRCD")),5,9999),$C(124))'=$P(vobj(this),$C(124),46))),($P(vobj(this),$C(124),46)="") D vRCrequiredErr("RETBRCD")
 I ($D(vobj(this,-100,"0*","SDRTY"))&($P($E($G(vobj(this,-100,"0*","SDRTY")),5,9999),$C(124))'=$P(vobj(this),$C(124),31))),($P(vobj(this),$C(124),31)="") D vRCrequiredErr("SDRTY")
 I ($D(vobj(this,-100,"0*","TPM"))&($P($E($G(vobj(this,-100,"0*","TPM")),5,9999),$C(124))'=$P(vobj(this),$C(124),18))),($P(vobj(this),$C(124),18)="") D vRCrequiredErr("TPM")
 Q 
 ;
vRCrequiredErr(column) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("SCAU","MSG",1767,"SCAU."_column)
 I ER D throwError($get(RM))
 Q 
 ;
vRCvalidateDD(this,processMode) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($L(vobj(this,-3))>20) D vRCvalidateDDerr("UID",$$^MSG(1076,20))
 S X=$P(vobj(this),$C(124),5) I '(X=""),'($D(^SCAU(0,X))#2) D vRCvalidateDDerr("%UCLS",$$^MSG(1485,X))
 I ($L($P(vobj(this),$C(124),1))>40) D vRCvalidateDDerr("%UFN",$$^MSG(1076,40))
 I '($P(vobj(this),$C(124),14)=""),'(+$P(vobj(this),$C(124),14)=$P(vobj(this),$C(124),14))  S $P(vobj(this),$C(124),14)=$$vRCtrimNumber($P(vobj(this),$C(124),14))
 S X=$P(vobj(this),$C(124),14) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("ACN",$$^MSG(742,"N"))
 I ($L($P(vobj(this),$C(124),13))>100) D vRCvalidateDDerr("ALTUCLS",$$^MSG(1076,100))
 I '(($P(vobj(this),$C(124),2)=1)!($P(vobj(this),$C(124),2)=0)) D vRCvalidateDDerr("AUTOMENU",$$^MSG(742,"L"))
 S X=$P(vobj(this),$C(124),17) I '(X=""),'$$vCaEx1() D vRCvalidateDDerr("BATREJ",$$^MSG(1485,X))
 S X=$P(vobj(this),$C(124),22) I '(X=""),'$$vCaEx2() D vRCvalidateDDerr("BRCD",$$^MSG(1485,X))
 S X=$P(vobj(this),$C(124),26) I '(X=""),'$$vCaEx3() D vRCvalidateDDerr("BRROSC",$$^MSG(1485,X))
 S X=$P(vobj(this),$C(124),25) I '(X=""),'$$vCaEx4() D vRCvalidateDDerr("BRRWSC",$$^MSG(1485,X))
 S X=$P(vobj(this),$C(124),29) I '(X=""),'$$vCaEx5() D vRCvalidateDDerr("CURRENV",$$^MSG(1485,X))
 I ($L($P(vobj(this),$C(124),48))>55) D vRCvalidateDDerr("EADDR",$$^MSG(1076,55))
 S X=$P(vobj(this),$C(124),21) I '(X=""),'($D(^DBCTL("SYS","EDITOR",X))#2) D vRCvalidateDDerr("EDITOR",$$^MSG(1485,X))
 I '(($P(vobj(this),$C(124),36)=1)!($P(vobj(this),$C(124),36)=0)) D vRCvalidateDDerr("EMULIM",$$^MSG(742,"L"))
 S X=$P(vobj(this),$C(124),3) I '(X=""),'$$vCaEx6() D vRCvalidateDDerr("LANG",$$^MSG(1485,X))
 S X=$P(vobj(this),$C(124),8) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("LSGN",$$^MSG(742,"D"))
 S X=$P(vobj(this),$C(124),37) I '(X=""),'$$vCaEx7() D vRCvalidateDDerr("MARSEG",$$^MSG(1485,X))
 I '($P(vobj(this),$C(124),20)=""),'(+$P(vobj(this),$C(124),20)=$P(vobj(this),$C(124),20))  S $P(vobj(this),$C(124),20)=$$vRCtrimNumber($P(vobj(this),$C(124),20))
 S X=$P(vobj(this),$C(124),20) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("MARTY",$$^MSG(742,"N"))
 S X=$P(vobj(this),$C(124),45) I '(X=""),'$$vCaEx8() D vRCvalidateDDerr("MREASON",$$^MSG(1485,X))
 I '(($P(vobj(this),$C(124),44)=1)!($P(vobj(this),$C(124),44)=0)) D vRCvalidateDDerr("MRSTAT",$$^MSG(742,"L"))
 I '(($P(vobj(this),$C(124),4)=1)!($P(vobj(this),$C(124),4)=0)) D vRCvalidateDDerr("NEWPWDREQ",$$^MSG(742,"L"))
 I '($P(vobj(this),$C(124),34)=""),'(+$P(vobj(this),$C(124),34)=$P(vobj(this),$C(124),34))  S $P(vobj(this),$C(124),34)=$$vRCtrimNumber($P(vobj(this),$C(124),34))
 S X=$P(vobj(this),$C(124),34) I '(X="") S errmsg=$$VAL^DBSVER("$",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("OACMAX",$$^MSG(979,"SCAU.OACMAX"_" "_errmsg))
 I '($P(vobj(this),$C(124),35)=""),'(+$P(vobj(this),$C(124),35)=$P(vobj(this),$C(124),35))  S $P(vobj(this),$C(124),35)=$$vRCtrimNumber($P(vobj(this),$C(124),35))
 S X=$P(vobj(this),$C(124),35) I '(X="") S errmsg=$$VAL^DBSVER("$",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("OACMIN",$$^MSG(979,"SCAU.OACMIN"_" "_errmsg))
 S X=$P(vobj(this),$C(124),32) I '(X=""),'$$vCaEx9() D vRCvalidateDDerr("ODP",$$^MSG(1485,X))
 I '($P(vobj(this),$C(124),33)=""),'(+$P(vobj(this),$C(124),33)=$P(vobj(this),$C(124),33))  S $P(vobj(this),$C(124),33)=$$vRCtrimNumber($P(vobj(this),$C(124),33))
 S X=$P(vobj(this),$C(124),33) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("ODPRET",$$^MSG(742,"N"))
 S X=$P(vobj(this),$C(124),7) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("PEXPR",$$^MSG(742,"D"))
 I ($L($P(vobj(this),$C(124),6))>12) D vRCvalidateDDerr("PSWD",$$^MSG(1076,12))
 I ($L($P(vobj(this),$C(124),39))>32) D vRCvalidateDDerr("PSWDAUT",$$^MSG(1076,32))
 I '($P(vobj(this),$C(124),43)=""),'(+$P(vobj(this),$C(124),43)=$P(vobj(this),$C(124),43))  S $P(vobj(this),$C(124),43)=$$vRCtrimNumber($P(vobj(this),$C(124),43))
 S X=$P(vobj(this),$C(124),43) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("PWDFAIL",$$^MSG(742,"N"))
 S X=$P(vobj(this),$C(124),24) I '(X=""),'$$vCaEx10() D vRCvalidateDDerr("REGROSC",$$^MSG(1485,X))
 S X=$P(vobj(this),$C(124),23) I '(X=""),'$$vCaEx11() D vRCvalidateDDerr("REGRWSC",$$^MSG(1485,X))
 I '($P(vobj(this),$C(124),40)=""),'(+$P(vobj(this),$C(124),40)=$P(vobj(this),$C(124),40))  S $P(vobj(this),$C(124),40)=$$vRCtrimNumber($P(vobj(this),$C(124),40))
 S X=$P(vobj(this),$C(124),40) I '(X="") S errmsg=$$VAL^DBSVER("$",18,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("RETBALLIM",$$^MSG(979,"SCAU.RETBALLIM"_" "_errmsg))
 I '(($P(vobj(this),$C(124),46)=1)!($P(vobj(this),$C(124),46)=0)) D vRCvalidateDDerr("RETBRCD",$$^MSG(742,"L"))
 I '($P(vobj(this),$C(124),41)=""),'(+$P(vobj(this),$C(124),41)=$P(vobj(this),$C(124),41))  S $P(vobj(this),$C(124),41)=$$vRCtrimNumber($P(vobj(this),$C(124),41))
 S X=$P(vobj(this),$C(124),41) I '(X="") S errmsg=$$VAL^DBSVER("$",18,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("RETCOLLIM",$$^MSG(979,"SCAU.RETCOLLIM"_" "_errmsg))
 I '($P(vobj(this),$C(124),42)=""),'(+$P(vobj(this),$C(124),42)=$P(vobj(this),$C(124),42))  S $P(vobj(this),$C(124),42)=$$vRCtrimNumber($P(vobj(this),$C(124),42))
 S X=$P(vobj(this),$C(124),42) I '(X="") S errmsg=$$VAL^DBSVER("$",18,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("RETFEELIM",$$^MSG(979,"SCAU.RETFEELIM"_" "_errmsg))
 I ($L($P(vobj(this),$C(124),19))>20) D vRCvalidateDDerr("RTUID",$$^MSG(1076,20))
 I '(($P(vobj(this),$C(124),31)=1)!($P(vobj(this),$C(124),31)=0)) D vRCvalidateDDerr("SDRTY",$$^MSG(742,"L"))
 I '($P(vobj(this),$C(124),38)=""),'(+$P(vobj(this),$C(124),38)=$P(vobj(this),$C(124),38))  S $P(vobj(this),$C(124),38)=$$vRCtrimNumber($P(vobj(this),$C(124),38))
 S X=$P(vobj(this),$C(124),38) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("SEGID",$$^MSG(742,"N"))
 I ($L($P(vobj(this),$C(124),27))>12) D vRCvalidateDDerr("TFKDEF",$$^MSG(1076,12))
 I '(($P(vobj(this),$C(124),18)=1)!($P(vobj(this),$C(124),18)=0)) D vRCvalidateDDerr("TPM",$$^MSG(742,"L"))
 S X=$P(vobj(this),$C(124),47) I '(X=""),'$$vCaEx12() D vRCvalidateDDerr("TRNSRT",$$^MSG(1485,X))
 Q 
 ;
vRCvalidateDD1(this) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($D(vobj(this,-100,"1*","UID"))&($P($E($G(vobj(this,-100,"1*","UID")),5,9999),$C(124))'=vobj(this,-3))) I ($L(vobj(this,-3))>20) D vRCvalidateDDerr("UID",$$^MSG(1076,20))
 I ($D(vobj(this,-100,"0*","%UCLS"))&($P($E($G(vobj(this,-100,"0*","%UCLS")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))) S X=$P(vobj(this),$C(124),5) I '(X=""),'($D(^SCAU(0,X))#2) D vRCvalidateDDerr("%UCLS",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","%UFN"))&($P($E($G(vobj(this,-100,"0*","%UFN")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))) I ($L($P(vobj(this),$C(124),1))>40) D vRCvalidateDDerr("%UFN",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","ACN"))&($P($E($G(vobj(this,-100,"0*","ACN")),5,9999),$C(124))'=$P(vobj(this),$C(124),14))),'($P(vobj(this),$C(124),14)=""),'(+$P(vobj(this),$C(124),14)=$P(vobj(this),$C(124),14))  S $P(vobj(this),$C(124),14)=$$vRCtrimNumber($P(vobj(this),$C(124),14))
 I ($D(vobj(this,-100,"0*","ACN"))&($P($E($G(vobj(this,-100,"0*","ACN")),5,9999),$C(124))'=$P(vobj(this),$C(124),14))) S X=$P(vobj(this),$C(124),14) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("ACN",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","ALTUCLS"))&($P($E($G(vobj(this,-100,"0*","ALTUCLS")),5,9999),$C(124))'=$P(vobj(this),$C(124),13))) I ($L($P(vobj(this),$C(124),13))>100) D vRCvalidateDDerr("ALTUCLS",$$^MSG(1076,100))
 I ($D(vobj(this,-100,"0*","AUTOMENU"))&($P($E($G(vobj(this,-100,"0*","AUTOMENU")),5,9999),$C(124))'=$P(vobj(this),$C(124),2))) I '(($P(vobj(this),$C(124),2)=1)!($P(vobj(this),$C(124),2)=0)) D vRCvalidateDDerr("AUTOMENU",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","BATREJ"))&($P($E($G(vobj(this,-100,"0*","BATREJ")),5,9999),$C(124))'=$P(vobj(this),$C(124),17))) S X=$P(vobj(this),$C(124),17) I '(X=""),'$$vCaEx13() D vRCvalidateDDerr("BATREJ",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","BRCD"))&($P($E($G(vobj(this,-100,"0*","BRCD")),5,9999),$C(124))'=$P(vobj(this),$C(124),22))) S X=$P(vobj(this),$C(124),22) I '(X=""),'$$vCaEx14() D vRCvalidateDDerr("BRCD",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","BRROSC"))&($P($E($G(vobj(this,-100,"0*","BRROSC")),5,9999),$C(124))'=$P(vobj(this),$C(124),26))) S X=$P(vobj(this),$C(124),26) I '(X=""),'$$vCaEx15() D vRCvalidateDDerr("BRROSC",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","BRRWSC"))&($P($E($G(vobj(this,-100,"0*","BRRWSC")),5,9999),$C(124))'=$P(vobj(this),$C(124),25))) S X=$P(vobj(this),$C(124),25) I '(X=""),'$$vCaEx16() D vRCvalidateDDerr("BRRWSC",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","CURRENV"))&($P($E($G(vobj(this,-100,"0*","CURRENV")),5,9999),$C(124))'=$P(vobj(this),$C(124),29))) S X=$P(vobj(this),$C(124),29) I '(X=""),'$$vCaEx17() D vRCvalidateDDerr("CURRENV",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","EADDR"))&($P($E($G(vobj(this,-100,"0*","EADDR")),5,9999),$C(124))'=$P(vobj(this),$C(124),48))) I ($L($P(vobj(this),$C(124),48))>55) D vRCvalidateDDerr("EADDR",$$^MSG(1076,55))
 I ($D(vobj(this,-100,"0*","EDITOR"))&($P($E($G(vobj(this,-100,"0*","EDITOR")),5,9999),$C(124))'=$P(vobj(this),$C(124),21))) S X=$P(vobj(this),$C(124),21) I '(X=""),'($D(^DBCTL("SYS","EDITOR",X))#2) D vRCvalidateDDerr("EDITOR",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","EMULIM"))&($P($E($G(vobj(this,-100,"0*","EMULIM")),5,9999),$C(124))'=$P(vobj(this),$C(124),36))) I '(($P(vobj(this),$C(124),36)=1)!($P(vobj(this),$C(124),36)=0)) D vRCvalidateDDerr("EMULIM",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","LANG"))&($P($E($G(vobj(this,-100,"0*","LANG")),5,9999),$C(124))'=$P(vobj(this),$C(124),3))) S X=$P(vobj(this),$C(124),3) I '(X=""),'$$vCaEx18() D vRCvalidateDDerr("LANG",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","LSGN"))&($P($E($G(vobj(this,-100,"0*","LSGN")),5,9999),$C(124))'=$P(vobj(this),$C(124),8))) S X=$P(vobj(this),$C(124),8) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("LSGN",$$^MSG(742,"D"))
 I ($D(vobj(this,-100,"0*","MARSEG"))&($P($E($G(vobj(this,-100,"0*","MARSEG")),5,9999),$C(124))'=$P(vobj(this),$C(124),37))) S X=$P(vobj(this),$C(124),37) I '(X=""),'$$vCaEx19() D vRCvalidateDDerr("MARSEG",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","MARTY"))&($P($E($G(vobj(this,-100,"0*","MARTY")),5,9999),$C(124))'=$P(vobj(this),$C(124),20))),'($P(vobj(this),$C(124),20)=""),'(+$P(vobj(this),$C(124),20)=$P(vobj(this),$C(124),20))  S $P(vobj(this),$C(124),20)=$$vRCtrimNumber($P(vobj(this),$C(124),20))
 I ($D(vobj(this,-100,"0*","MARTY"))&($P($E($G(vobj(this,-100,"0*","MARTY")),5,9999),$C(124))'=$P(vobj(this),$C(124),20))) S X=$P(vobj(this),$C(124),20) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("MARTY",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","MREASON"))&($P($E($G(vobj(this,-100,"0*","MREASON")),5,9999),$C(124))'=$P(vobj(this),$C(124),45))) S X=$P(vobj(this),$C(124),45) I '(X=""),'$$vCaEx20() D vRCvalidateDDerr("MREASON",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","MRSTAT"))&($P($E($G(vobj(this,-100,"0*","MRSTAT")),5,9999),$C(124))'=$P(vobj(this),$C(124),44))) I '(($P(vobj(this),$C(124),44)=1)!($P(vobj(this),$C(124),44)=0)) D vRCvalidateDDerr("MRSTAT",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","NEWPWDREQ"))&($P($E($G(vobj(this,-100,"0*","NEWPWDREQ")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))) I '(($P(vobj(this),$C(124),4)=1)!($P(vobj(this),$C(124),4)=0)) D vRCvalidateDDerr("NEWPWDREQ",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","OACMAX"))&($P($E($G(vobj(this,-100,"0*","OACMAX")),5,9999),$C(124))'=$P(vobj(this),$C(124),34))),'($P(vobj(this),$C(124),34)=""),'(+$P(vobj(this),$C(124),34)=$P(vobj(this),$C(124),34))  S $P(vobj(this),$C(124),34)=$$vRCtrimNumber($P(vobj(this),$C(124),34))
 I ($D(vobj(this,-100,"0*","OACMAX"))&($P($E($G(vobj(this,-100,"0*","OACMAX")),5,9999),$C(124))'=$P(vobj(this),$C(124),34))) S X=$P(vobj(this),$C(124),34) I '(X="") S errmsg=$$VAL^DBSVER("$",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("OACMAX",$$^MSG(979,"SCAU.OACMAX"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","OACMIN"))&($P($E($G(vobj(this,-100,"0*","OACMIN")),5,9999),$C(124))'=$P(vobj(this),$C(124),35))),'($P(vobj(this),$C(124),35)=""),'(+$P(vobj(this),$C(124),35)=$P(vobj(this),$C(124),35))  S $P(vobj(this),$C(124),35)=$$vRCtrimNumber($P(vobj(this),$C(124),35))
 I ($D(vobj(this,-100,"0*","OACMIN"))&($P($E($G(vobj(this,-100,"0*","OACMIN")),5,9999),$C(124))'=$P(vobj(this),$C(124),35))) S X=$P(vobj(this),$C(124),35) I '(X="") S errmsg=$$VAL^DBSVER("$",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("OACMIN",$$^MSG(979,"SCAU.OACMIN"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","ODP"))&($P($E($G(vobj(this,-100,"0*","ODP")),5,9999),$C(124))'=$P(vobj(this),$C(124),32))) S X=$P(vobj(this),$C(124),32) I '(X=""),'$$vCaEx21() D vRCvalidateDDerr("ODP",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","ODPRET"))&($P($E($G(vobj(this,-100,"0*","ODPRET")),5,9999),$C(124))'=$P(vobj(this),$C(124),33))),'($P(vobj(this),$C(124),33)=""),'(+$P(vobj(this),$C(124),33)=$P(vobj(this),$C(124),33))  S $P(vobj(this),$C(124),33)=$$vRCtrimNumber($P(vobj(this),$C(124),33))
 I ($D(vobj(this,-100,"0*","ODPRET"))&($P($E($G(vobj(this,-100,"0*","ODPRET")),5,9999),$C(124))'=$P(vobj(this),$C(124),33))) S X=$P(vobj(this),$C(124),33) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("ODPRET",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","PEXPR"))&($P($E($G(vobj(this,-100,"0*","PEXPR")),5,9999),$C(124))'=$P(vobj(this),$C(124),7))) S X=$P(vobj(this),$C(124),7) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("PEXPR",$$^MSG(742,"D"))
 I ($D(vobj(this,-100,"0*","PSWD"))&($P($E($G(vobj(this,-100,"0*","PSWD")),5,9999),$C(124))'=$P(vobj(this),$C(124),6))) I ($L($P(vobj(this),$C(124),6))>12) D vRCvalidateDDerr("PSWD",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","PSWDAUT"))&($P($E($G(vobj(this,-100,"0*","PSWDAUT")),5,9999),$C(124))'=$P(vobj(this),$C(124),39))) I ($L($P(vobj(this),$C(124),39))>32) D vRCvalidateDDerr("PSWDAUT",$$^MSG(1076,32))
 I ($D(vobj(this,-100,"0*","PWDFAIL"))&($P($E($G(vobj(this,-100,"0*","PWDFAIL")),5,9999),$C(124))'=$P(vobj(this),$C(124),43))),'($P(vobj(this),$C(124),43)=""),'(+$P(vobj(this),$C(124),43)=$P(vobj(this),$C(124),43))  S $P(vobj(this),$C(124),43)=$$vRCtrimNumber($P(vobj(this),$C(124),43))
 I ($D(vobj(this,-100,"0*","PWDFAIL"))&($P($E($G(vobj(this,-100,"0*","PWDFAIL")),5,9999),$C(124))'=$P(vobj(this),$C(124),43))) S X=$P(vobj(this),$C(124),43) I '(X=""),(X'?1.2N),(X'?1"-"1.1N) D vRCvalidateDDerr("PWDFAIL",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","REGROSC"))&($P($E($G(vobj(this,-100,"0*","REGROSC")),5,9999),$C(124))'=$P(vobj(this),$C(124),24))) S X=$P(vobj(this),$C(124),24) I '(X=""),'$$vCaEx22() D vRCvalidateDDerr("REGROSC",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","REGRWSC"))&($P($E($G(vobj(this,-100,"0*","REGRWSC")),5,9999),$C(124))'=$P(vobj(this),$C(124),23))) S X=$P(vobj(this),$C(124),23) I '(X=""),'$$vCaEx23() D vRCvalidateDDerr("REGRWSC",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","RETBALLIM"))&($P($E($G(vobj(this,-100,"0*","RETBALLIM")),5,9999),$C(124))'=$P(vobj(this),$C(124),40))),'($P(vobj(this),$C(124),40)=""),'(+$P(vobj(this),$C(124),40)=$P(vobj(this),$C(124),40))  S $P(vobj(this),$C(124),40)=$$vRCtrimNumber($P(vobj(this),$C(124),40))
 I ($D(vobj(this,-100,"0*","RETBALLIM"))&($P($E($G(vobj(this,-100,"0*","RETBALLIM")),5,9999),$C(124))'=$P(vobj(this),$C(124),40))) S X=$P(vobj(this),$C(124),40) I '(X="") S errmsg=$$VAL^DBSVER("$",18,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("RETBALLIM",$$^MSG(979,"SCAU.RETBALLIM"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","RETBRCD"))&($P($E($G(vobj(this,-100,"0*","RETBRCD")),5,9999),$C(124))'=$P(vobj(this),$C(124),46))) I '(($P(vobj(this),$C(124),46)=1)!($P(vobj(this),$C(124),46)=0)) D vRCvalidateDDerr("RETBRCD",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","RETCOLLIM"))&($P($E($G(vobj(this,-100,"0*","RETCOLLIM")),5,9999),$C(124))'=$P(vobj(this),$C(124),41))),'($P(vobj(this),$C(124),41)=""),'(+$P(vobj(this),$C(124),41)=$P(vobj(this),$C(124),41))  S $P(vobj(this),$C(124),41)=$$vRCtrimNumber($P(vobj(this),$C(124),41))
 I ($D(vobj(this,-100,"0*","RETCOLLIM"))&($P($E($G(vobj(this,-100,"0*","RETCOLLIM")),5,9999),$C(124))'=$P(vobj(this),$C(124),41))) S X=$P(vobj(this),$C(124),41) I '(X="") S errmsg=$$VAL^DBSVER("$",18,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("RETCOLLIM",$$^MSG(979,"SCAU.RETCOLLIM"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","RETFEELIM"))&($P($E($G(vobj(this,-100,"0*","RETFEELIM")),5,9999),$C(124))'=$P(vobj(this),$C(124),42))),'($P(vobj(this),$C(124),42)=""),'(+$P(vobj(this),$C(124),42)=$P(vobj(this),$C(124),42))  S $P(vobj(this),$C(124),42)=$$vRCtrimNumber($P(vobj(this),$C(124),42))
 I ($D(vobj(this,-100,"0*","RETFEELIM"))&($P($E($G(vobj(this,-100,"0*","RETFEELIM")),5,9999),$C(124))'=$P(vobj(this),$C(124),42))) S X=$P(vobj(this),$C(124),42) I '(X="") S errmsg=$$VAL^DBSVER("$",18,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("RETFEELIM",$$^MSG(979,"SCAU.RETFEELIM"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","RTUID"))&($P($E($G(vobj(this,-100,"0*","RTUID")),5,9999),$C(124))'=$P(vobj(this),$C(124),19))) I ($L($P(vobj(this),$C(124),19))>20) D vRCvalidateDDerr("RTUID",$$^MSG(1076,20))
 I ($D(vobj(this,-100,"0*","SDRTY"))&($P($E($G(vobj(this,-100,"0*","SDRTY")),5,9999),$C(124))'=$P(vobj(this),$C(124),31))) I '(($P(vobj(this),$C(124),31)=1)!($P(vobj(this),$C(124),31)=0)) D vRCvalidateDDerr("SDRTY",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","SEGID"))&($P($E($G(vobj(this,-100,"0*","SEGID")),5,9999),$C(124))'=$P(vobj(this),$C(124),38))),'($P(vobj(this),$C(124),38)=""),'(+$P(vobj(this),$C(124),38)=$P(vobj(this),$C(124),38))  S $P(vobj(this),$C(124),38)=$$vRCtrimNumber($P(vobj(this),$C(124),38))
 I ($D(vobj(this,-100,"0*","SEGID"))&($P($E($G(vobj(this,-100,"0*","SEGID")),5,9999),$C(124))'=$P(vobj(this),$C(124),38))) S X=$P(vobj(this),$C(124),38) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("SEGID",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","TFKDEF"))&($P($E($G(vobj(this,-100,"0*","TFKDEF")),5,9999),$C(124))'=$P(vobj(this),$C(124),27))) I ($L($P(vobj(this),$C(124),27))>12) D vRCvalidateDDerr("TFKDEF",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","TPM"))&($P($E($G(vobj(this,-100,"0*","TPM")),5,9999),$C(124))'=$P(vobj(this),$C(124),18))) I '(($P(vobj(this),$C(124),18)=1)!($P(vobj(this),$C(124),18)=0)) D vRCvalidateDDerr("TPM",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","TRNSRT"))&($P($E($G(vobj(this,-100,"0*","TRNSRT")),5,9999),$C(124))'=$P(vobj(this),$C(124),47))) S X=$P(vobj(this),$C(124),47) I '(X=""),'$$vCaEx24() D vRCvalidateDDerr("TRNSRT",$$^MSG(1485,X))
 Q 
 ;
vRCvalidateDDerr(column,errmsg) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("SCAU","MSG",979,"SCAU."_column_" "_errmsg)
 I ER D throwError($get(RM))
 Q 
 ;
vRCtrimNumber(str) ; 
 I ($E(str,1)="0") S str=$$vStrTrim(str,-1,"0") I (str="") S str="0"
 I (str["."),($E(str,$L(str))="0") S str=$$RTCHR^%ZFUNC(str,"0") I ($E(str,$L(str))=".") S str=$E(str,1,$L(str)-1) I (str="") S str="0"
 Q str
 ;
vRCkeyChanged(this,vRCparams,vRCaudit) ; 
 N vTp
 N newkeys N oldkeys N vRCauditIns
 N newKey1 S newKey1=vobj(this,-3)
 N oldKey1 S oldKey1=$S($D(vobj(this,-100,"1*","UID")):$P($E(vobj(this,-100,"1*","UID"),5,9999),$C(124)),1:vobj(this,-3))
  N V1 S V1=vobj(this,-3) I ($D(^SCAU(1,V1))#2) D throwError($$^MSG(2327))
 S newkeys=newKey1
 S oldkeys=oldKey1
  S vobj(this,-3)=oldKey1
 S vRCparams=$$setPar^UCUTILN(vRCparams,"NOINDEX")
 I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,1)
 D vRCmiscValidations(this,vRCparams,1)
 D vRCupdateDB(this,1,vRCparams,.vRCaudit,.vRCauditIns)
  S vobj(this,-3)=newKey1
 N newrec S newrec=$$vReCp1(this)
 S vobj(newrec,-2)=0
 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordSCAU(newrec,$$initPar^UCUTILN($$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/"))) K vobj(newrec,-100) S vobj(newrec,-2)=1 TC:vTp  
 D
 .	N %O S %O=1
 .	N ER S ER=0
 .	N RM S RM=""
 .	;   #ACCEPT Date=10/24/2008; Pgm=RussellDS; CR=30801; Group=ACCESS
 .	D CASUPD^DBSEXECU("SCAU",oldkeys,newkeys)
 .	I ER D throwError($get(RM))
 .	Q 
  S vobj(this,-3)=oldKey1
 S vRCparams=$$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
 D vRCdelete(this,vRCparams,.vRCaudit,1)
  S vobj(this,-3)=newKey1
 K vobj(+$G(newrec)) Q 
 ;
throwError(MSG) ; 
 S $ZE="0,"_$ZPOS_","_"%PSL-E-DBFILER,"_$translate(MSG,",","~"),$EC=",U1001,"
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrRep(object,p1,p2,p3,p4,qt) ; String.replace
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I p3<0 Q object
 I $L(p1)=1,$L(p2)<2,'p3,'p4,(qt="") Q $translate(object,p1,p2)
 ;
 N y S y=0
 F  S y=$$vStrFnd(object,p1,y,p4,qt) Q:y=0  D
 .	S object=$E(object,1,y-$L(p1)-1)_p2_$E(object,y,1048575)
 .	S y=y+$L(p2)-$L(p1)
 .	I p3 S p3=p3-1 I p3=0 S y=$L(object)+1
 .	Q 
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx1() ; {Cache}%CACHE("STBLBATREJ").isDefined("STBLBATREJ","BATREJ=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa11(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx2() ; {Cache}%CACHE("UTBLBRCD").isDefined("UTBLBRCD","BRCD=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa12(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx3() ; {Cache}%CACHE("UTBLBSC").isDefined("UTBLBSC","KEY=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa13(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx4() ; {Cache}%CACHE("UTBLBSC").isDefined("UTBLBSC","KEY=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa13(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx5() ; {Cache}%CACHE("STBLCURRENV").isDefined("STBLCURRENV","CURRENV=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa14(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx6() ; {Cache}%CACHE("UTBLLANG").isDefined("UTBLLANG","LANG=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa15(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx7() ; {Cache}%CACHE("UTBLMARSEG").isDefined("UTBLMARSEG","MARSEG=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa16(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx8() ; {Cache}%CACHE("UTBLMREASON").isDefined("UTBLMREASON","REASON=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa17(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx9() ; {Cache}%CACHE("STBLPATODP").isDefined("STBLPATODP","OPTION=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa18(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx10() ; {Cache}%CACHE("UTBLRSC").isDefined("UTBLRSC","KEY=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa19(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx11() ; {Cache}%CACHE("UTBLRSC").isDefined("UTBLRSC","KEY=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa19(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx12() ; {Cache}%CACHE("STBLTRNSRT").isDefined("STBLTRNSRT","SRTOPTN=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa20(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx13() ; {Cache}%CACHE("STBLBATREJ").isDefined("STBLBATREJ","BATREJ=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa11(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx14() ; {Cache}%CACHE("UTBLBRCD").isDefined("UTBLBRCD","BRCD=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa12(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx15() ; {Cache}%CACHE("UTBLBSC").isDefined("UTBLBSC","KEY=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa13(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx16() ; {Cache}%CACHE("UTBLBSC").isDefined("UTBLBSC","KEY=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa13(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx17() ; {Cache}%CACHE("STBLCURRENV").isDefined("STBLCURRENV","CURRENV=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa14(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx18() ; {Cache}%CACHE("UTBLLANG").isDefined("UTBLLANG","LANG=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa15(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx19() ; {Cache}%CACHE("UTBLMARSEG").isDefined("UTBLMARSEG","MARSEG=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa16(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx20() ; {Cache}%CACHE("UTBLMREASON").isDefined("UTBLMREASON","REASON=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa17(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx21() ; {Cache}%CACHE("STBLPATODP").isDefined("STBLPATODP","OPTION=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa18(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx22() ; {Cache}%CACHE("UTBLRSC").isDefined("UTBLRSC","KEY=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa19(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx23() ; {Cache}%CACHE("UTBLRSC").isDefined("UTBLRSC","KEY=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa19(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx24() ; {Cache}%CACHE("STBLTRNSRT").isDefined("STBLTRNSRT","SRTOPTN=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa20(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vStrTrim(object,p1,p2) ; String.trim
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 I p1'<0 S object=$$RTCHR^%ZFUNC(object,p2)
 I p1'>0 F  Q:$E(object,1)'=p2  S object=$E(object,2,1048575)
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vStrFnd(object,p1,p2,p3,qt) ; String.find
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I (p1="") Q $S(p2<1:1,1:+p2)
 I p3 S object=$ZCONVERT(object,"U") S p1=$ZCONVERT(p1,"U")
 S p2=$F(object,p1,p2)
 I '(qt=""),$L($E(object,1,p2-1),qt)#2=0 D
 .	F  S p2=$F(object,p1,p2) Q:p2=0!($L($E(object,1,p2-1),qt)#2) 
 .	Q 
 Q p2
 ;
vCa11(v1,v2out) ; voXN = ({Cache}%CACHE("STBLBATREJ").getRecord(STBLBATREJ,1)
 ;
 I '$D(%CACHE("STBLBATREJ",v1)) D
 .  I $G(%CACHE("STBLBATREJ"))>100 KILL %CACHE("STBLBATREJ")
 .  S %CACHE("STBLBATREJ")=$G(%CACHE("STBLBATREJ"))+1
 .  S %CACHE("STBLBATREJ",v1)=$$vRCgetRecord1Opt^RecordSTBLBATREJ(v1,0,.v2out),%CACHE("STBLBATREJ",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("STBLBATREJ",v1,-2)
 Q %CACHE("STBLBATREJ",v1)
 ;
vCa12(v1,v2out) ; voXN = ({Cache}%CACHE("UTBLBRCD").getRecord(UTBLBRCD,1)
 ;
 I '$D(%CACHE("UTBLBRCD",v1)) D
 .  I $G(%CACHE("UTBLBRCD"))>100 KILL %CACHE("UTBLBRCD")
 .  S %CACHE("UTBLBRCD")=$G(%CACHE("UTBLBRCD"))+1
 .  S %CACHE("UTBLBRCD",v1)=$$vRCgetRecord1Opt^RecordUTBLBRCD(v1,0,.v2out),%CACHE("UTBLBRCD",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("UTBLBRCD",v1,-2)
 Q %CACHE("UTBLBRCD",v1)
 ;
vCa13(v1,v2out) ; voXN = ({Cache}%CACHE("UTBLBSC").getRecord(UTBLBSC,1)
 ;
 I '$D(%CACHE("UTBLBSC",v1)) D
 .  I $G(%CACHE("UTBLBSC"))>100 KILL %CACHE("UTBLBSC")
 .  S %CACHE("UTBLBSC")=$G(%CACHE("UTBLBSC"))+1
 .  S %CACHE("UTBLBSC",v1)=$$vRCgetRecord1Opt^RecordUTBLBSC(v1,0,.v2out),%CACHE("UTBLBSC",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("UTBLBSC",v1,-2)
 Q %CACHE("UTBLBSC",v1)
 ;
vCa14(v1,v2out) ; voXN = ({Cache}%CACHE("STBLCURRENV").getRecord(STBLCURRENV,1)
 ;
 I '$D(%CACHE("STBLCURRENV",v1)) D
 .  I $G(%CACHE("STBLCURRENV"))>100 KILL %CACHE("STBLCURRENV")
 .  S %CACHE("STBLCURRENV")=$G(%CACHE("STBLCURRENV"))+1
 .  S %CACHE("STBLCURRENV",v1)=$$vRCgetRecord1Opt^RecordSTBLCURRENV(v1,0,.v2out),%CACHE("STBLCURRENV",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("STBLCURRENV",v1,-2)
 Q %CACHE("STBLCURRENV",v1)
 ;
vCa15(v1,v2out) ; voXN = ({Cache}%CACHE("UTBLLANG").getRecord(UTBLLANG,1)
 ;
 I '$D(%CACHE("UTBLLANG",v1)) D
 .  I $G(%CACHE("UTBLLANG"))>100 KILL %CACHE("UTBLLANG")
 .  S %CACHE("UTBLLANG")=$G(%CACHE("UTBLLANG"))+1
 .  S %CACHE("UTBLLANG",v1)=$$vRCgetRecord1Opt^RecordUTBLLANG(v1,0,.v2out),%CACHE("UTBLLANG",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("UTBLLANG",v1,-2)
 Q %CACHE("UTBLLANG",v1)
 ;
vCa16(v1,v2out) ; voXN = ({Cache}%CACHE("UTBLMARSEG").getRecord(UTBLMARSEG,1)
 ;
 I '$D(%CACHE("UTBLMARSEG",v1)) D
 .  I $G(%CACHE("UTBLMARSEG"))>100 KILL %CACHE("UTBLMARSEG")
 .  S %CACHE("UTBLMARSEG")=$G(%CACHE("UTBLMARSEG"))+1
 .  S %CACHE("UTBLMARSEG",v1)=$$vRCgetRecord1Opt^RecordUTBLMARSEG(v1,0,.v2out),%CACHE("UTBLMARSEG",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("UTBLMARSEG",v1,-2)
 Q %CACHE("UTBLMARSEG",v1)
 ;
vCa17(v1,v2out) ; voXN = ({Cache}%CACHE("UTBLMREASON").getRecord(UTBLMREASON,1)
 ;
 I '$D(%CACHE("UTBLMREASON",v1)) D
 .  I $G(%CACHE("UTBLMREASON"))>100 KILL %CACHE("UTBLMREASON")
 .  S %CACHE("UTBLMREASON")=$G(%CACHE("UTBLMREASON"))+1
 .  S %CACHE("UTBLMREASON",v1)=$$vRCgetRecord1Opt^RecordUTBLMREASON(v1,0,.v2out),%CACHE("UTBLMREASON",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("UTBLMREASON",v1,-2)
 Q %CACHE("UTBLMREASON",v1)
 ;
vCa18(v1,v2out) ; voXN = ({Cache}%CACHE("STBLPATODP").getRecord(STBLPATODP,1)
 ;
 I '$D(%CACHE("STBLPATODP",v1)) D
 .  I $G(%CACHE("STBLPATODP"))>100 KILL %CACHE("STBLPATODP")
 .  S %CACHE("STBLPATODP")=$G(%CACHE("STBLPATODP"))+1
 .  S %CACHE("STBLPATODP",v1)=$$vRCgetRecord1Opt^RecordSTBLPATODP(v1,0,.v2out),%CACHE("STBLPATODP",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("STBLPATODP",v1,-2)
 Q %CACHE("STBLPATODP",v1)
 ;
vCa19(v1,v2out) ; voXN = ({Cache}%CACHE("UTBLRSC").getRecord(UTBLRSC,1)
 ;
 I '$D(%CACHE("UTBLRSC",v1)) D
 .  I $G(%CACHE("UTBLRSC"))>100 KILL %CACHE("UTBLRSC")
 .  S %CACHE("UTBLRSC")=$G(%CACHE("UTBLRSC"))+1
 .  S %CACHE("UTBLRSC",v1)=$$vRCgetRecord1Opt^RecordUTBLRSC(v1,0,.v2out),%CACHE("UTBLRSC",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("UTBLRSC",v1,-2)
 Q %CACHE("UTBLRSC",v1)
 ;
vCa20(v1,v2out) ; voXN = ({Cache}%CACHE("STBLTRNSRT").getRecord(STBLTRNSRT,1)
 ;
 I '$D(%CACHE("STBLTRNSRT",v1)) D
 .  I $G(%CACHE("STBLTRNSRT"))>100 KILL %CACHE("STBLTRNSRT")
 .  S %CACHE("STBLTRNSRT")=$G(%CACHE("STBLTRNSRT"))+1
 .  S %CACHE("STBLTRNSRT",v1)=$$vRCgetRecord1Opt^RecordSTBLTRNSRT(v1,0,.v2out),%CACHE("STBLTRNSRT",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("STBLTRNSRT",v1,-2)
 Q %CACHE("STBLTRNSRT",v1)
 ;
vReCp1(v1) ; RecordSCAU.copy: SCAU
 ;
 Q $$copy^UCGMR(this)
