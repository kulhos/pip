 ; 
 ; **** Routine compiled from DATA-QWIK Filer RecordUTBLBRCD ****
 ; 
 ; 02/24/2010 18:41 - pip
 ; 
 ;
 ; Record Class code for table UTBLBRCD
 ;
 ; Generated by PSLRecordBuilder on 02/24/2010 at 18:41 by
 ;
vcdmNew() ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordUTBLBRCD",vobj(vOid,-2)=0,vobj(vOid)=""
 S vobj(vOid,-3)=""
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0(v1,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordUTBLBRCD"
 S vobj(vOid)=$G(^UTBL("BRCD",v1))
 I vobj(vOid)="",'($D(^UTBL("BRCD",v1))#2)
 S vobj(vOid,-2)=1
 I $T K vobj(vOid) S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,UTBLBRCD",$EC=",U1001,"
 S vobj(vOid,-3)=v1
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord1(v1,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordUTBLBRCD"
 S vobj(vOid)=$G(^UTBL("BRCD",v1))
 I vobj(vOid)="",'($D(^UTBL("BRCD",v1))#2)
 S vobj(vOid,-2)='$T
 S vobj(vOid,-3)=v1
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0Opt(v1,vfromDbSet,v2out) ; 
 N utblbrcd
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S utblbrcd=$G(^UTBL("BRCD",v1))
 I utblbrcd="",'($D(^UTBL("BRCD",v1))#2)
 S v2out=1
 I $T S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,UTBLBRCD",$EC=",U1001,"
 ;*** End of code by-passed by compiler ***
 Q utblbrcd
 ;
vRCgetRecord1Opt(v1,vfromDbSet,v2out) ; 
 N utblbrcd
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S utblbrcd=$G(^UTBL("BRCD",v1))
 I utblbrcd="",'($D(^UTBL("BRCD",v1))#2)
 S v2out='$T
 ;*** End of code by-passed by compiler ***
 Q utblbrcd
 ;
vBypassSave(this) ; 
 D vSave(this,"/NOJOURNAL/NOTRIGAFT/NOTRIGBEF/NOVALDD/NOVALREQ/NOVALRI/NOVALST",0)
 Q 
 ;
vSave(this,vRCparams,vauditLogSeq) ; 
 N vRCaudit N vRCauditIns
 N %O S %O=$G(vobj(this,-2))
 I ($get(vRCparams)="") S vRCparams="/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/"
 I (%O=0) D
 .	D AUDIT^UCUTILN(this,.vRCauditIns,1,"|")
 .	D vRCsetDefaults(this)
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=1) D
 .	D AUDIT^UCUTILN(this,.vRCaudit,1,"|")
 .	I ($D(vobj(this,-100,"1*","BRCD"))&($P($E($G(vobj(this,-100,"1*","BRCD")),5,9999),$C(124))'=vobj(this,-3))) D vRCkeyChanged(this,vRCparams,.vRCaudit) Q 
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForUpdate(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD1(this)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=2) D
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,2)
 .	Q 
 E  I (%O=3) D
 .	  N V1 S V1=vobj(this,-3) Q:'($D(^UTBL("BRCD",V1))#2) 
 .	D vRCdelete(this,vRCparams,.vRCaudit,0)
 .	Q 
 Q 
 ;
vcheckAccessRights() ; 
 Q ""
 ;
vinsertAccess(userclass) ; 
 Q 1
 ;
vinsertOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vupdateAccess(userclass) ; 
 Q 1
 ;
vupdateOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vdeleteAccess(userclass) ; 
 Q 1
 ;
vdeleteOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectAccess(userclass,restrict,from) ; 
 S (restrict,from)=""
 Q 1
 ;
vselectOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectOptmOK(userclass,utblbrcd,vkey1) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vgetLogging() ; 
 Q "0"
 ;
logUserclass(operation) ; 
 I (operation="INSERT") Q 0
 E  I (operation="UPDATE") Q 0
 E  I (operation="DELETE") Q 0
 E  I (operation="SELECT") Q 0
 Q 0
 ;
vlogSelect(statement,using) ; 
 Q 0
 ;
columnList() ; 
 N columns S columns=""
 S columns=columns_"BRAD1,BRAD2,BRAD3,BRCD,BRCITY,BRCNTRY,BRCONT,BRSTATE,BRTEL,BRZIP,BSA,CCDEF,DESC,EIN,FEPDIR,HOSTBR,INACTV,NBP,NRTRN,OACMAX,"
 S columns=columns_"OACMIN,OFFNAME,OFFTITLE,RATNO1,RATNO2,RATNO3,SBIID,SBNID,SBPT,STP,ZTSTIDX,"
 Q $$vStrRep("BRAD1,BRAD2,BRAD3,BRCD,BRCITY,BRCNTRY,BRCONT,BRSTATE,BRTEL,BRZIP,BSA,CCDEF,DESC,EIN,FEPDIR,HOSTBR,INACTV,NBP,NRTRN,OACMAX,OACMIN,OFFNAME,OFFTITLE,RATNO1,RATNO2,RATNO3,SBIID,SBNID,SBPT,STP,ZTSTIDX",",",$char(9),0,0,"")
 ;
columnListBM() ; 
 Q ""
 ;
columnListCMP() ; 
 Q $$vStrRep("FMDESC",",",$char(9),0,0,"")
 ;
getColumnMap(map) ; 
 ;
 S map(-3)="BRCD:N:"
 S map(-1)="BRAD1:T:9;BRAD2:T:10;BRAD3:T:11;BRCITY:T:6;BRCNTRY:T:12;BRCONT:T:13;BRSTATE:T:7;BRTEL:T:14;BRZIP:T:8;BSA:N:31;CCDEF:N:4;DESC:T:1;EIN:T:32;FEPDIR:T:3;HOSTBR:L:15;INACTV:L:24;NBP:T:20;NRTRN:N:16;OACMAX:"
 S map(-1)=map(-1)_"$:17;OACMIN:$:18;OFFNAME:T:27;OFFTITLE:T:26;RATNO1:T:21;RATNO2:T:22;RATNO3:T:23;SBIID:N:29;SBNID:N:28;SBPT:T:30;STP:N:19;ZTSTIDX:N:33"
 Q 
 ;
vlegacy(processMode,params) ; 
 N vTp
 I (processMode=2) D
 .	N utblbrcd S utblbrcd=$$vRCgetRecord0^RecordUTBLBRCD(BRCD,0)
 .	S vobj(utblbrcd,-2)=2
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordUTBLBRCD(utblbrcd,$$initPar^UCUTILN(params)) K vobj(utblbrcd,-100) S vobj(utblbrcd,-2)=1 TC:vTp  
 .	K vobj(+$G(utblbrcd)) Q 
 Q 
 ;
vhasLiterals() ; 
 Q 0
 ;
vRCmiscValidations(this,vRCparams,processMode) ; 
 I (("/"_vRCparams_"/")["/VALST/")  N V1 S V1=vobj(this,-3) I '(''($D(^UTBL("BRCD",V1))#2)=''processMode) D
 .	N errmsg
 .	I (+processMode'=+0) S errmsg=$$^MSG(7932)
 .	E  S errmsg=$$^MSG(2327)
 .	D throwError(errmsg)
 .	Q 
 Q 
 ;
vRCupdateDB(this,processMode,vRCparams,vRCaudit,vRCauditIns) ; 
 I '(("/"_vRCparams_"/")["/NOUPDATE/") D
 .	I '(("/"_vRCparams_"/")["/NOLOG/") D
 ..		I (processMode=1) D ^DBSLOGIT(this,1,.vRCaudit) Q 
 ..		D ^DBSLOGIT(this,0,.vRCauditIns)
 ..		Q 
 .	;   #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(vobj(this)) S ^UTBL("BRCD",vobj(this,-3))=vobj(this)
 .	;*** End of code by-passed by compiler ***
 .	Q 
 Q 
 ;
vRCdelete(this,vRCparams,vRCaudit,isKeyChange) ; 
 I '(("/"_vRCparams_"/")["/NOLOG/") D ^DBSLOGIT(this,3)
 ;  #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
 ;*** Start of code by-passed by compiler
 ZWI ^UTBL("BRCD",vobj(this,-3))
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCsetDefaults(this) ; 
 I ($P(vobj(this),$C(124),15)="")  S $P(vobj(this),$C(124),15)=0
 I ($P(vobj(this),$C(124),24)="")  S $P(vobj(this),$C(124),24)=0
 Q 
 ;
vRCchkReqForInsert(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("BRCD")
 I ($P(vobj(this),$C(124),1)="") D vRCrequiredErr("DESC")
 I ($P(vobj(this),$C(124),15)="") D vRCrequiredErr("HOSTBR")
 I ($P(vobj(this),$C(124),24)="") D vRCrequiredErr("INACTV")
 Q 
 ;
vRCchkReqForUpdate(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("BRCD")
 I ($D(vobj(this,-100,"0*","DESC"))&($P($E($G(vobj(this,-100,"0*","DESC")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))),($P(vobj(this),$C(124),1)="") D vRCrequiredErr("DESC")
 I ($D(vobj(this,-100,"0*","HOSTBR"))&($P($E($G(vobj(this,-100,"0*","HOSTBR")),5,9999),$C(124))'=$P(vobj(this),$C(124),15))),($P(vobj(this),$C(124),15)="") D vRCrequiredErr("HOSTBR")
 I ($D(vobj(this,-100,"0*","INACTV"))&($P($E($G(vobj(this,-100,"0*","INACTV")),5,9999),$C(124))'=$P(vobj(this),$C(124),24))),($P(vobj(this),$C(124),24)="") D vRCrequiredErr("INACTV")
 Q 
 ;
vRCrequiredErr(column) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("UTBLBRCD","MSG",1767,"UTBLBRCD."_column)
 I ER D throwError($get(RM))
 Q 
 ;
vRCvalidateDD(this,processMode) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I '(vobj(this,-3)=""),'(+vobj(this,-3)=vobj(this,-3))  S vobj(this,-3)=$$vRCtrimNumber(vobj(this,-3))
 S X=vobj(this,-3) I '(X=""),(X'?1.6N),(X'?1"-"1.5N) D vRCvalidateDDerr("BRCD",$$^MSG(742,"N"))
 I ($L($P(vobj(this),$C(124),9))>40) D vRCvalidateDDerr("BRAD1",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),10))>40) D vRCvalidateDDerr("BRAD2",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),11))>40) D vRCvalidateDDerr("BRAD3",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),6))>20) D vRCvalidateDDerr("BRCITY",$$^MSG(1076,20))
 S X=$P(vobj(this),$C(124),12) I '(X=""),'$$vCaEx1() D vRCvalidateDDerr("BRCNTRY",$$^MSG(1485,X))
 I ($L($P(vobj(this),$C(124),13))>40) D vRCvalidateDDerr("BRCONT",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),7))>2) D vRCvalidateDDerr("BRSTATE",$$^MSG(1076,2))
 I ($L($P(vobj(this),$C(124),14))>12) D vRCvalidateDDerr("BRTEL",$$^MSG(1076,12))
 I ($L($P(vobj(this),$C(124),8))>10) D vRCvalidateDDerr("BRZIP",$$^MSG(1076,10))
 S X=$P(vobj(this),$C(124),31) I '(X=""),'$$vCaEx2() D vRCvalidateDDerr("BSA",$$^MSG(1485,X))
 S X=$P(vobj(this),$C(124),4) I '(X=""),'$$vCaEx3() D vRCvalidateDDerr("CCDEF",$$^MSG(1485,X))
 I ($L($P(vobj(this),$C(124),1))>40) D vRCvalidateDDerr("DESC",$$^MSG(1076,40))
 I ($L($P(vobj(this),$C(124),32))>20) D vRCvalidateDDerr("EIN",$$^MSG(1076,20))
 I ($L($P(vobj(this),$C(124),3))>15) D vRCvalidateDDerr("FEPDIR",$$^MSG(1076,15))
 I '(($P(vobj(this),$C(124),15)=1)!($P(vobj(this),$C(124),15)=0)) D vRCvalidateDDerr("HOSTBR",$$^MSG(742,"L"))
 I '(($P(vobj(this),$C(124),24)=1)!($P(vobj(this),$C(124),24)=0)) D vRCvalidateDDerr("INACTV",$$^MSG(742,"L"))
 I ($L($P(vobj(this),$C(124),20))>6) D vRCvalidateDDerr("NBP",$$^MSG(1076,6))
 I '($P(vobj(this),$C(124),16)=""),'(+$P(vobj(this),$C(124),16)=$P(vobj(this),$C(124),16))  S $P(vobj(this),$C(124),16)=$$vRCtrimNumber($P(vobj(this),$C(124),16))
 S X=$P(vobj(this),$C(124),16) I '(X=""),(X'?1.9N),(X'?1"-"1.8N) D vRCvalidateDDerr("NRTRN",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),17)=""),'(+$P(vobj(this),$C(124),17)=$P(vobj(this),$C(124),17))  S $P(vobj(this),$C(124),17)=$$vRCtrimNumber($P(vobj(this),$C(124),17))
 S X=$P(vobj(this),$C(124),17) I '(X="") S errmsg=$$VAL^DBSVER("$",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("OACMAX",$$^MSG(979,"UTBLBRCD.OACMAX"_" "_errmsg))
 I '($P(vobj(this),$C(124),18)=""),'(+$P(vobj(this),$C(124),18)=$P(vobj(this),$C(124),18))  S $P(vobj(this),$C(124),18)=$$vRCtrimNumber($P(vobj(this),$C(124),18))
 S X=$P(vobj(this),$C(124),18) I '(X="") S errmsg=$$VAL^DBSVER("$",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("OACMIN",$$^MSG(979,"UTBLBRCD.OACMIN"_" "_errmsg))
 I ($L($P(vobj(this),$C(124),27))>35) D vRCvalidateDDerr("OFFNAME",$$^MSG(1076,35))
 I ($L($P(vobj(this),$C(124),26))>20) D vRCvalidateDDerr("OFFTITLE",$$^MSG(1076,20))
 I ($L($P(vobj(this),$C(124),21))>20) D vRCvalidateDDerr("RATNO1",$$^MSG(1076,20))
 I ($L($P(vobj(this),$C(124),22))>20) D vRCvalidateDDerr("RATNO2",$$^MSG(1076,20))
 I ($L($P(vobj(this),$C(124),23))>20) D vRCvalidateDDerr("RATNO3",$$^MSG(1076,20))
 I '($P(vobj(this),$C(124),29)=""),'(+$P(vobj(this),$C(124),29)=$P(vobj(this),$C(124),29))  S $P(vobj(this),$C(124),29)=$$vRCtrimNumber($P(vobj(this),$C(124),29))
 S X=$P(vobj(this),$C(124),29) I '(X=""),(X'?1.11N),(X'?1"-"1.10N) D vRCvalidateDDerr("SBIID",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),28)=""),'(+$P(vobj(this),$C(124),28)=$P(vobj(this),$C(124),28))  S $P(vobj(this),$C(124),28)=$$vRCtrimNumber($P(vobj(this),$C(124),28))
 S X=$P(vobj(this),$C(124),28) I '(X=""),(X'?1N) D vRCvalidateDDerr("SBNID",$$^MSG(742,"N"))
 I ($L($P(vobj(this),$C(124),30))>6) D vRCvalidateDDerr("SBPT",$$^MSG(1076,6))
 I '($P(vobj(this),$C(124),19)=""),'(+$P(vobj(this),$C(124),19)=$P(vobj(this),$C(124),19))  S $P(vobj(this),$C(124),19)=$$vRCtrimNumber($P(vobj(this),$C(124),19))
 S X=$P(vobj(this),$C(124),19) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("STP",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),33)=""),'(+$P(vobj(this),$C(124),33)=$P(vobj(this),$C(124),33))  S $P(vobj(this),$C(124),33)=$$vRCtrimNumber($P(vobj(this),$C(124),33))
 S X=$P(vobj(this),$C(124),33) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("ZTSTIDX",$$^MSG(742,"N"))
 Q 
 ;
vRCvalidateDD1(this) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($D(vobj(this,-100,"1*","BRCD"))&($P($E($G(vobj(this,-100,"1*","BRCD")),5,9999),$C(124))'=vobj(this,-3))),'(vobj(this,-3)=""),'(+vobj(this,-3)=vobj(this,-3))  S vobj(this,-3)=$$vRCtrimNumber(vobj(this,-3))
 I ($D(vobj(this,-100,"1*","BRCD"))&($P($E($G(vobj(this,-100,"1*","BRCD")),5,9999),$C(124))'=vobj(this,-3))) S X=vobj(this,-3) I '(X=""),(X'?1.6N),(X'?1"-"1.5N) D vRCvalidateDDerr("BRCD",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","BRAD1"))&($P($E($G(vobj(this,-100,"0*","BRAD1")),5,9999),$C(124))'=$P(vobj(this),$C(124),9))) I ($L($P(vobj(this),$C(124),9))>40) D vRCvalidateDDerr("BRAD1",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","BRAD2"))&($P($E($G(vobj(this,-100,"0*","BRAD2")),5,9999),$C(124))'=$P(vobj(this),$C(124),10))) I ($L($P(vobj(this),$C(124),10))>40) D vRCvalidateDDerr("BRAD2",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","BRAD3"))&($P($E($G(vobj(this,-100,"0*","BRAD3")),5,9999),$C(124))'=$P(vobj(this),$C(124),11))) I ($L($P(vobj(this),$C(124),11))>40) D vRCvalidateDDerr("BRAD3",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","BRCITY"))&($P($E($G(vobj(this,-100,"0*","BRCITY")),5,9999),$C(124))'=$P(vobj(this),$C(124),6))) I ($L($P(vobj(this),$C(124),6))>20) D vRCvalidateDDerr("BRCITY",$$^MSG(1076,20))
 I ($D(vobj(this,-100,"0*","BRCNTRY"))&($P($E($G(vobj(this,-100,"0*","BRCNTRY")),5,9999),$C(124))'=$P(vobj(this),$C(124),12))) S X=$P(vobj(this),$C(124),12) I '(X=""),'$$vCaEx4() D vRCvalidateDDerr("BRCNTRY",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","BRCONT"))&($P($E($G(vobj(this,-100,"0*","BRCONT")),5,9999),$C(124))'=$P(vobj(this),$C(124),13))) I ($L($P(vobj(this),$C(124),13))>40) D vRCvalidateDDerr("BRCONT",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","BRSTATE"))&($P($E($G(vobj(this,-100,"0*","BRSTATE")),5,9999),$C(124))'=$P(vobj(this),$C(124),7))) I ($L($P(vobj(this),$C(124),7))>2) D vRCvalidateDDerr("BRSTATE",$$^MSG(1076,2))
 I ($D(vobj(this,-100,"0*","BRTEL"))&($P($E($G(vobj(this,-100,"0*","BRTEL")),5,9999),$C(124))'=$P(vobj(this),$C(124),14))) I ($L($P(vobj(this),$C(124),14))>12) D vRCvalidateDDerr("BRTEL",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","BRZIP"))&($P($E($G(vobj(this,-100,"0*","BRZIP")),5,9999),$C(124))'=$P(vobj(this),$C(124),8))) I ($L($P(vobj(this),$C(124),8))>10) D vRCvalidateDDerr("BRZIP",$$^MSG(1076,10))
 I ($D(vobj(this,-100,"0*","BSA"))&($P($E($G(vobj(this,-100,"0*","BSA")),5,9999),$C(124))'=$P(vobj(this),$C(124),31))) S X=$P(vobj(this),$C(124),31) I '(X=""),'$$vCaEx5() D vRCvalidateDDerr("BSA",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","CCDEF"))&($P($E($G(vobj(this,-100,"0*","CCDEF")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))) S X=$P(vobj(this),$C(124),4) I '(X=""),'$$vCaEx6() D vRCvalidateDDerr("CCDEF",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"0*","DESC"))&($P($E($G(vobj(this,-100,"0*","DESC")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))) I ($L($P(vobj(this),$C(124),1))>40) D vRCvalidateDDerr("DESC",$$^MSG(1076,40))
 I ($D(vobj(this,-100,"0*","EIN"))&($P($E($G(vobj(this,-100,"0*","EIN")),5,9999),$C(124))'=$P(vobj(this),$C(124),32))) I ($L($P(vobj(this),$C(124),32))>20) D vRCvalidateDDerr("EIN",$$^MSG(1076,20))
 I ($D(vobj(this,-100,"0*","FEPDIR"))&($P($E($G(vobj(this,-100,"0*","FEPDIR")),5,9999),$C(124))'=$P(vobj(this),$C(124),3))) I ($L($P(vobj(this),$C(124),3))>15) D vRCvalidateDDerr("FEPDIR",$$^MSG(1076,15))
 I ($D(vobj(this,-100,"0*","HOSTBR"))&($P($E($G(vobj(this,-100,"0*","HOSTBR")),5,9999),$C(124))'=$P(vobj(this),$C(124),15))) I '(($P(vobj(this),$C(124),15)=1)!($P(vobj(this),$C(124),15)=0)) D vRCvalidateDDerr("HOSTBR",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","INACTV"))&($P($E($G(vobj(this,-100,"0*","INACTV")),5,9999),$C(124))'=$P(vobj(this),$C(124),24))) I '(($P(vobj(this),$C(124),24)=1)!($P(vobj(this),$C(124),24)=0)) D vRCvalidateDDerr("INACTV",$$^MSG(742,"L"))
 I ($D(vobj(this,-100,"0*","NBP"))&($P($E($G(vobj(this,-100,"0*","NBP")),5,9999),$C(124))'=$P(vobj(this),$C(124),20))) I ($L($P(vobj(this),$C(124),20))>6) D vRCvalidateDDerr("NBP",$$^MSG(1076,6))
 I ($D(vobj(this,-100,"0*","NRTRN"))&($P($E($G(vobj(this,-100,"0*","NRTRN")),5,9999),$C(124))'=$P(vobj(this),$C(124),16))),'($P(vobj(this),$C(124),16)=""),'(+$P(vobj(this),$C(124),16)=$P(vobj(this),$C(124),16))  S $P(vobj(this),$C(124),16)=$$vRCtrimNumber($P(vobj(this),$C(124),16))
 I ($D(vobj(this,-100,"0*","NRTRN"))&($P($E($G(vobj(this,-100,"0*","NRTRN")),5,9999),$C(124))'=$P(vobj(this),$C(124),16))) S X=$P(vobj(this),$C(124),16) I '(X=""),(X'?1.9N),(X'?1"-"1.8N) D vRCvalidateDDerr("NRTRN",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","OACMAX"))&($P($E($G(vobj(this,-100,"0*","OACMAX")),5,9999),$C(124))'=$P(vobj(this),$C(124),17))),'($P(vobj(this),$C(124),17)=""),'(+$P(vobj(this),$C(124),17)=$P(vobj(this),$C(124),17))  S $P(vobj(this),$C(124),17)=$$vRCtrimNumber($P(vobj(this),$C(124),17))
 I ($D(vobj(this,-100,"0*","OACMAX"))&($P($E($G(vobj(this,-100,"0*","OACMAX")),5,9999),$C(124))'=$P(vobj(this),$C(124),17))) S X=$P(vobj(this),$C(124),17) I '(X="") S errmsg=$$VAL^DBSVER("$",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("OACMAX",$$^MSG(979,"UTBLBRCD.OACMAX"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","OACMIN"))&($P($E($G(vobj(this,-100,"0*","OACMIN")),5,9999),$C(124))'=$P(vobj(this),$C(124),18))),'($P(vobj(this),$C(124),18)=""),'(+$P(vobj(this),$C(124),18)=$P(vobj(this),$C(124),18))  S $P(vobj(this),$C(124),18)=$$vRCtrimNumber($P(vobj(this),$C(124),18))
 I ($D(vobj(this,-100,"0*","OACMIN"))&($P($E($G(vobj(this,-100,"0*","OACMIN")),5,9999),$C(124))'=$P(vobj(this),$C(124),18))) S X=$P(vobj(this),$C(124),18) I '(X="") S errmsg=$$VAL^DBSVER("$",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("OACMIN",$$^MSG(979,"UTBLBRCD.OACMIN"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","OFFNAME"))&($P($E($G(vobj(this,-100,"0*","OFFNAME")),5,9999),$C(124))'=$P(vobj(this),$C(124),27))) I ($L($P(vobj(this),$C(124),27))>35) D vRCvalidateDDerr("OFFNAME",$$^MSG(1076,35))
 I ($D(vobj(this,-100,"0*","OFFTITLE"))&($P($E($G(vobj(this,-100,"0*","OFFTITLE")),5,9999),$C(124))'=$P(vobj(this),$C(124),26))) I ($L($P(vobj(this),$C(124),26))>20) D vRCvalidateDDerr("OFFTITLE",$$^MSG(1076,20))
 I ($D(vobj(this,-100,"0*","RATNO1"))&($P($E($G(vobj(this,-100,"0*","RATNO1")),5,9999),$C(124))'=$P(vobj(this),$C(124),21))) I ($L($P(vobj(this),$C(124),21))>20) D vRCvalidateDDerr("RATNO1",$$^MSG(1076,20))
 I ($D(vobj(this,-100,"0*","RATNO2"))&($P($E($G(vobj(this,-100,"0*","RATNO2")),5,9999),$C(124))'=$P(vobj(this),$C(124),22))) I ($L($P(vobj(this),$C(124),22))>20) D vRCvalidateDDerr("RATNO2",$$^MSG(1076,20))
 I ($D(vobj(this,-100,"0*","RATNO3"))&($P($E($G(vobj(this,-100,"0*","RATNO3")),5,9999),$C(124))'=$P(vobj(this),$C(124),23))) I ($L($P(vobj(this),$C(124),23))>20) D vRCvalidateDDerr("RATNO3",$$^MSG(1076,20))
 I ($D(vobj(this,-100,"0*","SBIID"))&($P($E($G(vobj(this,-100,"0*","SBIID")),5,9999),$C(124))'=$P(vobj(this),$C(124),29))),'($P(vobj(this),$C(124),29)=""),'(+$P(vobj(this),$C(124),29)=$P(vobj(this),$C(124),29))  S $P(vobj(this),$C(124),29)=$$vRCtrimNumber($P(vobj(this),$C(124),29))
 I ($D(vobj(this,-100,"0*","SBIID"))&($P($E($G(vobj(this,-100,"0*","SBIID")),5,9999),$C(124))'=$P(vobj(this),$C(124),29))) S X=$P(vobj(this),$C(124),29) I '(X=""),(X'?1.11N),(X'?1"-"1.10N) D vRCvalidateDDerr("SBIID",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","SBNID"))&($P($E($G(vobj(this,-100,"0*","SBNID")),5,9999),$C(124))'=$P(vobj(this),$C(124),28))),'($P(vobj(this),$C(124),28)=""),'(+$P(vobj(this),$C(124),28)=$P(vobj(this),$C(124),28))  S $P(vobj(this),$C(124),28)=$$vRCtrimNumber($P(vobj(this),$C(124),28))
 I ($D(vobj(this,-100,"0*","SBNID"))&($P($E($G(vobj(this,-100,"0*","SBNID")),5,9999),$C(124))'=$P(vobj(this),$C(124),28))) S X=$P(vobj(this),$C(124),28) I '(X=""),(X'?1N) D vRCvalidateDDerr("SBNID",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","SBPT"))&($P($E($G(vobj(this,-100,"0*","SBPT")),5,9999),$C(124))'=$P(vobj(this),$C(124),30))) I ($L($P(vobj(this),$C(124),30))>6) D vRCvalidateDDerr("SBPT",$$^MSG(1076,6))
 I ($D(vobj(this,-100,"0*","STP"))&($P($E($G(vobj(this,-100,"0*","STP")),5,9999),$C(124))'=$P(vobj(this),$C(124),19))),'($P(vobj(this),$C(124),19)=""),'(+$P(vobj(this),$C(124),19)=$P(vobj(this),$C(124),19))  S $P(vobj(this),$C(124),19)=$$vRCtrimNumber($P(vobj(this),$C(124),19))
 I ($D(vobj(this,-100,"0*","STP"))&($P($E($G(vobj(this,-100,"0*","STP")),5,9999),$C(124))'=$P(vobj(this),$C(124),19))) S X=$P(vobj(this),$C(124),19) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("STP",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","ZTSTIDX"))&($P($E($G(vobj(this,-100,"0*","ZTSTIDX")),5,9999),$C(124))'=$P(vobj(this),$C(124),33))),'($P(vobj(this),$C(124),33)=""),'(+$P(vobj(this),$C(124),33)=$P(vobj(this),$C(124),33))  S $P(vobj(this),$C(124),33)=$$vRCtrimNumber($P(vobj(this),$C(124),33))
 I ($D(vobj(this,-100,"0*","ZTSTIDX"))&($P($E($G(vobj(this,-100,"0*","ZTSTIDX")),5,9999),$C(124))'=$P(vobj(this),$C(124),33))) S X=$P(vobj(this),$C(124),33) I '(X=""),(X'?1.12N),(X'?1"-"1.11N) D vRCvalidateDDerr("ZTSTIDX",$$^MSG(742,"N"))
 Q 
 ;
vRCvalidateDDerr(column,errmsg) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("UTBLBRCD","MSG",979,"UTBLBRCD."_column_" "_errmsg)
 I ER D throwError($get(RM))
 Q 
 ;
vRCtrimNumber(str) ; 
 I ($E(str,1)="0") S str=$$vStrTrim(str,-1,"0") I (str="") S str="0"
 I (str["."),($E(str,$L(str))="0") S str=$$RTCHR^%ZFUNC(str,"0") I ($E(str,$L(str))=".") S str=$E(str,1,$L(str)-1) I (str="") S str="0"
 Q str
 ;
vRCkeyChanged(this,vRCparams,vRCaudit) ; 
 N vTp
 N newkeys N oldkeys N vRCauditIns
 N newKey1 S newKey1=vobj(this,-3)
 N oldKey1 S oldKey1=$S($D(vobj(this,-100,"1*","BRCD")):$P($E(vobj(this,-100,"1*","BRCD"),5,9999),$C(124)),1:vobj(this,-3))
  N V1 S V1=vobj(this,-3) I ($D(^UTBL("BRCD",V1))#2) D throwError($$^MSG(2327))
 S newkeys=newKey1
 S oldkeys=oldKey1
  S vobj(this,-3)=oldKey1
 S vRCparams=$$setPar^UCUTILN(vRCparams,"NOINDEX")
 I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,1)
 D vRCmiscValidations(this,vRCparams,1)
 D vRCupdateDB(this,1,vRCparams,.vRCaudit,.vRCauditIns)
  S vobj(this,-3)=newKey1
 N newrec S newrec=$$vReCp1(this)
 S vobj(newrec,-2)=0
 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordUTBLBRCD(newrec,$$initPar^UCUTILN($$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/"))) K vobj(newrec,-100) S vobj(newrec,-2)=1 TC:vTp  
 D
 .	N %O S %O=1
 .	N ER S ER=0
 .	N RM S RM=""
 .	;   #ACCEPT Date=10/24/2008; Pgm=RussellDS; CR=30801; Group=ACCESS
 .	D CASUPD^DBSEXECU("UTBLBRCD",oldkeys,newkeys)
 .	I ER D throwError($get(RM))
 .	Q 
  S vobj(this,-3)=oldKey1
 S vRCparams=$$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
 D vRCdelete(this,vRCparams,.vRCaudit,1)
  S vobj(this,-3)=newKey1
 K vobj(+$G(newrec)) Q 
 ;
throwError(MSG) ; 
 S $ZE="0,"_$ZPOS_","_"%PSL-E-DBFILER,"_$translate(MSG,",","~"),$EC=",U1001,"
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrRep(object,p1,p2,p3,p4,qt) ; String.replace
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I p3<0 Q object
 I $L(p1)=1,$L(p2)<2,'p3,'p4,(qt="") Q $translate(object,p1,p2)
 ;
 N y S y=0
 F  S y=$$vStrFnd(object,p1,y,p4,qt) Q:y=0  D
 .	S object=$E(object,1,y-$L(p1)-1)_p2_$E(object,y,1048575)
 .	S y=y+$L(p2)-$L(p1)
 .	I p3 S p3=p3-1 I p3=0 S y=$L(object)+1
 .	Q 
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx1() ; {Cache}%CACHE("STBLCNTRY").isDefined("STBLCNTRY","CNTRY=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa4(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx2() ; {Cache}%CACHE("STBLBSA").isDefined("STBLBSA","BSA=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa5(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx3() ; {Cache}%CACHE("UTBLCCNTR").isDefined("UTBLCCNTR","CC=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa6(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx4() ; {Cache}%CACHE("STBLCNTRY").isDefined("STBLCNTRY","CNTRY=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa4(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx5() ; {Cache}%CACHE("STBLBSA").isDefined("STBLBSA","BSA=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa5(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx6() ; {Cache}%CACHE("UTBLCCNTR").isDefined("UTBLCCNTR","CC=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa6(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vStrTrim(object,p1,p2) ; String.trim
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 I p1'<0 S object=$$RTCHR^%ZFUNC(object,p2)
 I p1'>0 F  Q:$E(object,1)'=p2  S object=$E(object,2,1048575)
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vStrFnd(object,p1,p2,p3,qt) ; String.find
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I (p1="") Q $S(p2<1:1,1:+p2)
 I p3 S object=$ZCONVERT(object,"U") S p1=$ZCONVERT(p1,"U")
 S p2=$F(object,p1,p2)
 I '(qt=""),$L($E(object,1,p2-1),qt)#2=0 D
 .	F  S p2=$F(object,p1,p2) Q:p2=0!($L($E(object,1,p2-1),qt)#2) 
 .	Q 
 Q p2
 ;
vCa4(v1,v2out) ; voXN = ({Cache}%CACHE("STBLCNTRY").getRecord(STBLCNTRY,1)
 ;
 I '$D(%CACHE("STBLCNTRY",v1)) D
 .  I $G(%CACHE("STBLCNTRY"))>100 KILL %CACHE("STBLCNTRY")
 .  S %CACHE("STBLCNTRY")=$G(%CACHE("STBLCNTRY"))+1
 .  S %CACHE("STBLCNTRY",v1)=$$vRCgetRecord1Opt^RecordSTBLCNTRY(v1,0,.v2out),%CACHE("STBLCNTRY",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("STBLCNTRY",v1,-2)
 Q %CACHE("STBLCNTRY",v1)
 ;
vCa5(v1,v2out) ; voXN = ({Cache}%CACHE("STBLBSA").getRecord(STBLBSA,1)
 ;
 I '$D(%CACHE("STBLBSA",v1)) D
 .  I $G(%CACHE("STBLBSA"))>100 KILL %CACHE("STBLBSA")
 .  S %CACHE("STBLBSA")=$G(%CACHE("STBLBSA"))+1
 .  S %CACHE("STBLBSA",v1)=$$vRCgetRecord1Opt^RecordSTBLBSA(v1,0,.v2out),%CACHE("STBLBSA",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("STBLBSA",v1,-2)
 Q %CACHE("STBLBSA",v1)
 ;
vCa6(v1,v2out) ; voXN = ({Cache}%CACHE("UTBLCCNTR").getRecord(UTBLCCNTR,1)
 ;
 I '$D(%CACHE("UTBLCCNTR",v1)) D
 .  I $G(%CACHE("UTBLCCNTR"))>100 KILL %CACHE("UTBLCCNTR")
 .  S %CACHE("UTBLCCNTR")=$G(%CACHE("UTBLCCNTR"))+1
 .  S %CACHE("UTBLCCNTR",v1)=$$vRCgetRecord1Opt^RecordUTBLCCNTR(v1,0,.v2out),%CACHE("UTBLCCNTR",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("UTBLCCNTR",v1,-2)
 Q %CACHE("UTBLCCNTR",v1)
 ;
vReCp1(v1) ; RecordUTBLBRCD.copy: UTBLBRCD
 ;
 Q $$copy^UCGMR(this)
