 ; 
 ; **** Routine compiled from DATA-QWIK Filer RecordMTMSTAT ****
 ; 
 ; 02/24/2010 18:40 - pip
 ; 
 ;
 ; Record Class code for table MTMSTAT
 ;
 ; Generated by PSLRecordBuilder on 02/24/2010 at 18:40 by
 ;
vcdmNew() ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordMTMSTAT",vobj(vOid,-2)=0,vobj(vOid)=""
 S vobj(vOid,-3)=""
 S vobj(vOid,-4)=""
 S vobj(vOid,-5)=""
 S vobj(vOid,-6)=""
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0(v1,v2,v3,v4,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordMTMSTAT"
 S vobj(vOid)=$G(^MTMSTAT(v1,v2,v3,v4))
 I vobj(vOid)="",'($D(^MTMSTAT(v1,v2,v3,v4))#2)
 S vobj(vOid,-2)=1
 I $T K vobj(vOid) S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,MTMSTAT",$EC=",U1001,"
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 S vobj(vOid,-5)=v3
 S vobj(vOid,-6)=v4
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord1(v1,v2,v3,v4,vfromDbSet) ; 
 N vOid
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S vOid=$O(vobj(""),-1)+1,vobj(vOid,-1)="RecordMTMSTAT"
 S vobj(vOid)=$G(^MTMSTAT(v1,v2,v3,v4))
 I vobj(vOid)="",'($D(^MTMSTAT(v1,v2,v3,v4))#2)
 S vobj(vOid,-2)='$T
 S vobj(vOid,-3)=v1
 S vobj(vOid,-4)=v2
 S vobj(vOid,-5)=v3
 S vobj(vOid,-6)=v4
 ;*** End of code by-passed by compiler ***
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=SCOPE
 Q vOid
 ;
vRCgetRecord0Opt(v1,v2,v3,v4,vfromDbSet,v2out) ; 
 N mtmstat
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S mtmstat=$G(^MTMSTAT(v1,v2,v3,v4))
 I mtmstat="",'($D(^MTMSTAT(v1,v2,v3,v4))#2)
 S v2out=1
 I $T S $ZE="0,"_$ZPOS_",%PSL-E-RECNOFL,,MTMSTAT",$EC=",U1001,"
 ;*** End of code by-passed by compiler ***
 Q mtmstat
 ;
vRCgetRecord1Opt(v1,v2,v3,v4,vfromDbSet,v2out) ; 
 N mtmstat
 ;  #ACCEPT DATE=02/26/2008; PGM=Dan Russell; CR=30801; Group=BYPASS
 ;*** Start of code by-passed by compiler
 S mtmstat=$G(^MTMSTAT(v1,v2,v3,v4))
 I mtmstat="",'($D(^MTMSTAT(v1,v2,v3,v4))#2)
 S v2out='$T
 ;*** End of code by-passed by compiler ***
 Q mtmstat
 ;
vBypassSave(this) ; 
 D vSave(this,"/NOJOURNAL/NOTRIGAFT/NOTRIGBEF/NOVALDD/NOVALREQ/NOVALRI/NOVALST",0)
 Q 
 ;
vSave(this,vRCparams,vauditLogSeq) ; 
 N vRCaudit N vRCauditIns
 N %O S %O=$G(vobj(this,-2))
 I ($get(vRCparams)="") S vRCparams="/CASDEL/INDEX/JOURNAL/LOG/TRIGAFT/TRIGBEF/UPDATE/VALDD/VALFK/VALREQ/VALRI/VALST/"
 I (%O=0) D
 .	D AUDIT^UCUTILN(this,.vRCauditIns,1,"|")
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=1) D
 .	D AUDIT^UCUTILN(this,.vRCaudit,1,"|")
 .	I ($D(vobj(this,-100,"1*","EFD"))&($P($E($G(vobj(this,-100,"1*","EFD")),5,9999),$C(124))'=vobj(this,-3)))!($D(vobj(this,-100,"2*","MTMID"))&($P($E($G(vobj(this,-100,"2*","MTMID")),5,9999),$C(124))'=vobj(this,-4)))!($D(vobj(this,-100,"3*","SVTYP"))&($P($E($G(vobj(this,-100,"3*","SVTYP")),5,9999),$C(124))'=vobj(this,-5)))!($D(vobj(this,-100,"4*","SEQ"))&($P($E($G(vobj(this,-100,"4*","SEQ")),5,9999),$C(124))'=vobj(this,-6))) D vRCkeyChanged(this,vRCparams,.vRCaudit) Q 
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForUpdate(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD1(this)
 .	D vRCmiscValidations(this,vRCparams,%O)
 .	D vRCupdateDB(this,%O,vRCparams,.vRCaudit,.vRCauditIns)
 .	Q 
 E  I (%O=2) D
 .	I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 .	I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,%O)
 .	D vRCmiscValidations(this,vRCparams,2)
 .	Q 
 E  I (%O=3) D
 .	  N V1,V2,V3,V4 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5),V4=vobj(this,-6) Q:'($D(^MTMSTAT(V1,V2,V3,V4))#2) 
 .	D vRCdelete(this,vRCparams,.vRCaudit,0)
 .	Q 
 Q 
 ;
vcheckAccessRights() ; 
 Q ""
 ;
vinsertAccess(userclass) ; 
 Q 1
 ;
vinsertOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vupdateAccess(userclass) ; 
 Q 1
 ;
vupdateOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vdeleteAccess(userclass) ; 
 Q 1
 ;
vdeleteOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectAccess(userclass,restrict,from) ; 
 S (restrict,from)=""
 Q 1
 ;
vselectOK(this,userclass) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vselectOptmOK(userclass,mtmstat,vkey1,vkey2,vkey3,vkey4) ; PUBLIC access is allowed, no restrict clause
 Q 1
 ;
vgetLogging() ; 
 Q "0"
 ;
logUserclass(operation) ; 
 I (operation="INSERT") Q 0
 E  I (operation="UPDATE") Q 0
 E  I (operation="DELETE") Q 0
 E  I (operation="SELECT") Q 0
 Q 0
 ;
vlogSelect(statement,using) ; 
 Q 0
 ;
columnList() ; 
 Q $$vStrRep("AVGREPLY,AVGTIME,EFD,MAXREPLY,MAXTIME,MINREPLY,MINTIME,MTMID,NUMMSG,NUMREPLY,NUMSRV,SEQ,SVTYP,TIMEEND,TIMESTART",",",$char(9),0,0,"")
 ;
columnListBM() ; 
 Q ""
 ;
columnListCMP() ; 
 Q $$vStrRep("",",",$char(9),0,0,"")
 ;
getColumnMap(map) ; 
 ;
 S map(-6)="SEQ:N:"
 S map(-5)="SVTYP:T:"
 S map(-4)="MTMID:T:"
 S map(-3)="EFD:D:"
 S map(-1)="AVGREPLY:N:11;AVGTIME:N:7;MAXREPLY:N:10;MAXTIME:N:6;MINREPLY:N:9;MINTIME:N:5;NUMMSG:N:4;NUMREPLY:N:8;NUMSRV:N:1;TIMEEND:T:3;TIMESTART:T:2"
 Q 
 ;
vlegacy(processMode,params) ; 
 N vTp
 I (processMode=2) D
 .	N mtmstat S mtmstat=$$vRCgetRecord0^RecordMTMSTAT(EFD,MTMID,SVTYP,SEQ,0)
 .	S vobj(mtmstat,-2)=2
 . S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordMTMSTAT(mtmstat,$$initPar^UCUTILN(params)) K vobj(mtmstat,-100) S vobj(mtmstat,-2)=1 TC:vTp  
 .	K vobj(+$G(mtmstat)) Q 
 Q 
 ;
vhasLiterals() ; 
 Q 0
 ;
vRCmiscValidations(this,vRCparams,processMode) ; 
 I (("/"_vRCparams_"/")["/VALST/")  N V1,V2,V3,V4 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5),V4=vobj(this,-6) I '(''($D(^MTMSTAT(V1,V2,V3,V4))#2)=''processMode) D
 .	N errmsg
 .	I (+processMode'=+0) S errmsg=$$^MSG(7932)
 .	E  S errmsg=$$^MSG(2327)
 .	D throwError(errmsg)
 .	Q 
 Q 
 ;
vRCupdateDB(this,processMode,vRCparams,vRCaudit,vRCauditIns) ; 
 I '(("/"_vRCparams_"/")["/NOUPDATE/") D
 .	;   #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; GROUP=BYPASS
 .	;*** Start of code by-passed by compiler
 .	if $D(vobj(this)) S ^MTMSTAT(vobj(this,-3),vobj(this,-4),vobj(this,-5),vobj(this,-6))=vobj(this)
 .	;*** End of code by-passed by compiler ***
 .	Q 
 Q 
 ;
vRCdelete(this,vRCparams,vRCaudit,isKeyChange) ; 
 ;  #ACCEPT DATE=04/22/04; PGM=Dan Russell; CR=20602; Group=BYPASS
 ;*** Start of code by-passed by compiler
 ZWI ^MTMSTAT(vobj(this,-3),vobj(this,-4),vobj(this,-5),vobj(this,-6))
 ;*** End of code by-passed by compiler ***
 Q 
 ;
vRCchkReqForInsert(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("EFD")
 I (vobj(this,-4)="") D vRCrequiredErr("MTMID")
 I (vobj(this,-6)="") D vRCrequiredErr("SEQ")
 I (vobj(this,-5)="") D vRCrequiredErr("SVTYP")
 Q 
 ;
vRCchkReqForUpdate(this) ; 
 I (vobj(this,-3)="") D vRCrequiredErr("EFD")
 I (vobj(this,-4)="") D vRCrequiredErr("MTMID")
 I (vobj(this,-5)="") D vRCrequiredErr("SVTYP")
 I (vobj(this,-6)="") D vRCrequiredErr("SEQ")
 Q 
 ;
vRCrequiredErr(column) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("MTMSTAT","MSG",1767,"MTMSTAT."_column)
 I ER D throwError($get(RM))
 Q 
 ;
vRCvalidateDD(this,processMode) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 S X=vobj(this,-3) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("EFD",$$^MSG(742,"D"))
 I ($L(vobj(this,-4))>10) D vRCvalidateDDerr("MTMID",$$^MSG(1076,10))
 S X=vobj(this,-5) I '(X=""),'$$vCaEx1() D vRCvalidateDDerr("SVTYP",$$^MSG(1485,X))
 I '(vobj(this,-6)=""),'(+vobj(this,-6)=vobj(this,-6))  S vobj(this,-6)=$$vRCtrimNumber(vobj(this,-6))
 S X=vobj(this,-6) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("SEQ",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),11)=""),'(+$P(vobj(this),$C(124),11)=$P(vobj(this),$C(124),11))  S $P(vobj(this),$C(124),11)=$$vRCtrimNumber($P(vobj(this),$C(124),11))
 S X=$P(vobj(this),$C(124),11) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("AVGREPLY",$$^MSG(979,"MTMSTAT.AVGREPLY"_" "_errmsg))
 I '($P(vobj(this),$C(124),7)=""),'(+$P(vobj(this),$C(124),7)=$P(vobj(this),$C(124),7))  S $P(vobj(this),$C(124),7)=$$vRCtrimNumber($P(vobj(this),$C(124),7))
 S X=$P(vobj(this),$C(124),7) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("AVGTIME",$$^MSG(979,"MTMSTAT.AVGTIME"_" "_errmsg))
 I '($P(vobj(this),$C(124),10)=""),'(+$P(vobj(this),$C(124),10)=$P(vobj(this),$C(124),10))  S $P(vobj(this),$C(124),10)=$$vRCtrimNumber($P(vobj(this),$C(124),10))
 S X=$P(vobj(this),$C(124),10) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("MAXREPLY",$$^MSG(979,"MTMSTAT.MAXREPLY"_" "_errmsg))
 I '($P(vobj(this),$C(124),6)=""),'(+$P(vobj(this),$C(124),6)=$P(vobj(this),$C(124),6))  S $P(vobj(this),$C(124),6)=$$vRCtrimNumber($P(vobj(this),$C(124),6))
 S X=$P(vobj(this),$C(124),6) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("MAXTIME",$$^MSG(979,"MTMSTAT.MAXTIME"_" "_errmsg))
 I '($P(vobj(this),$C(124),9)=""),'(+$P(vobj(this),$C(124),9)=$P(vobj(this),$C(124),9))  S $P(vobj(this),$C(124),9)=$$vRCtrimNumber($P(vobj(this),$C(124),9))
 S X=$P(vobj(this),$C(124),9) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("MINREPLY",$$^MSG(979,"MTMSTAT.MINREPLY"_" "_errmsg))
 I '($P(vobj(this),$C(124),5)=""),'(+$P(vobj(this),$C(124),5)=$P(vobj(this),$C(124),5))  S $P(vobj(this),$C(124),5)=$$vRCtrimNumber($P(vobj(this),$C(124),5))
 S X=$P(vobj(this),$C(124),5) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("MINTIME",$$^MSG(979,"MTMSTAT.MINTIME"_" "_errmsg))
 I '($P(vobj(this),$C(124),4)=""),'(+$P(vobj(this),$C(124),4)=$P(vobj(this),$C(124),4))  S $P(vobj(this),$C(124),4)=$$vRCtrimNumber($P(vobj(this),$C(124),4))
 S X=$P(vobj(this),$C(124),4) I '(X=""),(X'?1.6N),(X'?1"-"1.5N) D vRCvalidateDDerr("NUMMSG",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),8)=""),'(+$P(vobj(this),$C(124),8)=$P(vobj(this),$C(124),8))  S $P(vobj(this),$C(124),8)=$$vRCtrimNumber($P(vobj(this),$C(124),8))
 S X=$P(vobj(this),$C(124),8) I '(X=""),(X'?1.6N),(X'?1"-"1.5N) D vRCvalidateDDerr("NUMREPLY",$$^MSG(742,"N"))
 I '($P(vobj(this),$C(124),1)=""),'(+$P(vobj(this),$C(124),1)=$P(vobj(this),$C(124),1))  S $P(vobj(this),$C(124),1)=$$vRCtrimNumber($P(vobj(this),$C(124),1))
 S X=$P(vobj(this),$C(124),1) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("NUMSRV",$$^MSG(742,"N"))
 I ($L($P(vobj(this),$C(124),3))>12) D vRCvalidateDDerr("TIMEEND",$$^MSG(1076,12))
 I ($L($P(vobj(this),$C(124),2))>12) D vRCvalidateDDerr("TIMESTART",$$^MSG(1076,12))
 Q 
 ;
vRCvalidateDD1(this) ; 
 N ER S ER=0
 N RM S RM=""
 N errmsg N X
 I ($D(vobj(this,-100,"1*","EFD"))&($P($E($G(vobj(this,-100,"1*","EFD")),5,9999),$C(124))'=vobj(this,-3))) S X=vobj(this,-3) I '(X=""),(X'?1.5N) D vRCvalidateDDerr("EFD",$$^MSG(742,"D"))
 I ($D(vobj(this,-100,"2*","MTMID"))&($P($E($G(vobj(this,-100,"2*","MTMID")),5,9999),$C(124))'=vobj(this,-4))) I ($L(vobj(this,-4))>10) D vRCvalidateDDerr("MTMID",$$^MSG(1076,10))
 I ($D(vobj(this,-100,"3*","SVTYP"))&($P($E($G(vobj(this,-100,"3*","SVTYP")),5,9999),$C(124))'=vobj(this,-5))) S X=vobj(this,-5) I '(X=""),'$$vCaEx2() D vRCvalidateDDerr("SVTYP",$$^MSG(1485,X))
 I ($D(vobj(this,-100,"4*","SEQ"))&($P($E($G(vobj(this,-100,"4*","SEQ")),5,9999),$C(124))'=vobj(this,-6))),'(vobj(this,-6)=""),'(+vobj(this,-6)=vobj(this,-6))  S vobj(this,-6)=$$vRCtrimNumber(vobj(this,-6))
 I ($D(vobj(this,-100,"4*","SEQ"))&($P($E($G(vobj(this,-100,"4*","SEQ")),5,9999),$C(124))'=vobj(this,-6))) S X=vobj(this,-6) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("SEQ",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","AVGREPLY"))&($P($E($G(vobj(this,-100,"0*","AVGREPLY")),5,9999),$C(124))'=$P(vobj(this),$C(124),11))),'($P(vobj(this),$C(124),11)=""),'(+$P(vobj(this),$C(124),11)=$P(vobj(this),$C(124),11))  S $P(vobj(this),$C(124),11)=$$vRCtrimNumber($P(vobj(this),$C(124),11))
 I ($D(vobj(this,-100,"0*","AVGREPLY"))&($P($E($G(vobj(this,-100,"0*","AVGREPLY")),5,9999),$C(124))'=$P(vobj(this),$C(124),11))) S X=$P(vobj(this),$C(124),11) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("AVGREPLY",$$^MSG(979,"MTMSTAT.AVGREPLY"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","AVGTIME"))&($P($E($G(vobj(this,-100,"0*","AVGTIME")),5,9999),$C(124))'=$P(vobj(this),$C(124),7))),'($P(vobj(this),$C(124),7)=""),'(+$P(vobj(this),$C(124),7)=$P(vobj(this),$C(124),7))  S $P(vobj(this),$C(124),7)=$$vRCtrimNumber($P(vobj(this),$C(124),7))
 I ($D(vobj(this,-100,"0*","AVGTIME"))&($P($E($G(vobj(this,-100,"0*","AVGTIME")),5,9999),$C(124))'=$P(vobj(this),$C(124),7))) S X=$P(vobj(this),$C(124),7) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("AVGTIME",$$^MSG(979,"MTMSTAT.AVGTIME"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","MAXREPLY"))&($P($E($G(vobj(this,-100,"0*","MAXREPLY")),5,9999),$C(124))'=$P(vobj(this),$C(124),10))),'($P(vobj(this),$C(124),10)=""),'(+$P(vobj(this),$C(124),10)=$P(vobj(this),$C(124),10))  S $P(vobj(this),$C(124),10)=$$vRCtrimNumber($P(vobj(this),$C(124),10))
 I ($D(vobj(this,-100,"0*","MAXREPLY"))&($P($E($G(vobj(this,-100,"0*","MAXREPLY")),5,9999),$C(124))'=$P(vobj(this),$C(124),10))) S X=$P(vobj(this),$C(124),10) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("MAXREPLY",$$^MSG(979,"MTMSTAT.MAXREPLY"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","MAXTIME"))&($P($E($G(vobj(this,-100,"0*","MAXTIME")),5,9999),$C(124))'=$P(vobj(this),$C(124),6))),'($P(vobj(this),$C(124),6)=""),'(+$P(vobj(this),$C(124),6)=$P(vobj(this),$C(124),6))  S $P(vobj(this),$C(124),6)=$$vRCtrimNumber($P(vobj(this),$C(124),6))
 I ($D(vobj(this,-100,"0*","MAXTIME"))&($P($E($G(vobj(this,-100,"0*","MAXTIME")),5,9999),$C(124))'=$P(vobj(this),$C(124),6))) S X=$P(vobj(this),$C(124),6) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("MAXTIME",$$^MSG(979,"MTMSTAT.MAXTIME"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","MINREPLY"))&($P($E($G(vobj(this,-100,"0*","MINREPLY")),5,9999),$C(124))'=$P(vobj(this),$C(124),9))),'($P(vobj(this),$C(124),9)=""),'(+$P(vobj(this),$C(124),9)=$P(vobj(this),$C(124),9))  S $P(vobj(this),$C(124),9)=$$vRCtrimNumber($P(vobj(this),$C(124),9))
 I ($D(vobj(this,-100,"0*","MINREPLY"))&($P($E($G(vobj(this,-100,"0*","MINREPLY")),5,9999),$C(124))'=$P(vobj(this),$C(124),9))) S X=$P(vobj(this),$C(124),9) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("MINREPLY",$$^MSG(979,"MTMSTAT.MINREPLY"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","MINTIME"))&($P($E($G(vobj(this,-100,"0*","MINTIME")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))),'($P(vobj(this),$C(124),5)=""),'(+$P(vobj(this),$C(124),5)=$P(vobj(this),$C(124),5))  S $P(vobj(this),$C(124),5)=$$vRCtrimNumber($P(vobj(this),$C(124),5))
 I ($D(vobj(this,-100,"0*","MINTIME"))&($P($E($G(vobj(this,-100,"0*","MINTIME")),5,9999),$C(124))'=$P(vobj(this),$C(124),5))) S X=$P(vobj(this),$C(124),5) I '(X="") S errmsg=$$VAL^DBSVER("N",12,0,,,,,2) I '(errmsg="") D vRCvalidateDDerr("MINTIME",$$^MSG(979,"MTMSTAT.MINTIME"_" "_errmsg))
 I ($D(vobj(this,-100,"0*","NUMMSG"))&($P($E($G(vobj(this,-100,"0*","NUMMSG")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))),'($P(vobj(this),$C(124),4)=""),'(+$P(vobj(this),$C(124),4)=$P(vobj(this),$C(124),4))  S $P(vobj(this),$C(124),4)=$$vRCtrimNumber($P(vobj(this),$C(124),4))
 I ($D(vobj(this,-100,"0*","NUMMSG"))&($P($E($G(vobj(this,-100,"0*","NUMMSG")),5,9999),$C(124))'=$P(vobj(this),$C(124),4))) S X=$P(vobj(this),$C(124),4) I '(X=""),(X'?1.6N),(X'?1"-"1.5N) D vRCvalidateDDerr("NUMMSG",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","NUMREPLY"))&($P($E($G(vobj(this,-100,"0*","NUMREPLY")),5,9999),$C(124))'=$P(vobj(this),$C(124),8))),'($P(vobj(this),$C(124),8)=""),'(+$P(vobj(this),$C(124),8)=$P(vobj(this),$C(124),8))  S $P(vobj(this),$C(124),8)=$$vRCtrimNumber($P(vobj(this),$C(124),8))
 I ($D(vobj(this,-100,"0*","NUMREPLY"))&($P($E($G(vobj(this,-100,"0*","NUMREPLY")),5,9999),$C(124))'=$P(vobj(this),$C(124),8))) S X=$P(vobj(this),$C(124),8) I '(X=""),(X'?1.6N),(X'?1"-"1.5N) D vRCvalidateDDerr("NUMREPLY",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","NUMSRV"))&($P($E($G(vobj(this,-100,"0*","NUMSRV")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))),'($P(vobj(this),$C(124),1)=""),'(+$P(vobj(this),$C(124),1)=$P(vobj(this),$C(124),1))  S $P(vobj(this),$C(124),1)=$$vRCtrimNumber($P(vobj(this),$C(124),1))
 I ($D(vobj(this,-100,"0*","NUMSRV"))&($P($E($G(vobj(this,-100,"0*","NUMSRV")),5,9999),$C(124))'=$P(vobj(this),$C(124),1))) S X=$P(vobj(this),$C(124),1) I '(X=""),(X'?1.3N),(X'?1"-"1.2N) D vRCvalidateDDerr("NUMSRV",$$^MSG(742,"N"))
 I ($D(vobj(this,-100,"0*","TIMEEND"))&($P($E($G(vobj(this,-100,"0*","TIMEEND")),5,9999),$C(124))'=$P(vobj(this),$C(124),3))) I ($L($P(vobj(this),$C(124),3))>12) D vRCvalidateDDerr("TIMEEND",$$^MSG(1076,12))
 I ($D(vobj(this,-100,"0*","TIMESTART"))&($P($E($G(vobj(this,-100,"0*","TIMESTART")),5,9999),$C(124))'=$P(vobj(this),$C(124),2))) I ($L($P(vobj(this),$C(124),2))>12) D vRCvalidateDDerr("TIMESTART",$$^MSG(1076,12))
 Q 
 ;
vRCvalidateDDerr(column,errmsg) ; 
 N ER S ER=0
 N RM S RM=""
 D SETERR^DBSEXECU("MTMSTAT","MSG",979,"MTMSTAT."_column_" "_errmsg)
 I ER D throwError($get(RM))
 Q 
 ;
vRCtrimNumber(str) ; 
 I ($E(str,1)="0") S str=$$vStrTrim(str,-1,"0") I (str="") S str="0"
 I (str["."),($E(str,$L(str))="0") S str=$$RTCHR^%ZFUNC(str,"0") I ($E(str,$L(str))=".") S str=$E(str,1,$L(str)-1) I (str="") S str="0"
 Q str
 ;
archive(archiveDir,archiveNum,archiveDate) ; 
 Q 0 ; Shell method
 ;
getArchiveFile(archiveTable,option,archiveKey) ; 
 Q "" ; Shell method
 ;
vRCkeyChanged(this,vRCparams,vRCaudit) ; 
 N vTp
 N newkeys N oldkeys N vRCauditIns
 N newKey1 S newKey1=vobj(this,-3)
 N oldKey1 S oldKey1=$S($D(vobj(this,-100,"1*","EFD")):$P($E(vobj(this,-100,"1*","EFD"),5,9999),$C(124)),1:vobj(this,-3))
 N newKey2 S newKey2=vobj(this,-4)
 N oldKey2 S oldKey2=$S($D(vobj(this,-100,"2*","MTMID")):$P($E(vobj(this,-100,"2*","MTMID"),5,9999),$C(124)),1:vobj(this,-4))
 N newKey3 S newKey3=vobj(this,-5)
 N oldKey3 S oldKey3=$S($D(vobj(this,-100,"3*","SVTYP")):$P($E(vobj(this,-100,"3*","SVTYP"),5,9999),$C(124)),1:vobj(this,-5))
 N newKey4 S newKey4=vobj(this,-6)
 N oldKey4 S oldKey4=$S($D(vobj(this,-100,"4*","SEQ")):$P($E(vobj(this,-100,"4*","SEQ"),5,9999),$C(124)),1:vobj(this,-6))
  N V1,V2,V3,V4 S V1=vobj(this,-3),V2=vobj(this,-4),V3=vobj(this,-5),V4=vobj(this,-6) I ($D(^MTMSTAT(V1,V2,V3,V4))#2) D throwError($$^MSG(2327))
 S newkeys=newKey1_","_newKey2_","_newKey3_","_newKey4
 S oldkeys=oldKey1_","_oldKey2_","_oldKey3_","_oldKey4
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
  S vobj(this,-5)=oldKey3
  S vobj(this,-6)=oldKey4
 S vRCparams=$$setPar^UCUTILN(vRCparams,"NOINDEX")
 I (("/"_vRCparams_"/")["/VALREQ/") D vRCchkReqForInsert(this)
 I (("/"_vRCparams_"/")["/VALDD/") D vRCvalidateDD(this,1)
 D vRCmiscValidations(this,vRCparams,1)
 D vRCupdateDB(this,1,vRCparams,.vRCaudit,.vRCauditIns)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
  S vobj(this,-5)=newKey3
  S vobj(this,-6)=newKey4
 N newrec S newrec=$$vReCp1(this)
 S vobj(newrec,-2)=0
 S vTp=($TL=0) TS:vTp (vobj):transactionid="CS" D vSave^RecordMTMSTAT(newrec,$$initPar^UCUTILN($$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/"))) K vobj(newrec,-100) S vobj(newrec,-2)=1 TC:vTp  
 D
 .	N %O S %O=1
 .	N ER S ER=0
 .	N RM S RM=""
 .	;   #ACCEPT Date=10/24/2008; Pgm=RussellDS; CR=30801; Group=ACCESS
 .	D CASUPD^DBSEXECU("MTMSTAT",oldkeys,newkeys)
 .	I ER D throwError($get(RM))
 .	Q 
  S vobj(this,-3)=oldKey1
  S vobj(this,-4)=oldKey2
  S vobj(this,-5)=oldKey3
  S vobj(this,-6)=oldKey4
 S vRCparams=$$initPar^UCUTILN("/NOVAL/NOCASDEL/NOJOURNAL/NOTRIGBEF/NOTRIGAFT/")
 D vRCdelete(this,vRCparams,.vRCaudit,1)
  S vobj(this,-3)=newKey1
  S vobj(this,-4)=newKey2
  S vobj(this,-5)=newKey3
  S vobj(this,-6)=newKey4
 K vobj(+$G(newrec)) Q 
 ;
throwError(MSG) ; 
 S $ZE="0,"_$ZPOS_","_"%PSL-E-DBFILER,"_$translate(MSG,",","~"),$EC=",U1001,"
 Q 
 ; ----------------
 ;  #OPTION ResultClass 1
vStrRep(object,p1,p2,p3,p4,qt) ; String.replace
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I p3<0 Q object
 I $L(p1)=1,$L(p2)<2,'p3,'p4,(qt="") Q $translate(object,p1,p2)
 ;
 N y S y=0
 F  S y=$$vStrFnd(object,p1,y,p4,qt) Q:y=0  D
 .	S object=$E(object,1,y-$L(p1)-1)_p2_$E(object,y,1048575)
 .	S y=y+$L(p2)-$L(p1)
 .	I p3 S p3=p3-1 I p3=0 S y=$L(object)+1
 .	Q 
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx1() ; {Cache}%CACHE("CTBLSVTYP").isDefined("CTBLSVTYP","SVTYP=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa2(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vCaEx2() ; {Cache}%CACHE("CTBLSVTYP").isDefined("CTBLSVTYP","SVTYP=:X")
 N vret
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 N vRec,vop1 S vRec=$$vCa2(X,.vop1)
 S vret=$G(vop1)=1 Q vret
 ; ----------------
 ;  #OPTION ResultClass 1
vStrTrim(object,p1,p2) ; String.trim
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 I p1'<0 S object=$$RTCHR^%ZFUNC(object,p2)
 I p1'>0 F  Q:$E(object,1)'=p2  S object=$E(object,2,1048575)
 Q object
 ; ----------------
 ;  #OPTION ResultClass 1
vStrFnd(object,p1,p2,p3,qt) ; String.find
 ;
 ;  #OPTIMIZE FUNCTIONS OFF
 ;
 I (p1="") Q $S(p2<1:1,1:+p2)
 I p3 S object=$ZCONVERT(object,"U") S p1=$ZCONVERT(p1,"U")
 S p2=$F(object,p1,p2)
 I '(qt=""),$L($E(object,1,p2-1),qt)#2=0 D
 .	F  S p2=$F(object,p1,p2) Q:p2=0!($L($E(object,1,p2-1),qt)#2) 
 .	Q 
 Q p2
 ;
vCa2(v1,v2out) ; voXN = ({Cache}%CACHE("CTBLSVTYP").getRecord(CTBLSVTYP,1)
 ;
 I '$D(%CACHE("CTBLSVTYP",v1)) D
 .  I $G(%CACHE("CTBLSVTYP"))>100 KILL %CACHE("CTBLSVTYP")
 .  S %CACHE("CTBLSVTYP")=$G(%CACHE("CTBLSVTYP"))+1
 .  S %CACHE("CTBLSVTYP",v1)=$$vRCgetRecord1Opt^RecordCTBLSVTYP(v1,0,.v2out),%CACHE("CTBLSVTYP",v1,-2)=v2out
 ;
 ;
 E  S v2out=%CACHE("CTBLSVTYP",v1,-2)
 Q %CACHE("CTBLSVTYP",v1)
 ;
vReCp1(v1) ; RecordMTMSTAT.copy: MTMSTAT
 ;
 Q $$copy^UCGMR(this)
