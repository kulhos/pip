DBSPROT	
		 
	/*
	Data Item Protection Utility
	
	---- Revision History -------------------------------------------------
	12/16/05 - RussellDS - CR18400
		   Converted to PSL.

	-----------------------------------------------------------------------
	*/

	quit				// No entry from top
	
	
public CREATE

	/*
	Create data item protection definitions
	*/
	
	type String rebuild()
	
	for  quit:'$$SCREEN(0, .rebuild())
	
	if (rebuild.data() > 0) do BUILD0(.rebuild())
	
	quit
	
		
public MODIFY

	/*
	Modify data item protection definitions
	*/
	
	type String rebuild()
	
	for  quit:'$$SCREEN(1, .rebuild())
	
	if (rebuild.data() > 0) do BUILD0(.rebuild())

	quit
	
	
public DELETE

	/*
	Delete Definitions
	*/
	
	type String DINAM, FID, GROUP, rebuild()
	
	for  quit:'$$SCREEN(3, .rebuild(), .FID, .DINAM, .GROUP)
	
	if (rebuild.data() > 0) do BUILD0(.rebuild())
	
	quit


public LIST

	/*
	List definition
	*/

	type String RID = "DBTBL14"
	
	do DRV^URID				// Run report
	
	quit


public BUILD

	/*
	Build Run-time Routine
	*/

	do ^DBSPROT3
	
	quit
	
	
public BUILDALL

	/*
	Utility to recompile data item protection routines
	*/
	
	type ResultSet rs = Db.select("DISTINCT FID", "DBTBL14", "PLIBS='SYSDEV'")
	
	while rs.next() do BUILD^DBSPROT3(rs.getCol("FID"))
	
	quit


BUILD0(String rebuild())	// List of element to rebuild

	/*
	Rebuild elements
	*/
	
	type String FID = ""
	
	for  set FID = rebuild(FID).order() quit:FID.isNull()  do BUILD^DBSPROT3(FID)
	
	quit
	
	
SCREEN(Number %ProcessMode,	// Process Mode
       String rebuild(),	// FID rebuild list	/MECH=REFARR:W
       String FID,		// Table name		/NOREQ/MECH=REF:W
       String DINAM,		// Column name		/NOREQ/MECH=REF:W
       String GROUP)		// Protection group	/NOREQ/MECH=REF:W
       
	/*
	Build and run input screen.  Based on results, rebuild runtime program.
	
	RETURNS:
		. $$		Quit indicator		/TYP=L
				  0 = quit
				  1 = keep going
	*/
	
	type Number %FRAME, %REPEAT, I, OLNTB, PRTOPT
	type String %READ, %TAB(), DIPROT(), GROUPDES, PROTDI(), PROTFL(), VFMQ, ZMSG1
	
	type RecordDBTBL14Q dbtbl14q()
	
	set (DINAM, FID, GROUP) = ""
	
	set %REPEAT = 12
	set PRTOPT = %ProcessMode
	
	// Read Access
	set DIPROT(1) = $$^MSG(6357)
	// No Access
	set DIPROT(2) = $$^MSG(5186)
	// ~p1Enter * for record level protection
	set ZMSG1 = $$^MSG(5190, "     ")
	
	set %TAB("FID") = ".FID1/TBL=[DBTBL1]/XPP=D PP1^DBSPROT"
	set %TAB("DINAM") = ".ORGDI1/TBL=[DBTBL1D]:QUERY ""[DBTBL1D]FID=<<FID>>"""
	set %TAB("GROUP") = ".DQGRP1/TBL=[DBTBL14]:QUERY ""[DBTBL14]FID=<<FID>> AND [DBTBL14]DINAM=<<DINAM>>""/XPP=D PP3^DBSPROT/MIN=1/MAX=99"

	if (%ProcessMode = 0) set %TAB("DINAM") = %TAB("DINAM")_"/XPP=D PP2^DBSPROT"
	else  do {

		// Create look-up table for modify/delete
		
		type ResultSet rs = Db.select("DISTINCT FID", "DBTBL14", "PLIBS='SYSDEV'")
		
		while rs.next() do {
			
			type String FID = rs.getCol("FID")
			
			type RecordDBTBL1 dbtbl1 = Db.getRecord("DBTBL1", "%LIBS='SYSDEV',FID=:FID")
			
			set PROTFL(FID) = dbtbl1.des
		}

		set %TAB("FID") = %TAB("FID")_"/TBL=PROTFL("
		set %TAB("DINAM") = %TAB("DINAM")_"/TBL=PROTDI("
	}

	set %READ = "@@%FN,,FID/REQ,,DINAM/REQ,,GROUP/REQ,"
	set %FRAME = 2

	do ^UTLREAD if (VFMQ = "Q") quit 0				// Done

	if (FID.isNull() ! DINAM.isNull() ! GROUP.isNull()) quit 0	// Done

	// Record Level Protection
	if (GROUP = "*") set GROUPDES = $$^MSG(5188)
	else  set GROUPDES = ""
	
	type RecordDBTBL14 dbtbl14 = Db.getRecord("DBTBL14", "PLIBS='SYSDEV',FID=:FID,DINAM=:DINAM,GROUP=:GROUP", 1)
	
	for I = 1:1:%REPEAT set dbtbl14q(I) = Db.getRecord("DBTBL14Q", "PLIBS='SYSDEV',FID=:FID,DINAM=:DINAM,GROUP=:GROUP,QUERY=:I", 1)

	do DRV^USID(%ProcessMode, "DBTBL14", .dbtbl14q(), .dbtbl14)

	if (VFMQ = "Q") quit 0			// Done
	
	set rebuild(FID) = ""			// Flag to rebuild
	
	do Runtime.start("CS")
	
	if (PRTOPT = 3) do {			// Delete definition
	
		do Db.delete("DBTBL14Q", "PLIBS='SYSDEV' AND FID=:FID AND DINAM=:DINAM AND GROUP=:GROUP")
		do Db.delete("DBTBL14", "PLIBS='SYSDEV' AND FID=:FID AND DINAM=:DINAM AND GROUP=:GROUP")
	}
	
	else  do {				// File data
		
		type Number SEQ
		
		set dbtbl14.date = %CurrentDate
		set dbtbl14.uid = %UserID
		
		do dbtbl14.save()
		
		// Remove old queries first
		do Db.delete("DBTBL14Q", "PLIBS='SYSDEV' AND FID=:FID AND DINAM=:DINAM AND GROUP=:GROUP") 

		set SEQ = 0
		for I = 1:1:%REPEAT if 'dbtbl14q(I).qrydesc.isNull() do {
		
			set SEQ = SEQ + 1
			set dbtbl14q(I).query = SEQ
			
			do dbtbl14q(I).save()
		}
		
		// Keep a single blank query, at least for report DBTBL14
		if (SEQ = 0) do dbtbl14q(1).save()
	}


	do Runtime.commit()
	
	quit 1					// Continue
	
	
PP1	// FID post processor

	type public Boolean ER
	type public String PROTDI(), RM, X

	quit:X.isNull()
	
	if $$PGM^UPID(X).isNull() do { quit
		
		set ER = 1
		// Set up protection program name first (file definition control page)
		set RM = $$^MSG(2506)
	}

	// Setup look-up table 
	kill PROTDI
	
	type ResultSet rs = Db.select("DINAM", "DBTBL14", "PLIBS='SYSDEV' AND FID=:X")
	
	while rs.next() do {
		
		type String DINAM = rs.getCol("DINAM")
		
		// Record Protection
		if (DINAM = "*") set PROTDI(DINAM) = $$^MSG(5189)
		else  do {
			
			type RecordDBTBL1D dbtbl1d = Db.getRecord("DBTBL1D", "%LIBS='SYSDEV',FID=:X,DI=:DINAM")
			
			set PROTDI(DINAM) = dbtbl1d.des
		}
	}
	
	quit


PP2	// DINAM post processor

	type public Number NI
	type public String %NOPRMT, FID, I(), RM, X

	if X.isNull() do {
		
		set NI = 0
		set %NOPRMT = "Q"
	}
	else  if (X = "*") do {
		
		// Record level protection
		set RM = $$^MSG(5188)
		set I(3) = ""
	}
	
	else  if Db.isDefined("DBTBL1D", "%LIBS='SYSDEV' AND FID=:FID AND DI=:X") set I(3) = ""
	
	quit


PP3	// GROUP post processor
	
	type public Boolean ER
	type public Number PRTOPT
	type public String DINAM, FID, I(), RM, X
	
	quit:X.isNull()
	quit:(PRTOPT > 0)
	
	set I(3) = ""

	quit:'Db.isDefined("DBTBL14", "PLIBS='SYSDEV' AND FID=:FID AND DINAM=:DINAM AND GROUP=:X")

	set ER = 1
	// Protection definition already created
	set RM = $$^MSG("2278")
	
	quit
 #OPTION ResultClass ON
public String vSIG()	quit "60257^34885^Dan Russell^5734"	// Signature - LTD^TIME^USER^SIZE
