//DO NOT MODIFY  After Insert|0|0|0|1|0|0||||
	/*
	---- Revision History -------------------------------------------------
	
	03/31/2008 - RussellDS - CR30801
		Modified additem and remitem to new method form.
		
		Changed record object references to 'this'.
		
		Removed old revision history.
	*/
	
	// If this is a Master Dictionary, distribute changes to everyone
	type String ZVAL
	
	type ResultSet rs=Db.select("MDD", "DBTBL1D", "%LIBS='SYSDEV' AND MDDFID=:this.fid AND MDD=:this.di") 

	if rs.next() do DSTMDD^DBSDF(this.fid, this.di)

	// Copy this data item to its descendants
	type ResultSet rs2 = Db.select("FID", "DBTBL1", "%LIBS='SYSDEV' AND PARFID=:this.fid")
	
	while rs2.next()  do {
		
		type Number childMode
		type String fid = rs2.getCol("FID")
		
		type RecordDBTBL1D child = Db.getRecord("DBTBL1D", "%LIBS='SYSDEV',FID=:fid, DI=:this.di", 1)
		
		set childMode = child.getMode()
		set child = this.copy()
		set child.fid = fid
		
		do child.setMode(childMode)
		do child.save()
	}
	
	// Check required indicator (node 102)
	quit:(this.di = " ") 

	if this.req do {
		
		// Dummy key
		quit:((this.di.extract(1)="""") or (this.di ? 1N.E))
		
		type RecordDBTBL1 dbtbl1 = Db.getRecord("DBTBL1", "%LIBS='SYSDEV',FID=:this.fid")
		
		set ZVAL = dbtbl1.listreq

		// Add it to the list
		do this.ADDITEM(this.di, .ZVAL, dbtbl1d)
		
		set dbtbl1.listreq = ZVAL
		
		do dbtbl1.save()
	}

	// Check items with default value (node 101)
	if 'this.dft.isNull() do {
	
		type RecordDBTBL1 dbtbl1 = Db.getRecord("DBTBL1", "%LIBS='SYSDEV',FID=:this.fid")
		
		set ZVAL = dbtbl1.listdft
	
		do this.ADDITEM(this.di, .ZVAL, dbtbl1d)
		
		set dbtbl1.listdft = ZVAL
		
		do dbtbl1.save()
	}

	quit
	

private void ADDITEM(String item,
		     ret String list,
		     RecordDBTBL1D dbtbl1d)

	type Number i
	type String z

	if list.isNull() set list = item quit
	
	// Already in the list
	if {List}list.contains(item) quit

	for i = 1:1:list.length(",") set z(list.piece(",", i)) = ""
	
	// Add it to the list
	set z(item) = ""
	set (i, list) = ""
	for  set i = z(i).order() quit:i.isNull()  set list = list_","_i
	set list = list.extract(2, list.length())
	
	quit
	

private void REMITEM(String item,
		     ret String list,
		     RecordDBTBL1D dbtbl1d)

	// Not in the list
	if '{List}list.contains(item) quit

	set list = ","_list_","
	set item = ","_item_","
	
	// Remove it from the list
	set list = list.piece(item, 1)_","_list.piece(item, 2, 99)
	
	// Remove extra comma
	set list = list.extract(2, list.length()-1)
	
	quit
